>>> help('PyQt5.QtCore')
Help on module PyQt5.QtCore in PyQt5:

NAME
    PyQt5.QtCore

CLASSES
    builtins.int(builtins.object)
        QtMsgType
    builtins.object
        pyqtBoundSignal
        pyqtProperty
        pyqtSignal
    sip.simplewrapper(builtins.object)
        QAbstractNativeEventFilter
        QBasicTimer
        QBitArray
        QByteArray
        QByteArrayMatcher
        QCollator
        QCollatorSortKey
        QCommandLineOption
        QCommandLineParser
        QCryptographicHash
        QDataStream
        QDate
        QDateTime
        QDeadlineTimer
        QDir
        QDirIterator
        QEasingCurve
        QElapsedTimer
        QEventLoopLocker
        QFileInfo
        QGenericArgument
        QGenericReturnArgument
        QItemSelection
        QItemSelectionRange
        QJsonDocument
        QJsonParseError
        QJsonValue
        QLibraryInfo
        QLine
        QLineF
        QLocale
        QLockFile
        QMargins
        QMarginsF
        QMessageAuthenticationCode
        QMessageLogContext
        QMessageLogger
        QMetaClassInfo
        QMetaEnum
        QMetaMethod
        QMetaObject
        QMetaProperty
        QMetaType
        QMimeDatabase
        QMimeType
        QModelIndex
        QMutex
        QMutexLocker
        QOperatingSystemVersion
        QPersistentModelIndex
        QPoint
        QPointF
        QProcessEnvironment
        QRandomGenerator
        QReadLocker
        QReadWriteLock
        QRect
        QRectF
        QRegExp
        QRegularExpression
        QRegularExpressionMatch
        QRegularExpressionMatchIterator
        QResource
        QSemaphore
        QSemaphoreReleaser
        QSignalBlocker
        QSize
        QSizeF
        QStandardPaths
        QStorageInfo
        QSysInfo
        QSystemSemaphore
        QTemporaryDir
        QTextBoundaryFinder
        QTextStream
        QTextStreamManipulator
        QTime
        QTimeZone
        QUrl
        QUrlQuery
        QUuid
        QVariant
        QVersionNumber
        QWaitCondition
        QWriteLocker
        QXmlStreamAttribute
        QXmlStreamAttributes
        QXmlStreamEntityDeclaration
        QXmlStreamEntityResolver
        QXmlStreamNamespaceDeclaration
        QXmlStreamNotationDeclaration
        QXmlStreamReader
        QXmlStreamWriter
        Qt
    sip.wrapper(sip.simplewrapper)
        QEvent
            QChildEvent
            QDynamicPropertyChangeEvent
            QTimerEvent
        QObject
            QAbstractAnimation
                QAnimationGroup
                    QParallelAnimationGroup
                    QSequentialAnimationGroup
                QPauseAnimation
                QVariantAnimation
                    QPropertyAnimation
            QAbstractEventDispatcher
            QAbstractItemModel
                QAbstractListModel
                    QStringListModel
                QAbstractProxyModel
                    QIdentityProxyModel
                    QSortFilterProxyModel
                QAbstractTableModel
            QAbstractState
                QFinalState
                QHistoryState
                QState
                    QStateMachine
            QAbstractTransition
                QEventTransition
                QSignalTransition
            QCoreApplication
            QEventLoop
            QFileSelector
            QFileSystemWatcher
            QIODevice
                QBuffer
                QFileDevice
                    QFile
                        QTemporaryFile
                    QSaveFile
                QProcess
            QItemSelectionModel
            QLibrary
            QMimeData
            QObjectCleanupHandler
            QPluginLoader
            QSettings
            QSharedMemory
            QSignalMapper
            QSocketNotifier
            QThread
            QThreadPool
            QTimeLine
            QTimer
            QTranslator
        QRunnable
        QTextCodec
        QTextDecoder
        QTextEncoder
    
    class QAbstractAnimation(QObject)
     |  QAbstractAnimation(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QAbstractAnimation
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  currentLoop(...)
     |      currentLoop(self) -> int
     |  
     |  currentLoopChanged = <unbound PYQT_SIGNAL currentLoopChanged(int)>
     |  currentLoopTime(...)
     |      currentLoopTime(self) -> int
     |  
     |  currentTime(...)
     |      currentTime(self) -> int
     |  
     |  direction(...)
     |      direction(self) -> QAbstractAnimation.Direction
     |  
     |  directionChanged = <unbound PYQT_SIGNAL directionChanged(QAbstractAnimation::Direction)>
     |  duration(...)
     |      duration(self) -> int
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  finished = <unbound PYQT_SIGNAL finished()>
     |  group(...)
     |      group(self) -> QAnimationGroup
     |  
     |  loopCount(...)
     |      loopCount(self) -> int
     |  
     |  pause(...)
     |      pause(self)
     |  
     |  resume(...)
     |      resume(self)
     |  
     |  setCurrentTime(...)
     |      setCurrentTime(self, int)
     |  
     |  setDirection(...)
     |      setDirection(self, QAbstractAnimation.Direction)
     |  
     |  setLoopCount(...)
     |      setLoopCount(self, int)
     |  
     |  setPaused(...)
     |      setPaused(self, bool)
     |  
     |  start(...)
     |      start(self, policy: QAbstractAnimation.DeletionPolicy = QAbstractAnimation.KeepWhenStopped)
     |  
     |  state(...)
     |      state(self) -> QAbstractAnimation.State
     |  
     |  stateChanged = <unbound PYQT_SIGNAL stateChanged(QAbstractAnimation::State,QAbstractAnimation::State)>
     |  stop(...)
     |      stop(self)
     |  
     |  totalDuration(...)
     |      totalDuration(self) -> int
     |  
     |  updateCurrentTime(...)
     |      updateCurrentTime(self, int)
     |  
     |  updateDirection(...)
     |      updateDirection(self, QAbstractAnimation.Direction)
     |  
     |  updateState(...)
     |      updateState(self, QAbstractAnimation.State, QAbstractAnimation.State)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Backward = 1
     |  
     |  DeleteWhenStopped = 1
     |  
     |  DeletionPolicy = <class 'PyQt5.QtCore.QAbstractAnimation.DeletionPolic...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Direction = <class 'PyQt5.QtCore.QAbstractAnimation.Direction'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Forward = 0
     |  
     |  KeepWhenStopped = 0
     |  
     |  Paused = 1
     |  
     |  Running = 2
     |  
     |  State = <class 'PyQt5.QtCore.QAbstractAnimation.State'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Stopped = 0
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QAbstractEventDispatcher(QObject)
     |  QAbstractEventDispatcher(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QAbstractEventDispatcher
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  aboutToBlock = <unbound PYQT_SIGNAL aboutToBlock()>
     |  awake = <unbound PYQT_SIGNAL awake()>
     |  closingDown(...)
     |      closingDown(self)
     |  
     |  filterNativeEvent(...)
     |      filterNativeEvent(self, Union[QByteArray, bytes, bytearray], sip.voidptr) -> Tuple[bool, int]
     |  
     |  flush(...)
     |      flush(self)
     |  
     |  hasPendingEvents(...)
     |      hasPendingEvents(self) -> bool
     |  
     |  installNativeEventFilter(...)
     |      installNativeEventFilter(self, QAbstractNativeEventFilter)
     |  
     |  instance(...)
     |      instance(thread: QThread = None) -> QAbstractEventDispatcher
     |  
     |  interrupt(...)
     |      interrupt(self)
     |  
     |  processEvents(...)
     |      processEvents(self, Union[QEventLoop.ProcessEventsFlags, QEventLoop.ProcessEventsFlag]) -> bool
     |  
     |  registerSocketNotifier(...)
     |      registerSocketNotifier(self, QSocketNotifier)
     |  
     |  registerTimer(...)
     |      registerTimer(self, int, Qt.TimerType, QObject) -> int
     |      registerTimer(self, int, int, Qt.TimerType, QObject)
     |  
     |  registeredTimers(...)
     |      registeredTimers(self, QObject) -> List[QAbstractEventDispatcher.TimerInfo]
     |  
     |  remainingTime(...)
     |      remainingTime(self, int) -> int
     |  
     |  removeNativeEventFilter(...)
     |      removeNativeEventFilter(self, QAbstractNativeEventFilter)
     |  
     |  startingUp(...)
     |      startingUp(self)
     |  
     |  unregisterSocketNotifier(...)
     |      unregisterSocketNotifier(self, QSocketNotifier)
     |  
     |  unregisterTimer(...)
     |      unregisterTimer(self, int) -> bool
     |  
     |  unregisterTimers(...)
     |      unregisterTimers(self, QObject) -> bool
     |  
     |  wakeUp(...)
     |      wakeUp(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  TimerInfo = <class 'PyQt5.QtCore.QAbstractEventDispatcher.TimerInfo'>
     |      QAbstractEventDispatcher.TimerInfo(int, int, Qt.TimerType)
     |      QAbstractEventDispatcher.TimerInfo(QAbstractEventDispatcher.TimerInfo)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QAbstractItemModel(QObject)
     |  QAbstractItemModel(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QAbstractItemModel
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  beginInsertColumns(...)
     |      beginInsertColumns(self, QModelIndex, int, int)
     |  
     |  beginInsertRows(...)
     |      beginInsertRows(self, QModelIndex, int, int)
     |  
     |  beginMoveColumns(...)
     |      beginMoveColumns(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  beginMoveRows(...)
     |      beginMoveRows(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  beginRemoveColumns(...)
     |      beginRemoveColumns(self, QModelIndex, int, int)
     |  
     |  beginRemoveRows(...)
     |      beginRemoveRows(self, QModelIndex, int, int)
     |  
     |  beginResetModel(...)
     |      beginResetModel(self)
     |  
     |  buddy(...)
     |      buddy(self, QModelIndex) -> QModelIndex
     |  
     |  canDropMimeData(...)
     |      canDropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool
     |  
     |  canFetchMore(...)
     |      canFetchMore(self, QModelIndex) -> bool
     |  
     |  changePersistentIndex(...)
     |      changePersistentIndex(self, QModelIndex, QModelIndex)
     |  
     |  changePersistentIndexList(...)
     |      changePersistentIndexList(self, Iterable[QModelIndex], Iterable[QModelIndex])
     |  
     |  checkIndex(...)
     |      checkIndex(self, QModelIndex, options: Union[QAbstractItemModel.CheckIndexOptions, QAbstractItemModel.CheckIndexOption] = QAbstractItemModel.CheckIndexOption.NoOption) -> bool
     |  
     |  columnCount(...)
     |      columnCount(self, parent: QModelIndex = QModelIndex()) -> int
     |  
     |  columnsAboutToBeInserted = <unbound PYQT_SIGNAL columnsAboutToBeInserted(QModelIndex,int,int)>
     |  columnsAboutToBeMoved = <unbound PYQT_SIGNAL columnsAboutToBeMoved(QModelIndex,int,int,QModelIndex,int)>
     |  columnsAboutToBeRemoved = <unbound PYQT_SIGNAL columnsAboutToBeRemoved(QModelIndex,int,int)>
     |  columnsInserted = <unbound PYQT_SIGNAL columnsInserted(QModelIndex,int,int)>
     |  columnsMoved = <unbound PYQT_SIGNAL columnsMoved(QModelIndex,int,int,QModelIndex,int)>
     |  columnsRemoved = <unbound PYQT_SIGNAL columnsRemoved(QModelIndex,int,int)>
     |  createIndex(...)
     |      createIndex(self, int, int, object: object = 0) -> QModelIndex
     |  
     |  data(...)
     |      data(self, QModelIndex, role: int = Qt.DisplayRole) -> Any
     |  
     |  dataChanged = <unbound PYQT_SIGNAL dataChanged(QModelIndex,QModelIndex,QVector<int>)>
     |  decodeData(...)
     |      decodeData(self, int, int, QModelIndex, QDataStream) -> bool
     |  
     |  dropMimeData(...)
     |      dropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool
     |  
     |  encodeData(...)
     |      encodeData(self, Iterable[QModelIndex], QDataStream)
     |  
     |  endInsertColumns(...)
     |      endInsertColumns(self)
     |  
     |  endInsertRows(...)
     |      endInsertRows(self)
     |  
     |  endMoveColumns(...)
     |      endMoveColumns(self)
     |  
     |  endMoveRows(...)
     |      endMoveRows(self)
     |  
     |  endRemoveColumns(...)
     |      endRemoveColumns(self)
     |  
     |  endRemoveRows(...)
     |      endRemoveRows(self)
     |  
     |  endResetModel(...)
     |      endResetModel(self)
     |  
     |  fetchMore(...)
     |      fetchMore(self, QModelIndex)
     |  
     |  flags(...)
     |      flags(self, QModelIndex) -> Qt.ItemFlags
     |  
     |  hasChildren(...)
     |      hasChildren(self, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  hasIndex(...)
     |      hasIndex(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  headerData(...)
     |      headerData(self, int, Qt.Orientation, role: int = Qt.DisplayRole) -> Any
     |  
     |  headerDataChanged = <unbound PYQT_SIGNAL headerDataChanged(Qt::Orientation,int,int)>
     |  index(...)
     |      index(self, int, int, parent: QModelIndex = QModelIndex()) -> QModelIndex
     |  
     |  insertColumn(...)
     |      insertColumn(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertColumns(...)
     |      insertColumns(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertRow(...)
     |      insertRow(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertRows(...)
     |      insertRows(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  itemData(...)
     |      itemData(self, QModelIndex) -> Dict[int, Any]
     |  
     |  layoutAboutToBeChanged = <unbound PYQT_SIGNAL layoutAboutToBeChanged(QLis...odelIndex>,QAbstractItemModel::LayoutChangeHint)>
     |  layoutChanged = <unbound PYQT_SIGNAL layoutChanged(QList<QPersis...odelIndex>,QAbstractItemModel::LayoutChangeHint)>
     |  match(...)
     |      match(self, QModelIndex, int, Any, hits: int = 1, flags: Union[Qt.MatchFlags, Qt.MatchFlag] = Qt.MatchStartsWith|Qt.MatchWrap) -> List[QModelIndex]
     |  
     |  mimeData(...)
     |      mimeData(self, Iterable[QModelIndex]) -> QMimeData
     |  
     |  mimeTypes(...)
     |      mimeTypes(self) -> List[str]
     |  
     |  modelAboutToBeReset = <unbound PYQT_SIGNAL modelAboutToBeReset()>
     |  modelReset = <unbound PYQT_SIGNAL modelReset()>
     |  moveColumn(...)
     |      moveColumn(self, QModelIndex, int, QModelIndex, int) -> bool
     |  
     |  moveColumns(...)
     |      moveColumns(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  moveRow(...)
     |      moveRow(self, QModelIndex, int, QModelIndex, int) -> bool
     |  
     |  moveRows(...)
     |      moveRows(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  parent(...)
     |      parent(self, QModelIndex) -> QModelIndex
     |      parent(self) -> QObject
     |  
     |  persistentIndexList(...)
     |      persistentIndexList(self) -> List[QModelIndex]
     |  
     |  removeColumn(...)
     |      removeColumn(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeColumns(...)
     |      removeColumns(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeRow(...)
     |      removeRow(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeRows(...)
     |      removeRows(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  resetInternalData(...)
     |      resetInternalData(self)
     |  
     |  revert(...)
     |      revert(self)
     |  
     |  roleNames(...)
     |      roleNames(self) -> Dict[int, QByteArray]
     |  
     |  rowCount(...)
     |      rowCount(self, parent: QModelIndex = QModelIndex()) -> int
     |  
     |  rowsAboutToBeInserted = <unbound PYQT_SIGNAL rowsAboutToBeInserted(QModelIndex,int,int)>
     |  rowsAboutToBeMoved = <unbound PYQT_SIGNAL rowsAboutToBeMoved(QModelIndex,int,int,QModelIndex,int)>
     |  rowsAboutToBeRemoved = <unbound PYQT_SIGNAL rowsAboutToBeRemoved(QModelIndex,int,int)>
     |  rowsInserted = <unbound PYQT_SIGNAL rowsInserted(QModelIndex,int,int)>
     |  rowsMoved = <unbound PYQT_SIGNAL rowsMoved(QModelIndex,int,int,QModelIndex,int)>
     |  rowsRemoved = <unbound PYQT_SIGNAL rowsRemoved(QModelIndex,int,int)>
     |  setData(...)
     |      setData(self, QModelIndex, Any, role: int = Qt.EditRole) -> bool
     |  
     |  setHeaderData(...)
     |      setHeaderData(self, int, Qt.Orientation, Any, role: int = Qt.EditRole) -> bool
     |  
     |  setItemData(...)
     |      setItemData(self, QModelIndex, Dict[int, Any]) -> bool
     |  
     |  sibling(...)
     |      sibling(self, int, int, QModelIndex) -> QModelIndex
     |  
     |  sort(...)
     |      sort(self, int, order: Qt.SortOrder = Qt.AscendingOrder)
     |  
     |  span(...)
     |      span(self, QModelIndex) -> QSize
     |  
     |  submit(...)
     |      submit(self) -> bool
     |  
     |  supportedDragActions(...)
     |      supportedDragActions(self) -> Qt.DropActions
     |  
     |  supportedDropActions(...)
     |      supportedDropActions(self) -> Qt.DropActions
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  CheckIndexOption = <enum 'CheckIndexOption'>
     |      An enumeration.
     |  
     |  CheckIndexOptions = <class 'PyQt5.QtCore.QAbstractItemModel.CheckIndex...
     |      QAbstractItemModel.CheckIndexOptions()
     |      QAbstractItemModel.CheckIndexOptions(Union[QAbstractItemModel.CheckIndexOptions, QAbstractItemModel.CheckIndexOption])
     |      QAbstractItemModel.CheckIndexOptions(QAbstractItemModel.CheckIndexOptions)
     |  
     |  HorizontalSortHint = 2
     |  
     |  LayoutChangeHint = <class 'PyQt5.QtCore.QAbstractItemModel.LayoutChang...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NoLayoutChangeHint = 0
     |  
     |  VerticalSortHint = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QAbstractListModel(QAbstractItemModel)
     |  QAbstractListModel(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QAbstractListModel
     |      QAbstractItemModel
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  columnCount(...)
     |  
     |  dropMimeData(...)
     |      dropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool
     |  
     |  flags(...)
     |      flags(self, QModelIndex) -> Qt.ItemFlags
     |  
     |  hasChildren(...)
     |  
     |  index(...)
     |      index(self, int, column: int = 0, parent: QModelIndex = QModelIndex()) -> QModelIndex
     |  
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  sibling(...)
     |      sibling(self, int, int, QModelIndex) -> QModelIndex
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractItemModel:
     |  
     |  beginInsertColumns(...)
     |      beginInsertColumns(self, QModelIndex, int, int)
     |  
     |  beginInsertRows(...)
     |      beginInsertRows(self, QModelIndex, int, int)
     |  
     |  beginMoveColumns(...)
     |      beginMoveColumns(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  beginMoveRows(...)
     |      beginMoveRows(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  beginRemoveColumns(...)
     |      beginRemoveColumns(self, QModelIndex, int, int)
     |  
     |  beginRemoveRows(...)
     |      beginRemoveRows(self, QModelIndex, int, int)
     |  
     |  beginResetModel(...)
     |      beginResetModel(self)
     |  
     |  buddy(...)
     |      buddy(self, QModelIndex) -> QModelIndex
     |  
     |  canDropMimeData(...)
     |      canDropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool
     |  
     |  canFetchMore(...)
     |      canFetchMore(self, QModelIndex) -> bool
     |  
     |  changePersistentIndex(...)
     |      changePersistentIndex(self, QModelIndex, QModelIndex)
     |  
     |  changePersistentIndexList(...)
     |      changePersistentIndexList(self, Iterable[QModelIndex], Iterable[QModelIndex])
     |  
     |  checkIndex(...)
     |      checkIndex(self, QModelIndex, options: Union[QAbstractItemModel.CheckIndexOptions, QAbstractItemModel.CheckIndexOption] = QAbstractItemModel.CheckIndexOption.NoOption) -> bool
     |  
     |  columnsAboutToBeInserted = <unbound PYQT_SIGNAL columnsAboutToBeInserted(QModelIndex,int,int)>
     |  columnsAboutToBeMoved = <unbound PYQT_SIGNAL columnsAboutToBeMoved(QModelIndex,int,int,QModelIndex,int)>
     |  columnsAboutToBeRemoved = <unbound PYQT_SIGNAL columnsAboutToBeRemoved(QModelIndex,int,int)>
     |  columnsInserted = <unbound PYQT_SIGNAL columnsInserted(QModelIndex,int,int)>
     |  columnsMoved = <unbound PYQT_SIGNAL columnsMoved(QModelIndex,int,int,QModelIndex,int)>
     |  columnsRemoved = <unbound PYQT_SIGNAL columnsRemoved(QModelIndex,int,int)>
     |  createIndex(...)
     |      createIndex(self, int, int, object: object = 0) -> QModelIndex
     |  
     |  data(...)
     |      data(self, QModelIndex, role: int = Qt.DisplayRole) -> Any
     |  
     |  dataChanged = <unbound PYQT_SIGNAL dataChanged(QModelIndex,QModelIndex,QVector<int>)>
     |  decodeData(...)
     |      decodeData(self, int, int, QModelIndex, QDataStream) -> bool
     |  
     |  encodeData(...)
     |      encodeData(self, Iterable[QModelIndex], QDataStream)
     |  
     |  endInsertColumns(...)
     |      endInsertColumns(self)
     |  
     |  endInsertRows(...)
     |      endInsertRows(self)
     |  
     |  endMoveColumns(...)
     |      endMoveColumns(self)
     |  
     |  endMoveRows(...)
     |      endMoveRows(self)
     |  
     |  endRemoveColumns(...)
     |      endRemoveColumns(self)
     |  
     |  endRemoveRows(...)
     |      endRemoveRows(self)
     |  
     |  endResetModel(...)
     |      endResetModel(self)
     |  
     |  fetchMore(...)
     |      fetchMore(self, QModelIndex)
     |  
     |  hasIndex(...)
     |      hasIndex(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  headerData(...)
     |      headerData(self, int, Qt.Orientation, role: int = Qt.DisplayRole) -> Any
     |  
     |  headerDataChanged = <unbound PYQT_SIGNAL headerDataChanged(Qt::Orientation,int,int)>
     |  insertColumn(...)
     |      insertColumn(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertColumns(...)
     |      insertColumns(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertRow(...)
     |      insertRow(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertRows(...)
     |      insertRows(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  itemData(...)
     |      itemData(self, QModelIndex) -> Dict[int, Any]
     |  
     |  layoutAboutToBeChanged = <unbound PYQT_SIGNAL layoutAboutToBeChanged(QLis...odelIndex>,QAbstractItemModel::LayoutChangeHint)>
     |  layoutChanged = <unbound PYQT_SIGNAL layoutChanged(QList<QPersis...odelIndex>,QAbstractItemModel::LayoutChangeHint)>
     |  match(...)
     |      match(self, QModelIndex, int, Any, hits: int = 1, flags: Union[Qt.MatchFlags, Qt.MatchFlag] = Qt.MatchStartsWith|Qt.MatchWrap) -> List[QModelIndex]
     |  
     |  mimeData(...)
     |      mimeData(self, Iterable[QModelIndex]) -> QMimeData
     |  
     |  mimeTypes(...)
     |      mimeTypes(self) -> List[str]
     |  
     |  modelAboutToBeReset = <unbound PYQT_SIGNAL modelAboutToBeReset()>
     |  modelReset = <unbound PYQT_SIGNAL modelReset()>
     |  moveColumn(...)
     |      moveColumn(self, QModelIndex, int, QModelIndex, int) -> bool
     |  
     |  moveColumns(...)
     |      moveColumns(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  moveRow(...)
     |      moveRow(self, QModelIndex, int, QModelIndex, int) -> bool
     |  
     |  moveRows(...)
     |      moveRows(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  persistentIndexList(...)
     |      persistentIndexList(self) -> List[QModelIndex]
     |  
     |  removeColumn(...)
     |      removeColumn(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeColumns(...)
     |      removeColumns(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeRow(...)
     |      removeRow(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeRows(...)
     |      removeRows(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  resetInternalData(...)
     |      resetInternalData(self)
     |  
     |  revert(...)
     |      revert(self)
     |  
     |  roleNames(...)
     |      roleNames(self) -> Dict[int, QByteArray]
     |  
     |  rowCount(...)
     |      rowCount(self, parent: QModelIndex = QModelIndex()) -> int
     |  
     |  rowsAboutToBeInserted = <unbound PYQT_SIGNAL rowsAboutToBeInserted(QModelIndex,int,int)>
     |  rowsAboutToBeMoved = <unbound PYQT_SIGNAL rowsAboutToBeMoved(QModelIndex,int,int,QModelIndex,int)>
     |  rowsAboutToBeRemoved = <unbound PYQT_SIGNAL rowsAboutToBeRemoved(QModelIndex,int,int)>
     |  rowsInserted = <unbound PYQT_SIGNAL rowsInserted(QModelIndex,int,int)>
     |  rowsMoved = <unbound PYQT_SIGNAL rowsMoved(QModelIndex,int,int,QModelIndex,int)>
     |  rowsRemoved = <unbound PYQT_SIGNAL rowsRemoved(QModelIndex,int,int)>
     |  setData(...)
     |      setData(self, QModelIndex, Any, role: int = Qt.EditRole) -> bool
     |  
     |  setHeaderData(...)
     |      setHeaderData(self, int, Qt.Orientation, Any, role: int = Qt.EditRole) -> bool
     |  
     |  setItemData(...)
     |      setItemData(self, QModelIndex, Dict[int, Any]) -> bool
     |  
     |  sort(...)
     |      sort(self, int, order: Qt.SortOrder = Qt.AscendingOrder)
     |  
     |  span(...)
     |      span(self, QModelIndex) -> QSize
     |  
     |  submit(...)
     |      submit(self) -> bool
     |  
     |  supportedDragActions(...)
     |      supportedDragActions(self) -> Qt.DropActions
     |  
     |  supportedDropActions(...)
     |      supportedDropActions(self) -> Qt.DropActions
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QAbstractItemModel:
     |  
     |  CheckIndexOption = <enum 'CheckIndexOption'>
     |      An enumeration.
     |  
     |  CheckIndexOptions = <class 'PyQt5.QtCore.QAbstractItemModel.CheckIndex...
     |      QAbstractItemModel.CheckIndexOptions()
     |      QAbstractItemModel.CheckIndexOptions(Union[QAbstractItemModel.CheckIndexOptions, QAbstractItemModel.CheckIndexOption])
     |      QAbstractItemModel.CheckIndexOptions(QAbstractItemModel.CheckIndexOptions)
     |  
     |  HorizontalSortHint = 2
     |  
     |  LayoutChangeHint = <class 'PyQt5.QtCore.QAbstractItemModel.LayoutChang...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NoLayoutChangeHint = 0
     |  
     |  VerticalSortHint = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QAbstractNativeEventFilter(sip.simplewrapper)
     |  QAbstractNativeEventFilter()
     |  
     |  Method resolution order:
     |      QAbstractNativeEventFilter
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  nativeEventFilter(...)
     |      nativeEventFilter(self, Union[QByteArray, bytes, bytearray], sip.voidptr) -> Tuple[bool, int]
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QAbstractProxyModel(QAbstractItemModel)
     |  QAbstractProxyModel(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QAbstractProxyModel
     |      QAbstractItemModel
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  buddy(...)
     |      buddy(self, QModelIndex) -> QModelIndex
     |  
     |  canDropMimeData(...)
     |      canDropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool
     |  
     |  canFetchMore(...)
     |      canFetchMore(self, QModelIndex) -> bool
     |  
     |  data(...)
     |      data(self, QModelIndex, role: int = Qt.DisplayRole) -> Any
     |  
     |  dropMimeData(...)
     |      dropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool
     |  
     |  fetchMore(...)
     |      fetchMore(self, QModelIndex)
     |  
     |  flags(...)
     |      flags(self, QModelIndex) -> Qt.ItemFlags
     |  
     |  hasChildren(...)
     |      hasChildren(self, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  headerData(...)
     |      headerData(self, int, Qt.Orientation, role: int = Qt.DisplayRole) -> Any
     |  
     |  itemData(...)
     |      itemData(self, QModelIndex) -> Dict[int, Any]
     |  
     |  mapFromSource(...)
     |      mapFromSource(self, QModelIndex) -> QModelIndex
     |  
     |  mapSelectionFromSource(...)
     |      mapSelectionFromSource(self, QItemSelection) -> QItemSelection
     |  
     |  mapSelectionToSource(...)
     |      mapSelectionToSource(self, QItemSelection) -> QItemSelection
     |  
     |  mapToSource(...)
     |      mapToSource(self, QModelIndex) -> QModelIndex
     |  
     |  mimeData(...)
     |      mimeData(self, Iterable[QModelIndex]) -> QMimeData
     |  
     |  mimeTypes(...)
     |      mimeTypes(self) -> List[str]
     |  
     |  resetInternalData(...)
     |      resetInternalData(self)
     |  
     |  revert(...)
     |      revert(self)
     |  
     |  setData(...)
     |      setData(self, QModelIndex, Any, role: int = Qt.EditRole) -> bool
     |  
     |  setHeaderData(...)
     |      setHeaderData(self, int, Qt.Orientation, Any, role: int = Qt.EditRole) -> bool
     |  
     |  setItemData(...)
     |      setItemData(self, QModelIndex, Dict[int, Any]) -> bool
     |  
     |  setSourceModel(...)
     |      setSourceModel(self, QAbstractItemModel)
     |  
     |  sibling(...)
     |      sibling(self, int, int, QModelIndex) -> QModelIndex
     |  
     |  sort(...)
     |      sort(self, int, order: Qt.SortOrder = Qt.AscendingOrder)
     |  
     |  sourceModel(...)
     |      sourceModel(self) -> QAbstractItemModel
     |  
     |  sourceModelChanged = <unbound PYQT_SIGNAL sourceModelChanged()>
     |  span(...)
     |      span(self, QModelIndex) -> QSize
     |  
     |  submit(...)
     |      submit(self) -> bool
     |  
     |  supportedDragActions(...)
     |      supportedDragActions(self) -> Qt.DropActions
     |  
     |  supportedDropActions(...)
     |      supportedDropActions(self) -> Qt.DropActions
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractItemModel:
     |  
     |  beginInsertColumns(...)
     |      beginInsertColumns(self, QModelIndex, int, int)
     |  
     |  beginInsertRows(...)
     |      beginInsertRows(self, QModelIndex, int, int)
     |  
     |  beginMoveColumns(...)
     |      beginMoveColumns(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  beginMoveRows(...)
     |      beginMoveRows(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  beginRemoveColumns(...)
     |      beginRemoveColumns(self, QModelIndex, int, int)
     |  
     |  beginRemoveRows(...)
     |      beginRemoveRows(self, QModelIndex, int, int)
     |  
     |  beginResetModel(...)
     |      beginResetModel(self)
     |  
     |  changePersistentIndex(...)
     |      changePersistentIndex(self, QModelIndex, QModelIndex)
     |  
     |  changePersistentIndexList(...)
     |      changePersistentIndexList(self, Iterable[QModelIndex], Iterable[QModelIndex])
     |  
     |  checkIndex(...)
     |      checkIndex(self, QModelIndex, options: Union[QAbstractItemModel.CheckIndexOptions, QAbstractItemModel.CheckIndexOption] = QAbstractItemModel.CheckIndexOption.NoOption) -> bool
     |  
     |  columnCount(...)
     |      columnCount(self, parent: QModelIndex = QModelIndex()) -> int
     |  
     |  columnsAboutToBeInserted = <unbound PYQT_SIGNAL columnsAboutToBeInserted(QModelIndex,int,int)>
     |  columnsAboutToBeMoved = <unbound PYQT_SIGNAL columnsAboutToBeMoved(QModelIndex,int,int,QModelIndex,int)>
     |  columnsAboutToBeRemoved = <unbound PYQT_SIGNAL columnsAboutToBeRemoved(QModelIndex,int,int)>
     |  columnsInserted = <unbound PYQT_SIGNAL columnsInserted(QModelIndex,int,int)>
     |  columnsMoved = <unbound PYQT_SIGNAL columnsMoved(QModelIndex,int,int,QModelIndex,int)>
     |  columnsRemoved = <unbound PYQT_SIGNAL columnsRemoved(QModelIndex,int,int)>
     |  createIndex(...)
     |      createIndex(self, int, int, object: object = 0) -> QModelIndex
     |  
     |  dataChanged = <unbound PYQT_SIGNAL dataChanged(QModelIndex,QModelIndex,QVector<int>)>
     |  decodeData(...)
     |      decodeData(self, int, int, QModelIndex, QDataStream) -> bool
     |  
     |  encodeData(...)
     |      encodeData(self, Iterable[QModelIndex], QDataStream)
     |  
     |  endInsertColumns(...)
     |      endInsertColumns(self)
     |  
     |  endInsertRows(...)
     |      endInsertRows(self)
     |  
     |  endMoveColumns(...)
     |      endMoveColumns(self)
     |  
     |  endMoveRows(...)
     |      endMoveRows(self)
     |  
     |  endRemoveColumns(...)
     |      endRemoveColumns(self)
     |  
     |  endRemoveRows(...)
     |      endRemoveRows(self)
     |  
     |  endResetModel(...)
     |      endResetModel(self)
     |  
     |  hasIndex(...)
     |      hasIndex(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  headerDataChanged = <unbound PYQT_SIGNAL headerDataChanged(Qt::Orientation,int,int)>
     |  index(...)
     |      index(self, int, int, parent: QModelIndex = QModelIndex()) -> QModelIndex
     |  
     |  insertColumn(...)
     |      insertColumn(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertColumns(...)
     |      insertColumns(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertRow(...)
     |      insertRow(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertRows(...)
     |      insertRows(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  layoutAboutToBeChanged = <unbound PYQT_SIGNAL layoutAboutToBeChanged(QLis...odelIndex>,QAbstractItemModel::LayoutChangeHint)>
     |  layoutChanged = <unbound PYQT_SIGNAL layoutChanged(QList<QPersis...odelIndex>,QAbstractItemModel::LayoutChangeHint)>
     |  match(...)
     |      match(self, QModelIndex, int, Any, hits: int = 1, flags: Union[Qt.MatchFlags, Qt.MatchFlag] = Qt.MatchStartsWith|Qt.MatchWrap) -> List[QModelIndex]
     |  
     |  modelAboutToBeReset = <unbound PYQT_SIGNAL modelAboutToBeReset()>
     |  modelReset = <unbound PYQT_SIGNAL modelReset()>
     |  moveColumn(...)
     |      moveColumn(self, QModelIndex, int, QModelIndex, int) -> bool
     |  
     |  moveColumns(...)
     |      moveColumns(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  moveRow(...)
     |      moveRow(self, QModelIndex, int, QModelIndex, int) -> bool
     |  
     |  moveRows(...)
     |      moveRows(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  parent(...)
     |      parent(self, QModelIndex) -> QModelIndex
     |      parent(self) -> QObject
     |  
     |  persistentIndexList(...)
     |      persistentIndexList(self) -> List[QModelIndex]
     |  
     |  removeColumn(...)
     |      removeColumn(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeColumns(...)
     |      removeColumns(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeRow(...)
     |      removeRow(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeRows(...)
     |      removeRows(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  roleNames(...)
     |      roleNames(self) -> Dict[int, QByteArray]
     |  
     |  rowCount(...)
     |      rowCount(self, parent: QModelIndex = QModelIndex()) -> int
     |  
     |  rowsAboutToBeInserted = <unbound PYQT_SIGNAL rowsAboutToBeInserted(QModelIndex,int,int)>
     |  rowsAboutToBeMoved = <unbound PYQT_SIGNAL rowsAboutToBeMoved(QModelIndex,int,int,QModelIndex,int)>
     |  rowsAboutToBeRemoved = <unbound PYQT_SIGNAL rowsAboutToBeRemoved(QModelIndex,int,int)>
     |  rowsInserted = <unbound PYQT_SIGNAL rowsInserted(QModelIndex,int,int)>
     |  rowsMoved = <unbound PYQT_SIGNAL rowsMoved(QModelIndex,int,int,QModelIndex,int)>
     |  rowsRemoved = <unbound PYQT_SIGNAL rowsRemoved(QModelIndex,int,int)>
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QAbstractItemModel:
     |  
     |  CheckIndexOption = <enum 'CheckIndexOption'>
     |      An enumeration.
     |  
     |  CheckIndexOptions = <class 'PyQt5.QtCore.QAbstractItemModel.CheckIndex...
     |      QAbstractItemModel.CheckIndexOptions()
     |      QAbstractItemModel.CheckIndexOptions(Union[QAbstractItemModel.CheckIndexOptions, QAbstractItemModel.CheckIndexOption])
     |      QAbstractItemModel.CheckIndexOptions(QAbstractItemModel.CheckIndexOptions)
     |  
     |  HorizontalSortHint = 2
     |  
     |  LayoutChangeHint = <class 'PyQt5.QtCore.QAbstractItemModel.LayoutChang...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NoLayoutChangeHint = 0
     |  
     |  VerticalSortHint = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QAbstractState(QObject)
     |  QAbstractState(parent: QState = None)
     |  
     |  Method resolution order:
     |      QAbstractState
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  active(...)
     |      active(self) -> bool
     |  
     |  activeChanged = <unbound PYQT_SIGNAL activeChanged(bool)>
     |  entered = <unbound PYQT_SIGNAL entered()>
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  exited = <unbound PYQT_SIGNAL exited()>
     |  machine(...)
     |      machine(self) -> QStateMachine
     |  
     |  onEntry(...)
     |      onEntry(self, QEvent)
     |  
     |  onExit(...)
     |      onExit(self, QEvent)
     |  
     |  parentState(...)
     |      parentState(self) -> QState
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QAbstractTableModel(QAbstractItemModel)
     |  QAbstractTableModel(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QAbstractTableModel
     |      QAbstractItemModel
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  dropMimeData(...)
     |      dropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool
     |  
     |  flags(...)
     |      flags(self, QModelIndex) -> Qt.ItemFlags
     |  
     |  hasChildren(...)
     |  
     |  index(...)
     |      index(self, int, int, parent: QModelIndex = QModelIndex()) -> QModelIndex
     |  
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  sibling(...)
     |      sibling(self, int, int, QModelIndex) -> QModelIndex
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractItemModel:
     |  
     |  beginInsertColumns(...)
     |      beginInsertColumns(self, QModelIndex, int, int)
     |  
     |  beginInsertRows(...)
     |      beginInsertRows(self, QModelIndex, int, int)
     |  
     |  beginMoveColumns(...)
     |      beginMoveColumns(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  beginMoveRows(...)
     |      beginMoveRows(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  beginRemoveColumns(...)
     |      beginRemoveColumns(self, QModelIndex, int, int)
     |  
     |  beginRemoveRows(...)
     |      beginRemoveRows(self, QModelIndex, int, int)
     |  
     |  beginResetModel(...)
     |      beginResetModel(self)
     |  
     |  buddy(...)
     |      buddy(self, QModelIndex) -> QModelIndex
     |  
     |  canDropMimeData(...)
     |      canDropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool
     |  
     |  canFetchMore(...)
     |      canFetchMore(self, QModelIndex) -> bool
     |  
     |  changePersistentIndex(...)
     |      changePersistentIndex(self, QModelIndex, QModelIndex)
     |  
     |  changePersistentIndexList(...)
     |      changePersistentIndexList(self, Iterable[QModelIndex], Iterable[QModelIndex])
     |  
     |  checkIndex(...)
     |      checkIndex(self, QModelIndex, options: Union[QAbstractItemModel.CheckIndexOptions, QAbstractItemModel.CheckIndexOption] = QAbstractItemModel.CheckIndexOption.NoOption) -> bool
     |  
     |  columnCount(...)
     |      columnCount(self, parent: QModelIndex = QModelIndex()) -> int
     |  
     |  columnsAboutToBeInserted = <unbound PYQT_SIGNAL columnsAboutToBeInserted(QModelIndex,int,int)>
     |  columnsAboutToBeMoved = <unbound PYQT_SIGNAL columnsAboutToBeMoved(QModelIndex,int,int,QModelIndex,int)>
     |  columnsAboutToBeRemoved = <unbound PYQT_SIGNAL columnsAboutToBeRemoved(QModelIndex,int,int)>
     |  columnsInserted = <unbound PYQT_SIGNAL columnsInserted(QModelIndex,int,int)>
     |  columnsMoved = <unbound PYQT_SIGNAL columnsMoved(QModelIndex,int,int,QModelIndex,int)>
     |  columnsRemoved = <unbound PYQT_SIGNAL columnsRemoved(QModelIndex,int,int)>
     |  createIndex(...)
     |      createIndex(self, int, int, object: object = 0) -> QModelIndex
     |  
     |  data(...)
     |      data(self, QModelIndex, role: int = Qt.DisplayRole) -> Any
     |  
     |  dataChanged = <unbound PYQT_SIGNAL dataChanged(QModelIndex,QModelIndex,QVector<int>)>
     |  decodeData(...)
     |      decodeData(self, int, int, QModelIndex, QDataStream) -> bool
     |  
     |  encodeData(...)
     |      encodeData(self, Iterable[QModelIndex], QDataStream)
     |  
     |  endInsertColumns(...)
     |      endInsertColumns(self)
     |  
     |  endInsertRows(...)
     |      endInsertRows(self)
     |  
     |  endMoveColumns(...)
     |      endMoveColumns(self)
     |  
     |  endMoveRows(...)
     |      endMoveRows(self)
     |  
     |  endRemoveColumns(...)
     |      endRemoveColumns(self)
     |  
     |  endRemoveRows(...)
     |      endRemoveRows(self)
     |  
     |  endResetModel(...)
     |      endResetModel(self)
     |  
     |  fetchMore(...)
     |      fetchMore(self, QModelIndex)
     |  
     |  hasIndex(...)
     |      hasIndex(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  headerData(...)
     |      headerData(self, int, Qt.Orientation, role: int = Qt.DisplayRole) -> Any
     |  
     |  headerDataChanged = <unbound PYQT_SIGNAL headerDataChanged(Qt::Orientation,int,int)>
     |  insertColumn(...)
     |      insertColumn(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertColumns(...)
     |      insertColumns(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertRow(...)
     |      insertRow(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertRows(...)
     |      insertRows(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  itemData(...)
     |      itemData(self, QModelIndex) -> Dict[int, Any]
     |  
     |  layoutAboutToBeChanged = <unbound PYQT_SIGNAL layoutAboutToBeChanged(QLis...odelIndex>,QAbstractItemModel::LayoutChangeHint)>
     |  layoutChanged = <unbound PYQT_SIGNAL layoutChanged(QList<QPersis...odelIndex>,QAbstractItemModel::LayoutChangeHint)>
     |  match(...)
     |      match(self, QModelIndex, int, Any, hits: int = 1, flags: Union[Qt.MatchFlags, Qt.MatchFlag] = Qt.MatchStartsWith|Qt.MatchWrap) -> List[QModelIndex]
     |  
     |  mimeData(...)
     |      mimeData(self, Iterable[QModelIndex]) -> QMimeData
     |  
     |  mimeTypes(...)
     |      mimeTypes(self) -> List[str]
     |  
     |  modelAboutToBeReset = <unbound PYQT_SIGNAL modelAboutToBeReset()>
     |  modelReset = <unbound PYQT_SIGNAL modelReset()>
     |  moveColumn(...)
     |      moveColumn(self, QModelIndex, int, QModelIndex, int) -> bool
     |  
     |  moveColumns(...)
     |      moveColumns(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  moveRow(...)
     |      moveRow(self, QModelIndex, int, QModelIndex, int) -> bool
     |  
     |  moveRows(...)
     |      moveRows(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  persistentIndexList(...)
     |      persistentIndexList(self) -> List[QModelIndex]
     |  
     |  removeColumn(...)
     |      removeColumn(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeColumns(...)
     |      removeColumns(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeRow(...)
     |      removeRow(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeRows(...)
     |      removeRows(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  resetInternalData(...)
     |      resetInternalData(self)
     |  
     |  revert(...)
     |      revert(self)
     |  
     |  roleNames(...)
     |      roleNames(self) -> Dict[int, QByteArray]
     |  
     |  rowCount(...)
     |      rowCount(self, parent: QModelIndex = QModelIndex()) -> int
     |  
     |  rowsAboutToBeInserted = <unbound PYQT_SIGNAL rowsAboutToBeInserted(QModelIndex,int,int)>
     |  rowsAboutToBeMoved = <unbound PYQT_SIGNAL rowsAboutToBeMoved(QModelIndex,int,int,QModelIndex,int)>
     |  rowsAboutToBeRemoved = <unbound PYQT_SIGNAL rowsAboutToBeRemoved(QModelIndex,int,int)>
     |  rowsInserted = <unbound PYQT_SIGNAL rowsInserted(QModelIndex,int,int)>
     |  rowsMoved = <unbound PYQT_SIGNAL rowsMoved(QModelIndex,int,int,QModelIndex,int)>
     |  rowsRemoved = <unbound PYQT_SIGNAL rowsRemoved(QModelIndex,int,int)>
     |  setData(...)
     |      setData(self, QModelIndex, Any, role: int = Qt.EditRole) -> bool
     |  
     |  setHeaderData(...)
     |      setHeaderData(self, int, Qt.Orientation, Any, role: int = Qt.EditRole) -> bool
     |  
     |  setItemData(...)
     |      setItemData(self, QModelIndex, Dict[int, Any]) -> bool
     |  
     |  sort(...)
     |      sort(self, int, order: Qt.SortOrder = Qt.AscendingOrder)
     |  
     |  span(...)
     |      span(self, QModelIndex) -> QSize
     |  
     |  submit(...)
     |      submit(self) -> bool
     |  
     |  supportedDragActions(...)
     |      supportedDragActions(self) -> Qt.DropActions
     |  
     |  supportedDropActions(...)
     |      supportedDropActions(self) -> Qt.DropActions
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QAbstractItemModel:
     |  
     |  CheckIndexOption = <enum 'CheckIndexOption'>
     |      An enumeration.
     |  
     |  CheckIndexOptions = <class 'PyQt5.QtCore.QAbstractItemModel.CheckIndex...
     |      QAbstractItemModel.CheckIndexOptions()
     |      QAbstractItemModel.CheckIndexOptions(Union[QAbstractItemModel.CheckIndexOptions, QAbstractItemModel.CheckIndexOption])
     |      QAbstractItemModel.CheckIndexOptions(QAbstractItemModel.CheckIndexOptions)
     |  
     |  HorizontalSortHint = 2
     |  
     |  LayoutChangeHint = <class 'PyQt5.QtCore.QAbstractItemModel.LayoutChang...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NoLayoutChangeHint = 0
     |  
     |  VerticalSortHint = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QAbstractTransition(QObject)
     |  QAbstractTransition(sourceState: QState = None)
     |  
     |  Method resolution order:
     |      QAbstractTransition
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  addAnimation(...)
     |      addAnimation(self, QAbstractAnimation)
     |  
     |  animations(...)
     |      animations(self) -> List[QAbstractAnimation]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventTest(...)
     |      eventTest(self, QEvent) -> bool
     |  
     |  machine(...)
     |      machine(self) -> QStateMachine
     |  
     |  onTransition(...)
     |      onTransition(self, QEvent)
     |  
     |  removeAnimation(...)
     |      removeAnimation(self, QAbstractAnimation)
     |  
     |  setTargetState(...)
     |      setTargetState(self, QAbstractState)
     |  
     |  setTargetStates(...)
     |      setTargetStates(self, Iterable[QAbstractState])
     |  
     |  setTransitionType(...)
     |      setTransitionType(self, QAbstractTransition.TransitionType)
     |  
     |  sourceState(...)
     |      sourceState(self) -> QState
     |  
     |  targetState(...)
     |      targetState(self) -> QAbstractState
     |  
     |  targetStateChanged = <unbound PYQT_SIGNAL targetStateChanged()>
     |  targetStates(...)
     |      targetStates(self) -> List[QAbstractState]
     |  
     |  targetStatesChanged = <unbound PYQT_SIGNAL targetStatesChanged()>
     |  transitionType(...)
     |      transitionType(self) -> QAbstractTransition.TransitionType
     |  
     |  triggered = <unbound PYQT_SIGNAL triggered()>
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ExternalTransition = 0
     |  
     |  InternalTransition = 1
     |  
     |  TransitionType = <class 'PyQt5.QtCore.QAbstractTransition.TransitionTy...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QAnimationGroup(QAbstractAnimation)
     |  QAnimationGroup(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QAnimationGroup
     |      QAbstractAnimation
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  addAnimation(...)
     |      addAnimation(self, QAbstractAnimation)
     |  
     |  animationAt(...)
     |      animationAt(self, int) -> QAbstractAnimation
     |  
     |  animationCount(...)
     |      animationCount(self) -> int
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  indexOfAnimation(...)
     |      indexOfAnimation(self, QAbstractAnimation) -> int
     |  
     |  insertAnimation(...)
     |      insertAnimation(self, int, QAbstractAnimation)
     |  
     |  removeAnimation(...)
     |      removeAnimation(self, QAbstractAnimation)
     |  
     |  takeAnimation(...)
     |      takeAnimation(self, int) -> QAbstractAnimation
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractAnimation:
     |  
     |  currentLoop(...)
     |      currentLoop(self) -> int
     |  
     |  currentLoopChanged = <unbound PYQT_SIGNAL currentLoopChanged(int)>
     |  currentLoopTime(...)
     |      currentLoopTime(self) -> int
     |  
     |  currentTime(...)
     |      currentTime(self) -> int
     |  
     |  direction(...)
     |      direction(self) -> QAbstractAnimation.Direction
     |  
     |  directionChanged = <unbound PYQT_SIGNAL directionChanged(QAbstractAnimation::Direction)>
     |  duration(...)
     |      duration(self) -> int
     |  
     |  finished = <unbound PYQT_SIGNAL finished()>
     |  group(...)
     |      group(self) -> QAnimationGroup
     |  
     |  loopCount(...)
     |      loopCount(self) -> int
     |  
     |  pause(...)
     |      pause(self)
     |  
     |  resume(...)
     |      resume(self)
     |  
     |  setCurrentTime(...)
     |      setCurrentTime(self, int)
     |  
     |  setDirection(...)
     |      setDirection(self, QAbstractAnimation.Direction)
     |  
     |  setLoopCount(...)
     |      setLoopCount(self, int)
     |  
     |  setPaused(...)
     |      setPaused(self, bool)
     |  
     |  start(...)
     |      start(self, policy: QAbstractAnimation.DeletionPolicy = QAbstractAnimation.KeepWhenStopped)
     |  
     |  state(...)
     |      state(self) -> QAbstractAnimation.State
     |  
     |  stateChanged = <unbound PYQT_SIGNAL stateChanged(QAbstractAnimation::State,QAbstractAnimation::State)>
     |  stop(...)
     |      stop(self)
     |  
     |  totalDuration(...)
     |      totalDuration(self) -> int
     |  
     |  updateCurrentTime(...)
     |      updateCurrentTime(self, int)
     |  
     |  updateDirection(...)
     |      updateDirection(self, QAbstractAnimation.Direction)
     |  
     |  updateState(...)
     |      updateState(self, QAbstractAnimation.State, QAbstractAnimation.State)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QAbstractAnimation:
     |  
     |  Backward = 1
     |  
     |  DeleteWhenStopped = 1
     |  
     |  DeletionPolicy = <class 'PyQt5.QtCore.QAbstractAnimation.DeletionPolic...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Direction = <class 'PyQt5.QtCore.QAbstractAnimation.Direction'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Forward = 0
     |  
     |  KeepWhenStopped = 0
     |  
     |  Paused = 1
     |  
     |  Running = 2
     |  
     |  State = <class 'PyQt5.QtCore.QAbstractAnimation.State'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Stopped = 0
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QBasicTimer(sip.simplewrapper)
     |  QBasicTimer()
     |  QBasicTimer(QBasicTimer)
     |  
     |  Method resolution order:
     |      QBasicTimer
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  isActive(...)
     |      isActive(self) -> bool
     |  
     |  start(...)
     |      start(self, int, Qt.TimerType, QObject)
     |      start(self, int, QObject)
     |  
     |  stop(...)
     |      stop(self)
     |  
     |  timerId(...)
     |      timerId(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QBitArray(sip.simplewrapper)
     |  QBitArray()
     |  QBitArray(int, value: bool = False)
     |  QBitArray(QBitArray)
     |  
     |  Method resolution order:
     |      QBitArray
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __and__(self, value, /)
     |      Return self&value.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __iand__(self, value, /)
     |      Return self&=value.
     |  
     |  __invert__(self, /)
     |      ~self
     |  
     |  __ior__(self, value, /)
     |      Return self|=value.
     |  
     |  __ixor__(self, value, /)
     |      Return self^=value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __len__(self, /)
     |      Return len(self).
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __or__(self, value, /)
     |      Return self|value.
     |  
     |  __rand__(self, value, /)
     |      Return value&self.
     |  
     |  __ror__(self, value, /)
     |      Return value|self.
     |  
     |  __rxor__(self, value, /)
     |      Return value^self.
     |  
     |  __xor__(self, value, /)
     |      Return self^value.
     |  
     |  at(...)
     |      at(self, int) -> bool
     |  
     |  bits(...)
     |      bits(self) -> bytes
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  clearBit(...)
     |      clearBit(self, int)
     |  
     |  count(...)
     |      count(self) -> int
     |      count(self, bool) -> int
     |  
     |  detach(...)
     |      detach(self)
     |  
     |  fill(...)
     |      fill(self, bool, int, int)
     |      fill(self, bool, size: int = -1) -> bool
     |  
     |  fromBits(...)
     |      fromBits(str, int) -> QBitArray
     |  
     |  isDetached(...)
     |      isDetached(self) -> bool
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  resize(...)
     |      resize(self, int)
     |  
     |  setBit(...)
     |      setBit(self, int)
     |      setBit(self, int, bool)
     |  
     |  size(...)
     |      size(self) -> int
     |  
     |  swap(...)
     |      swap(self, QBitArray)
     |  
     |  testBit(...)
     |      testBit(self, int) -> bool
     |  
     |  toggleBit(...)
     |      toggleBit(self, int) -> bool
     |  
     |  truncate(...)
     |      truncate(self, int)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QBuffer(QIODevice)
     |  QBuffer(parent: QObject = None)
     |  QBuffer(QByteArray, parent: QObject = None)
     |  
     |  Method resolution order:
     |      QBuffer
     |      QIODevice
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  atEnd(...)
     |      atEnd(self) -> bool
     |  
     |  buffer(...)
     |      buffer(self) -> QByteArray
     |  
     |  canReadLine(...)
     |      canReadLine(self) -> bool
     |  
     |  close(...)
     |      close(self)
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  data(...)
     |      data(self) -> QByteArray
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  open(...)
     |      open(self, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag]) -> bool
     |  
     |  pos(...)
     |      pos(self) -> int
     |  
     |  readData(...)
     |      readData(self, int) -> bytes
     |  
     |  seek(...)
     |      seek(self, int) -> bool
     |  
     |  setBuffer(...)
     |      setBuffer(self, QByteArray)
     |  
     |  setData(...)
     |      setData(self, Union[QByteArray, bytes, bytearray])
     |      setData(self, bytes)
     |  
     |  size(...)
     |      size(self) -> int
     |  
     |  writeData(...)
     |      writeData(self, bytes) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QIODevice:
     |  
     |  aboutToClose = <unbound PYQT_SIGNAL aboutToClose()>
     |  bytesAvailable(...)
     |      bytesAvailable(self) -> int
     |  
     |  bytesToWrite(...)
     |      bytesToWrite(self) -> int
     |  
     |  bytesWritten = <unbound PYQT_SIGNAL bytesWritten(qint64)>
     |  channelBytesWritten = <unbound PYQT_SIGNAL channelBytesWritten(int,qint64)>
     |  channelReadyRead = <unbound PYQT_SIGNAL channelReadyRead(int)>
     |  commitTransaction(...)
     |      commitTransaction(self)
     |  
     |  currentReadChannel(...)
     |      currentReadChannel(self) -> int
     |  
     |  currentWriteChannel(...)
     |      currentWriteChannel(self) -> int
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  getChar(...)
     |      getChar(self) -> Tuple[bool, str]
     |  
     |  isOpen(...)
     |      isOpen(self) -> bool
     |  
     |  isReadable(...)
     |      isReadable(self) -> bool
     |  
     |  isSequential(...)
     |      isSequential(self) -> bool
     |  
     |  isTextModeEnabled(...)
     |      isTextModeEnabled(self) -> bool
     |  
     |  isTransactionStarted(...)
     |      isTransactionStarted(self) -> bool
     |  
     |  isWritable(...)
     |      isWritable(self) -> bool
     |  
     |  openMode(...)
     |      openMode(self) -> QIODevice.OpenMode
     |  
     |  peek(...)
     |      peek(self, int) -> QByteArray
     |  
     |  putChar(...)
     |      putChar(self, str) -> bool
     |  
     |  read(...)
     |      read(self, int) -> bytes
     |  
     |  readAll(...)
     |      readAll(self) -> QByteArray
     |  
     |  readChannelCount(...)
     |      readChannelCount(self) -> int
     |  
     |  readChannelFinished = <unbound PYQT_SIGNAL readChannelFinished()>
     |  readLine(...)
     |      readLine(self, maxlen: int = 0) -> bytes
     |  
     |  readLineData(...)
     |      readLineData(self, int) -> bytes
     |  
     |  readyRead = <unbound PYQT_SIGNAL readyRead()>
     |  reset(...)
     |      reset(self) -> bool
     |  
     |  rollbackTransaction(...)
     |      rollbackTransaction(self)
     |  
     |  setCurrentReadChannel(...)
     |      setCurrentReadChannel(self, int)
     |  
     |  setCurrentWriteChannel(...)
     |      setCurrentWriteChannel(self, int)
     |  
     |  setErrorString(...)
     |      setErrorString(self, str)
     |  
     |  setOpenMode(...)
     |      setOpenMode(self, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |  
     |  setTextModeEnabled(...)
     |      setTextModeEnabled(self, bool)
     |  
     |  skip(...)
     |      skip(self, int) -> int
     |  
     |  startTransaction(...)
     |      startTransaction(self)
     |  
     |  ungetChar(...)
     |      ungetChar(self, str)
     |  
     |  waitForBytesWritten(...)
     |      waitForBytesWritten(self, int) -> bool
     |  
     |  waitForReadyRead(...)
     |      waitForReadyRead(self, int) -> bool
     |  
     |  write(...)
     |      write(self, Union[QByteArray, bytes, bytearray]) -> int
     |  
     |  writeChannelCount(...)
     |      writeChannelCount(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QIODevice:
     |  
     |  Append = 4
     |  
     |  ExistingOnly = 128
     |  
     |  NewOnly = 64
     |  
     |  NotOpen = 0
     |  
     |  OpenMode = <class 'PyQt5.QtCore.QIODevice.OpenMode'>
     |      QIODevice.OpenMode()
     |      QIODevice.OpenMode(Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |      QIODevice.OpenMode(QIODevice.OpenMode)
     |  
     |  OpenModeFlag = <class 'PyQt5.QtCore.QIODevice.OpenModeFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ReadOnly = 1
     |  
     |  ReadWrite = 3
     |  
     |  Text = 16
     |  
     |  Truncate = 8
     |  
     |  Unbuffered = 32
     |  
     |  WriteOnly = 2
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QByteArray(sip.simplewrapper)
     |  QByteArray()
     |  QByteArray(int, str)
     |  QByteArray(Union[QByteArray, bytes, bytearray])
     |  
     |  Method resolution order:
     |      QByteArray
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __contains__(self, key, /)
     |      Return key in self.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __iadd__(self, value, /)
     |      Implement self+=value.
     |  
     |  __imul__(self, value, /)
     |      Implement self*=value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __len__(self, /)
     |      Return len(self).
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.n
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __radd__(self, value, /)
     |      Return value+self.
     |  
     |  __reduce__ = _pickle_type(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __rmul__(self, value, /)
     |      Return self*value.
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  append(...)
     |      append(self, Union[QByteArray, bytes, bytearray]) -> QByteArray
     |      append(self, str) -> QByteArray
     |      append(self, int, str) -> QByteArray
     |  
     |  at(...)
     |      at(self, int) -> str
     |  
     |  capacity(...)
     |      capacity(self) -> int
     |  
     |  chop(...)
     |      chop(self, int)
     |  
     |  chopped(...)
     |      chopped(self, int) -> QByteArray
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  contains(...)
     |      contains(self, Union[QByteArray, bytes, bytearray]) -> bool
     |  
     |  count(...)
     |      count(self, Union[QByteArray, bytes, bytearray]) -> int
     |      count(self) -> int
     |  
     |  data(...)
     |      data(self) -> bytes
     |  
     |  endsWith(...)
     |      endsWith(self, Union[QByteArray, bytes, bytearray]) -> bool
     |  
     |  fill(...)
     |      fill(self, str, size: int = -1) -> QByteArray
     |  
     |  fromBase64(...)
     |      fromBase64(Union[QByteArray, bytes, bytearray]) -> QByteArray
     |      fromBase64(Union[QByteArray, bytes, bytearray], Union[QByteArray.Base64Options, QByteArray.Base64Option]) -> QByteArray
     |  
     |  fromHex(...)
     |      fromHex(Union[QByteArray, bytes, bytearray]) -> QByteArray
     |  
     |  fromPercentEncoding(...)
     |      fromPercentEncoding(Union[QByteArray, bytes, bytearray], percent: str = '%') -> QByteArray
     |  
     |  fromRawData(...)
     |      fromRawData(bytes) -> QByteArray
     |  
     |  indexOf(...)
     |      indexOf(self, Union[QByteArray, bytes, bytearray], from_: int = 0) -> int
     |      indexOf(self, str, from_: int = 0) -> int
     |  
     |  insert(...)
     |      insert(self, int, Union[QByteArray, bytes, bytearray]) -> QByteArray
     |      insert(self, int, str) -> QByteArray
     |      insert(self, int, int, str) -> QByteArray
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  lastIndexOf(...)
     |      lastIndexOf(self, Union[QByteArray, bytes, bytearray], from_: int = -1) -> int
     |      lastIndexOf(self, str, from_: int = -1) -> int
     |  
     |  left(...)
     |      left(self, int) -> QByteArray
     |  
     |  leftJustified(...)
     |      leftJustified(self, int, fill: str = ' ', truncate: bool = False) -> QByteArray
     |  
     |  length(...)
     |      length(self) -> int
     |  
     |  mid(...)
     |      mid(self, int, length: int = -1) -> QByteArray
     |  
     |  number(...)
     |      number(int, base: int = 10) -> QByteArray
     |      number(float, format: str = 'g', precision: int = 6) -> QByteArray
     |      number(int, base: int = 10) -> QByteArray
     |      number(int, base: int = 10) -> QByteArray
     |  
     |  prepend(...)
     |      prepend(self, Union[QByteArray, bytes, bytearray]) -> QByteArray
     |      prepend(self, int, str) -> QByteArray
     |  
     |  push_back(...)
     |      push_back(self, Union[QByteArray, bytes, bytearray])
     |  
     |  push_front(...)
     |      push_front(self, Union[QByteArray, bytes, bytearray])
     |  
     |  remove(...)
     |      remove(self, int, int) -> QByteArray
     |  
     |  repeated(...)
     |      repeated(self, int) -> QByteArray
     |  
     |  replace(...)
     |      replace(self, int, int, Union[QByteArray, bytes, bytearray]) -> QByteArray
     |      replace(self, Union[QByteArray, bytes, bytearray], Union[QByteArray, bytes, bytearray]) -> QByteArray
     |      replace(self, str, Union[QByteArray, bytes, bytearray]) -> QByteArray
     |  
     |  reserve(...)
     |      reserve(self, int)
     |  
     |  resize(...)
     |      resize(self, int)
     |  
     |  right(...)
     |      right(self, int) -> QByteArray
     |  
     |  rightJustified(...)
     |      rightJustified(self, int, fill: str = ' ', truncate: bool = False) -> QByteArray
     |  
     |  setNum(...)
     |      setNum(self, int, base: int = 10) -> QByteArray
     |      setNum(self, float, format: str = 'g', precision: int = 6) -> QByteArray
     |      setNum(self, int, base: int = 10) -> QByteArray
     |      setNum(self, int, base: int = 10) -> QByteArray
     |  
     |  simplified(...)
     |      simplified(self) -> QByteArray
     |  
     |  size(...)
     |      size(self) -> int
     |  
     |  split(...)
     |      split(self, str) -> List[QByteArray]
     |  
     |  squeeze(...)
     |      squeeze(self)
     |  
     |  startsWith(...)
     |      startsWith(self, Union[QByteArray, bytes, bytearray]) -> bool
     |  
     |  swap(...)
     |      swap(self, QByteArray)
     |  
     |  toBase64(...)
     |      toBase64(self) -> QByteArray
     |      toBase64(self, Union[QByteArray.Base64Options, QByteArray.Base64Option]) -> QByteArray
     |  
     |  toDouble(...)
     |      toDouble(self) -> Tuple[float, bool]
     |  
     |  toFloat(...)
     |      toFloat(self) -> Tuple[float, bool]
     |  
     |  toHex(...)
     |      toHex(self) -> QByteArray
     |      toHex(self, str) -> QByteArray
     |  
     |  toInt(...)
     |      toInt(self, base: int = 10) -> Tuple[int, bool]
     |  
     |  toLong(...)
     |      toLong(self, base: int = 10) -> Tuple[int, bool]
     |  
     |  toLongLong(...)
     |      toLongLong(self, base: int = 10) -> Tuple[int, bool]
     |  
     |  toLower(...)
     |      toLower(self) -> QByteArray
     |  
     |  toPercentEncoding(...)
     |      toPercentEncoding(self, exclude: Union[QByteArray, bytes, bytearray] = QByteArray(), include: Union[QByteArray, bytes, bytearray] = QByteArray(), percent: str = '%') -> QByteArray
     |  
     |  toShort(...)
     |      toShort(self, base: int = 10) -> Tuple[int, bool]
     |  
     |  toUInt(...)
     |      toUInt(self, base: int = 10) -> Tuple[int, bool]
     |  
     |  toULong(...)
     |      toULong(self, base: int = 10) -> Tuple[int, bool]
     |  
     |  toULongLong(...)
     |      toULongLong(self, base: int = 10) -> Tuple[int, bool]
     |  
     |  toUShort(...)
     |      toUShort(self, base: int = 10) -> Tuple[int, bool]
     |  
     |  toUpper(...)
     |      toUpper(self) -> QByteArray
     |  
     |  trimmed(...)
     |      trimmed(self) -> QByteArray
     |  
     |  truncate(...)
     |      truncate(self, int)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Base64Encoding = 0
     |  
     |  Base64Option = <class 'PyQt5.QtCore.QByteArray.Base64Option'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Base64Options = <class 'PyQt5.QtCore.QByteArray.Base64Options'>
     |      QByteArray.Base64Options()
     |      QByteArray.Base64Options(Union[QByteArray.Base64Options, QByteArray.Base64Option])
     |      QByteArray.Base64Options(QByteArray.Base64Options)
     |  
     |  Base64UrlEncoding = 1
     |  
     |  KeepTrailingEquals = 0
     |  
     |  OmitTrailingEquals = 2
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QByteArrayMatcher(sip.simplewrapper)
     |  QByteArrayMatcher()
     |  QByteArrayMatcher(Union[QByteArray, bytes, bytearray])
     |  QByteArrayMatcher(QByteArrayMatcher)
     |  
     |  Method resolution order:
     |      QByteArrayMatcher
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  indexIn(...)
     |      indexIn(self, Union[QByteArray, bytes, bytearray], from_: int = 0) -> int
     |  
     |  pattern(...)
     |      pattern(self) -> QByteArray
     |  
     |  setPattern(...)
     |      setPattern(self, Union[QByteArray, bytes, bytearray])
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QChildEvent(QEvent)
     |  QChildEvent(QEvent.Type, QObject)
     |  QChildEvent(QChildEvent)
     |  
     |  Method resolution order:
     |      QChildEvent
     |      QEvent
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  added(...)
     |      added(self) -> bool
     |  
     |  child(...)
     |      child(self) -> QObject
     |  
     |  polished(...)
     |      polished(self) -> bool
     |  
     |  removed(...)
     |      removed(self) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QEvent:
     |  
     |  accept(...)
     |      accept(self)
     |  
     |  ignore(...)
     |      ignore(self)
     |  
     |  isAccepted(...)
     |      isAccepted(self) -> bool
     |  
     |  registerEventType(...)
     |      registerEventType(hint: int = -1) -> int
     |  
     |  setAccepted(...)
     |      setAccepted(self, bool)
     |  
     |  spontaneous(...)
     |      spontaneous(self) -> bool
     |  
     |  type(...)
     |      type(self) -> QEvent.Type
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QEvent:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QEvent:
     |  
     |  ActionAdded = 114
     |  
     |  ActionChanged = 113
     |  
     |  ActionRemoved = 115
     |  
     |  ActivationChange = 99
     |  
     |  ApplicationActivate = 121
     |  
     |  ApplicationActivated = 121
     |  
     |  ApplicationDeactivate = 122
     |  
     |  ApplicationDeactivated = 122
     |  
     |  ApplicationFontChange = 36
     |  
     |  ApplicationLayoutDirectionChange = 37
     |  
     |  ApplicationPaletteChange = 38
     |  
     |  ApplicationStateChange = 214
     |  
     |  ApplicationWindowIconChange = 35
     |  
     |  ChildAdded = 68
     |  
     |  ChildPolished = 69
     |  
     |  ChildRemoved = 71
     |  
     |  Clipboard = 40
     |  
     |  Close = 19
     |  
     |  CloseSoftwareInputPanel = 200
     |  
     |  ContentsRectChange = 178
     |  
     |  ContextMenu = 82
     |  
     |  CursorChange = 183
     |  
     |  DeferredDelete = 52
     |  
     |  DragEnter = 60
     |  
     |  DragLeave = 62
     |  
     |  DragMove = 61
     |  
     |  Drop = 63
     |  
     |  DynamicPropertyChange = 170
     |  
     |  EnabledChange = 98
     |  
     |  Enter = 10
     |  
     |  EnterWhatsThisMode = 124
     |  
     |  Expose = 206
     |  
     |  FileOpen = 116
     |  
     |  FocusAboutToChange = 23
     |  
     |  FocusIn = 8
     |  
     |  FocusOut = 9
     |  
     |  FontChange = 97
     |  
     |  Gesture = 198
     |  
     |  GestureOverride = 202
     |  
     |  GrabKeyboard = 188
     |  
     |  GrabMouse = 186
     |  
     |  GraphicsSceneContextMenu = 159
     |  
     |  GraphicsSceneDragEnter = 164
     |  
     |  GraphicsSceneDragLeave = 166
     |  
     |  GraphicsSceneDragMove = 165
     |  
     |  GraphicsSceneDrop = 167
     |  
     |  GraphicsSceneHelp = 163
     |  
     |  GraphicsSceneHoverEnter = 160
     |  
     |  GraphicsSceneHoverLeave = 162
     |  
     |  GraphicsSceneHoverMove = 161
     |  
     |  GraphicsSceneMouseDoubleClick = 158
     |  
     |  GraphicsSceneMouseMove = 155
     |  
     |  GraphicsSceneMousePress = 156
     |  
     |  GraphicsSceneMouseRelease = 157
     |  
     |  GraphicsSceneMove = 182
     |  
     |  GraphicsSceneResize = 181
     |  
     |  GraphicsSceneWheel = 168
     |  
     |  Hide = 18
     |  
     |  HideToParent = 27
     |  
     |  HoverEnter = 127
     |  
     |  HoverLeave = 128
     |  
     |  HoverMove = 129
     |  
     |  IconDrag = 96
     |  
     |  IconTextChange = 101
     |  
     |  InputMethod = 83
     |  
     |  InputMethodQuery = 207
     |  
     |  KeyPress = 6
     |  
     |  KeyRelease = 7
     |  
     |  KeyboardLayoutChange = 169
     |  
     |  LanguageChange = 89
     |  
     |  LayoutDirectionChange = 90
     |  
     |  LayoutRequest = 76
     |  
     |  Leave = 11
     |  
     |  LeaveWhatsThisMode = 125
     |  
     |  LocaleChange = 88
     |  
     |  MacSizeChange = 177
     |  
     |  MaxUser = 65535
     |  
     |  MetaCall = 43
     |  
     |  ModifiedChange = 102
     |  
     |  MouseButtonDblClick = 4
     |  
     |  MouseButtonPress = 2
     |  
     |  MouseButtonRelease = 3
     |  
     |  MouseMove = 5
     |  
     |  MouseTrackingChange = 109
     |  
     |  Move = 13
     |  
     |  NonClientAreaMouseButtonDblClick = 176
     |  
     |  NonClientAreaMouseButtonPress = 174
     |  
     |  NonClientAreaMouseButtonRelease = 175
     |  
     |  NonClientAreaMouseMove = 173
     |  
     |  None_ = 0
     |  
     |  OkRequest = 94
     |  
     |  OrientationChange = 208
     |  
     |  Paint = 12
     |  
     |  PaletteChange = 39
     |  
     |  ParentAboutToChange = 131
     |  
     |  ParentChange = 21
     |  
     |  PlatformPanel = 212
     |  
     |  PlatformSurface = 217
     |  
     |  Polish = 75
     |  
     |  PolishRequest = 74
     |  
     |  QueryWhatsThis = 123
     |  
     |  ReadOnlyChange = 106
     |  
     |  RequestSoftwareInputPanel = 199
     |  
     |  Resize = 14
     |  
     |  Scroll = 205
     |  
     |  ScrollPrepare = 204
     |  
     |  Shortcut = 117
     |  
     |  ShortcutOverride = 51
     |  
     |  Show = 17
     |  
     |  ShowToParent = 26
     |  
     |  SockAct = 50
     |  
     |  StateMachineSignal = 192
     |  
     |  StateMachineWrapped = 193
     |  
     |  StatusTip = 112
     |  
     |  StyleChange = 100
     |  
     |  TabletEnterProximity = 171
     |  
     |  TabletLeaveProximity = 172
     |  
     |  TabletMove = 87
     |  
     |  TabletPress = 92
     |  
     |  TabletRelease = 93
     |  
     |  TabletTrackingChange = 219
     |  
     |  ThreadChange = 22
     |  
     |  Timer = 1
     |  
     |  ToolBarChange = 120
     |  
     |  ToolTip = 110
     |  
     |  ToolTipChange = 184
     |  
     |  TouchBegin = 194
     |  
     |  TouchCancel = 209
     |  
     |  TouchEnd = 196
     |  
     |  TouchUpdate = 195
     |  
     |  Type = <class 'PyQt5.QtCore.QEvent.Type'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  UngrabKeyboard = 189
     |  
     |  UngrabMouse = 187
     |  
     |  UpdateLater = 78
     |  
     |  UpdateRequest = 77
     |  
     |  User = 1000
     |  
     |  WhatsThis = 111
     |  
     |  WhatsThisClicked = 118
     |  
     |  Wheel = 31
     |  
     |  WinEventAct = 132
     |  
     |  WinIdChange = 203
     |  
     |  WindowActivate = 24
     |  
     |  WindowBlocked = 103
     |  
     |  WindowDeactivate = 25
     |  
     |  WindowIconChange = 34
     |  
     |  WindowStateChange = 105
     |  
     |  WindowTitleChange = 33
     |  
     |  WindowUnblocked = 104
     |  
     |  ZOrderChange = 126
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QCollator(sip.simplewrapper)
     |  QCollator(locale: QLocale = QLocale())
     |  QCollator(QCollator)
     |  
     |  Method resolution order:
     |      QCollator
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  caseSensitivity(...)
     |      caseSensitivity(self) -> Qt.CaseSensitivity
     |  
     |  compare(...)
     |      compare(self, str, str) -> int
     |  
     |  ignorePunctuation(...)
     |      ignorePunctuation(self) -> bool
     |  
     |  locale(...)
     |      locale(self) -> QLocale
     |  
     |  numericMode(...)
     |      numericMode(self) -> bool
     |  
     |  setCaseSensitivity(...)
     |      setCaseSensitivity(self, Qt.CaseSensitivity)
     |  
     |  setIgnorePunctuation(...)
     |      setIgnorePunctuation(self, bool)
     |  
     |  setLocale(...)
     |      setLocale(self, QLocale)
     |  
     |  setNumericMode(...)
     |      setNumericMode(self, bool)
     |  
     |  sortKey(...)
     |      sortKey(self, str) -> QCollatorSortKey
     |  
     |  swap(...)
     |      swap(self, QCollator)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QCollatorSortKey(sip.simplewrapper)
     |  QCollatorSortKey(QCollatorSortKey)
     |  
     |  Method resolution order:
     |      QCollatorSortKey
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  compare(...)
     |      compare(self, QCollatorSortKey) -> int
     |  
     |  swap(...)
     |      swap(self, QCollatorSortKey)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QCommandLineOption(sip.simplewrapper)
     |  QCommandLineOption(str)
     |  QCommandLineOption(Iterable[str])
     |  QCommandLineOption(str, str, valueName: str = '', defaultValue: str = '')
     |  QCommandLineOption(Iterable[str], str, valueName: str = '', defaultValue: str = '')
     |  QCommandLineOption(QCommandLineOption)
     |  
     |  Method resolution order:
     |      QCommandLineOption
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  defaultValues(...)
     |      defaultValues(self) -> List[str]
     |  
     |  description(...)
     |      description(self) -> str
     |  
     |  flags(...)
     |      flags(self) -> QCommandLineOption.Flags
     |  
     |  isHidden(...)
     |      isHidden(self) -> bool
     |  
     |  names(...)
     |      names(self) -> List[str]
     |  
     |  setDefaultValue(...)
     |      setDefaultValue(self, str)
     |  
     |  setDefaultValues(...)
     |      setDefaultValues(self, Iterable[str])
     |  
     |  setDescription(...)
     |      setDescription(self, str)
     |  
     |  setFlags(...)
     |      setFlags(self, Union[QCommandLineOption.Flags, QCommandLineOption.Flag])
     |  
     |  setHidden(...)
     |      setHidden(self, bool)
     |  
     |  setValueName(...)
     |      setValueName(self, str)
     |  
     |  swap(...)
     |      swap(self, QCommandLineOption)
     |  
     |  valueName(...)
     |      valueName(self) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Flag = <class 'PyQt5.QtCore.QCommandLineOption.Flag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Flags = <class 'PyQt5.QtCore.QCommandLineOption.Flags'>
     |      QCommandLineOption.Flags()
     |      QCommandLineOption.Flags(Union[QCommandLineOption.Flags, QCommandLineOption.Flag])
     |      QCommandLineOption.Flags(QCommandLineOption.Flags)
     |  
     |  HiddenFromHelp = 1
     |  
     |  ShortOptionStyle = 2
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QCommandLineParser(sip.simplewrapper)
     |  QCommandLineParser()
     |  
     |  Method resolution order:
     |      QCommandLineParser
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  addHelpOption(...)
     |      addHelpOption(self) -> QCommandLineOption
     |  
     |  addOption(...)
     |      addOption(self, QCommandLineOption) -> bool
     |  
     |  addOptions(...)
     |      addOptions(self, Iterable[QCommandLineOption]) -> bool
     |  
     |  addPositionalArgument(...)
     |      addPositionalArgument(self, str, str, syntax: str = '')
     |  
     |  addVersionOption(...)
     |      addVersionOption(self) -> QCommandLineOption
     |  
     |  applicationDescription(...)
     |      applicationDescription(self) -> str
     |  
     |  clearPositionalArguments(...)
     |      clearPositionalArguments(self)
     |  
     |  errorText(...)
     |      errorText(self) -> str
     |  
     |  helpText(...)
     |      helpText(self) -> str
     |  
     |  isSet(...)
     |      isSet(self, str) -> bool
     |      isSet(self, QCommandLineOption) -> bool
     |  
     |  optionNames(...)
     |      optionNames(self) -> List[str]
     |  
     |  parse(...)
     |      parse(self, Iterable[str]) -> bool
     |  
     |  positionalArguments(...)
     |      positionalArguments(self) -> List[str]
     |  
     |  process(...)
     |      process(self, Iterable[str])
     |      process(self, QCoreApplication)
     |  
     |  setApplicationDescription(...)
     |      setApplicationDescription(self, str)
     |  
     |  setOptionsAfterPositionalArgumentsMode(...)
     |      setOptionsAfterPositionalArgumentsMode(self, QCommandLineParser.OptionsAfterPositionalArgumentsMode)
     |  
     |  setSingleDashWordOptionMode(...)
     |      setSingleDashWordOptionMode(self, QCommandLineParser.SingleDashWordOptionMode)
     |  
     |  showHelp(...)
     |      showHelp(self, exitCode: int = 0)
     |  
     |  showVersion(...)
     |      showVersion(self)
     |  
     |  unknownOptionNames(...)
     |      unknownOptionNames(self) -> List[str]
     |  
     |  value(...)
     |      value(self, str) -> str
     |      value(self, QCommandLineOption) -> str
     |  
     |  values(...)
     |      values(self, str) -> List[str]
     |      values(self, QCommandLineOption) -> List[str]
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  OptionsAfterPositionalArgumentsMode = <class 'PyQt5.QtCore.QCommandLin...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ParseAsCompactedShortOptions = 0
     |  
     |  ParseAsLongOptions = 1
     |  
     |  ParseAsOptions = 0
     |  
     |  ParseAsPositionalArguments = 1
     |  
     |  SingleDashWordOptionMode = <class 'PyQt5.QtCore.QCommandLineParser.Sin...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QCoreApplication(QObject)
     |  QCoreApplication(List[str])
     |  
     |  Method resolution order:
     |      QCoreApplication
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  aboutToQuit = <unbound PYQT_SIGNAL aboutToQuit()>
     |  addLibraryPath(...)
     |      addLibraryPath(str)
     |  
     |  applicationDirPath(...)
     |      applicationDirPath() -> str
     |  
     |  applicationFilePath(...)
     |      applicationFilePath() -> str
     |  
     |  applicationName(...)
     |      applicationName() -> str
     |  
     |  applicationPid(...)
     |      applicationPid() -> int
     |  
     |  applicationVersion(...)
     |      applicationVersion() -> str
     |  
     |  arguments(...)
     |      arguments() -> List[str]
     |  
     |  closingDown(...)
     |      closingDown() -> bool
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventDispatcher(...)
     |      eventDispatcher() -> QAbstractEventDispatcher
     |  
     |  exec(...)
     |      exec() -> int
     |  
     |  exec_(...)
     |      exec_() -> int
     |  
     |  exit(...)
     |      exit(returnCode: int = 0)
     |  
     |  flush(...)
     |      flush()
     |  
     |  hasPendingEvents(...)
     |      hasPendingEvents() -> bool
     |  
     |  installNativeEventFilter(...)
     |      installNativeEventFilter(self, QAbstractNativeEventFilter)
     |  
     |  installTranslator(...)
     |      installTranslator(QTranslator) -> bool
     |  
     |  instance(...)
     |      instance() -> QCoreApplication
     |  
     |  isQuitLockEnabled(...)
     |      isQuitLockEnabled() -> bool
     |  
     |  isSetuidAllowed(...)
     |      isSetuidAllowed() -> bool
     |  
     |  libraryPaths(...)
     |      libraryPaths() -> List[str]
     |  
     |  notify(...)
     |      notify(self, QObject, QEvent) -> bool
     |  
     |  organizationDomain(...)
     |      organizationDomain() -> str
     |  
     |  organizationName(...)
     |      organizationName() -> str
     |  
     |  postEvent(...)
     |      postEvent(QObject, QEvent, priority: int = Qt.NormalEventPriority)
     |  
     |  processEvents(...)
     |      processEvents(flags: Union[QEventLoop.ProcessEventsFlags, QEventLoop.ProcessEventsFlag] = QEventLoop.AllEvents)
     |      processEvents(Union[QEventLoop.ProcessEventsFlags, QEventLoop.ProcessEventsFlag], int)
     |  
     |  quit(...)
     |      quit()
     |  
     |  removeLibraryPath(...)
     |      removeLibraryPath(str)
     |  
     |  removeNativeEventFilter(...)
     |      removeNativeEventFilter(self, QAbstractNativeEventFilter)
     |  
     |  removePostedEvents(...)
     |      removePostedEvents(QObject, eventType: int = 0)
     |  
     |  removeTranslator(...)
     |      removeTranslator(QTranslator) -> bool
     |  
     |  sendEvent(...)
     |      sendEvent(QObject, QEvent) -> bool
     |  
     |  sendPostedEvents(...)
     |      sendPostedEvents(receiver: QObject = None, eventType: int = 0)
     |  
     |  setApplicationName(...)
     |      setApplicationName(str)
     |  
     |  setApplicationVersion(...)
     |      setApplicationVersion(str)
     |  
     |  setAttribute(...)
     |      setAttribute(Qt.ApplicationAttribute, on: bool = True)
     |  
     |  setEventDispatcher(...)
     |      setEventDispatcher(QAbstractEventDispatcher)
     |  
     |  setLibraryPaths(...)
     |      setLibraryPaths(Iterable[str])
     |  
     |  setOrganizationDomain(...)
     |      setOrganizationDomain(str)
     |  
     |  setOrganizationName(...)
     |      setOrganizationName(str)
     |  
     |  setQuitLockEnabled(...)
     |      setQuitLockEnabled(bool)
     |  
     |  setSetuidAllowed(...)
     |      setSetuidAllowed(bool)
     |  
     |  startingUp(...)
     |      startingUp() -> bool
     |  
     |  testAttribute(...)
     |      testAttribute(Qt.ApplicationAttribute) -> bool
     |  
     |  translate(...)
     |      translate(str, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QCryptographicHash(sip.simplewrapper)
     |  QCryptographicHash(QCryptographicHash.Algorithm)
     |  
     |  Method resolution order:
     |      QCryptographicHash
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  addData(...)
     |      addData(self, bytes)
     |      addData(self, Union[QByteArray, bytes, bytearray])
     |      addData(self, QIODevice) -> bool
     |  
     |  hash(...)
     |      hash(Union[QByteArray, bytes, bytearray], QCryptographicHash.Algorithm) -> QByteArray
     |  
     |  reset(...)
     |      reset(self)
     |  
     |  result(...)
     |      result(self) -> QByteArray
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Algorithm = <class 'PyQt5.QtCore.QCryptographicHash.Algorithm'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Keccak_224 = 7
     |  
     |  Keccak_256 = 8
     |  
     |  Keccak_384 = 9
     |  
     |  Keccak_512 = 10
     |  
     |  Md4 = 0
     |  
     |  Md5 = 1
     |  
     |  Sha1 = 2
     |  
     |  Sha224 = 3
     |  
     |  Sha256 = 4
     |  
     |  Sha384 = 5
     |  
     |  Sha3_224 = 11
     |  
     |  Sha3_256 = 12
     |  
     |  Sha3_384 = 13
     |  
     |  Sha3_512 = 14
     |  
     |  Sha512 = 6
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QDataStream(sip.simplewrapper)
     |  QDataStream()
     |  QDataStream(QIODevice)
     |  QDataStream(QByteArray, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |  QDataStream(QByteArray)
     |  
     |  Method resolution order:
     |      QDataStream
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __lshift__(self, value, /)
     |      Return self<<value.
     |  
     |  __rlshift__(self, value, /)
     |      Return value<<self.
     |  
     |  __rrshift__(self, value, /)
     |      Return value>>self.
     |  
     |  __rshift__(self, value, /)
     |      Return self>>value.
     |  
     |  abortTransaction(...)
     |      abortTransaction(self)
     |  
     |  atEnd(...)
     |      atEnd(self) -> bool
     |  
     |  byteOrder(...)
     |      byteOrder(self) -> QDataStream.ByteOrder
     |  
     |  commitTransaction(...)
     |      commitTransaction(self) -> bool
     |  
     |  device(...)
     |      device(self) -> QIODevice
     |  
     |  floatingPointPrecision(...)
     |      floatingPointPrecision(self) -> QDataStream.FloatingPointPrecision
     |  
     |  readBool(...)
     |      readBool(self) -> bool
     |  
     |  readBytes(...)
     |      readBytes(self) -> bytes
     |  
     |  readDouble(...)
     |      readDouble(self) -> float
     |  
     |  readFloat(...)
     |      readFloat(self) -> float
     |  
     |  readInt(...)
     |      readInt(self) -> int
     |  
     |  readInt16(...)
     |      readInt16(self) -> int
     |  
     |  readInt32(...)
     |      readInt32(self) -> int
     |  
     |  readInt64(...)
     |      readInt64(self) -> int
     |  
     |  readInt8(...)
     |      readInt8(self) -> int
     |  
     |  readQString(...)
     |      readQString(self) -> str
     |  
     |  readQStringList(...)
     |      readQStringList(self) -> List[str]
     |  
     |  readQVariant(...)
     |      readQVariant(self) -> Any
     |  
     |  readQVariantHash(...)
     |      readQVariantHash(self) -> Dict[str, Any]
     |  
     |  readQVariantList(...)
     |      readQVariantList(self) -> List[Any]
     |  
     |  readQVariantMap(...)
     |      readQVariantMap(self) -> Dict[str, Any]
     |  
     |  readRawData(...)
     |      readRawData(self, int) -> bytes
     |  
     |  readString(...)
     |      readString(self) -> bytes
     |  
     |  readUInt16(...)
     |      readUInt16(self) -> int
     |  
     |  readUInt32(...)
     |      readUInt32(self) -> int
     |  
     |  readUInt64(...)
     |      readUInt64(self) -> int
     |  
     |  readUInt8(...)
     |      readUInt8(self) -> int
     |  
     |  resetStatus(...)
     |      resetStatus(self)
     |  
     |  rollbackTransaction(...)
     |      rollbackTransaction(self)
     |  
     |  setByteOrder(...)
     |      setByteOrder(self, QDataStream.ByteOrder)
     |  
     |  setDevice(...)
     |      setDevice(self, QIODevice)
     |  
     |  setFloatingPointPrecision(...)
     |      setFloatingPointPrecision(self, QDataStream.FloatingPointPrecision)
     |  
     |  setStatus(...)
     |      setStatus(self, QDataStream.Status)
     |  
     |  setVersion(...)
     |      setVersion(self, int)
     |  
     |  skipRawData(...)
     |      skipRawData(self, int) -> int
     |  
     |  startTransaction(...)
     |      startTransaction(self)
     |  
     |  status(...)
     |      status(self) -> QDataStream.Status
     |  
     |  version(...)
     |      version(self) -> int
     |  
     |  writeBool(...)
     |      writeBool(self, bool)
     |  
     |  writeBytes(...)
     |      writeBytes(self, bytes) -> QDataStream
     |  
     |  writeDouble(...)
     |      writeDouble(self, float)
     |  
     |  writeFloat(...)
     |      writeFloat(self, float)
     |  
     |  writeInt(...)
     |      writeInt(self, int)
     |  
     |  writeInt16(...)
     |      writeInt16(self, int)
     |  
     |  writeInt32(...)
     |      writeInt32(self, int)
     |  
     |  writeInt64(...)
     |      writeInt64(self, int)
     |  
     |  writeInt8(...)
     |      writeInt8(self, int)
     |  
     |  writeQString(...)
     |      writeQString(self, str)
     |  
     |  writeQStringList(...)
     |      writeQStringList(self, Iterable[str])
     |  
     |  writeQVariant(...)
     |      writeQVariant(self, Any)
     |  
     |  writeQVariantHash(...)
     |      writeQVariantHash(self, Dict[str, Any])
     |  
     |  writeQVariantList(...)
     |      writeQVariantList(self, Iterable[Any])
     |  
     |  writeQVariantMap(...)
     |      writeQVariantMap(self, Dict[str, Any])
     |  
     |  writeRawData(...)
     |      writeRawData(self, bytes) -> int
     |  
     |  writeString(...)
     |      writeString(self, str)
     |  
     |  writeUInt16(...)
     |      writeUInt16(self, int)
     |  
     |  writeUInt32(...)
     |      writeUInt32(self, int)
     |  
     |  writeUInt64(...)
     |      writeUInt64(self, int)
     |  
     |  writeUInt8(...)
     |      writeUInt8(self, int)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  BigEndian = 0
     |  
     |  ByteOrder = <class 'PyQt5.QtCore.QDataStream.ByteOrder'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  DoublePrecision = 1
     |  
     |  FloatingPointPrecision = <class 'PyQt5.QtCore.QDataStream.FloatingPoin...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  LittleEndian = 1
     |  
     |  Ok = 0
     |  
     |  Qt_1_0 = 1
     |  
     |  Qt_2_0 = 2
     |  
     |  Qt_2_1 = 3
     |  
     |  Qt_3_0 = 4
     |  
     |  Qt_3_1 = 5
     |  
     |  Qt_3_3 = 6
     |  
     |  Qt_4_0 = 7
     |  
     |  Qt_4_1 = 7
     |  
     |  Qt_4_2 = 8
     |  
     |  Qt_4_3 = 9
     |  
     |  Qt_4_4 = 10
     |  
     |  Qt_4_5 = 11
     |  
     |  Qt_4_6 = 12
     |  
     |  Qt_4_7 = 12
     |  
     |  Qt_4_8 = 12
     |  
     |  Qt_4_9 = 12
     |  
     |  Qt_5_0 = 13
     |  
     |  Qt_5_1 = 14
     |  
     |  Qt_5_10 = 17
     |  
     |  Qt_5_11 = 17
     |  
     |  Qt_5_2 = 15
     |  
     |  Qt_5_3 = 15
     |  
     |  Qt_5_4 = 16
     |  
     |  Qt_5_5 = 16
     |  
     |  Qt_5_6 = 17
     |  
     |  Qt_5_7 = 17
     |  
     |  Qt_5_8 = 17
     |  
     |  Qt_5_9 = 17
     |  
     |  ReadCorruptData = 2
     |  
     |  ReadPastEnd = 1
     |  
     |  SinglePrecision = 0
     |  
     |  Status = <class 'PyQt5.QtCore.QDataStream.Status'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Version = <class 'PyQt5.QtCore.QDataStream.Version'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  WriteFailed = 3
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QDate(sip.simplewrapper)
     |  QDate()
     |  QDate(int, int, int)
     |  QDate(QDate)
     |  
     |  Method resolution order:
     |      QDate
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __bool__(self, /)
     |      self != 0
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __reduce__ = _pickle_type(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  addDays(...)
     |      addDays(self, int) -> QDate
     |  
     |  addMonths(...)
     |      addMonths(self, int) -> QDate
     |  
     |  addYears(...)
     |      addYears(self, int) -> QDate
     |  
     |  currentDate(...)
     |      currentDate() -> QDate
     |  
     |  day(...)
     |      day(self) -> int
     |  
     |  dayOfWeek(...)
     |      dayOfWeek(self) -> int
     |  
     |  dayOfYear(...)
     |      dayOfYear(self) -> int
     |  
     |  daysInMonth(...)
     |      daysInMonth(self) -> int
     |  
     |  daysInYear(...)
     |      daysInYear(self) -> int
     |  
     |  daysTo(...)
     |      daysTo(self, Union[QDate, datetime.date]) -> int
     |  
     |  fromJulianDay(...)
     |      fromJulianDay(int) -> QDate
     |  
     |  fromString(...)
     |      fromString(str, format: Qt.DateFormat = Qt.TextDate) -> QDate
     |      fromString(str, str) -> QDate
     |  
     |  getDate(...)
     |      getDate(self) -> Tuple[int, int, int]
     |  
     |  isLeapYear(...)
     |      isLeapYear(int) -> bool
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |      isValid(int, int, int) -> bool
     |  
     |  longDayName(...)
     |      longDayName(int, type: QDate.MonthNameType = QDate.DateFormat) -> str
     |  
     |  longMonthName(...)
     |      longMonthName(int, type: QDate.MonthNameType = QDate.DateFormat) -> str
     |  
     |  month(...)
     |      month(self) -> int
     |  
     |  setDate(...)
     |      setDate(self, int, int, int) -> bool
     |  
     |  shortDayName(...)
     |      shortDayName(int, type: QDate.MonthNameType = QDate.DateFormat) -> str
     |  
     |  shortMonthName(...)
     |      shortMonthName(int, type: QDate.MonthNameType = QDate.DateFormat) -> str
     |  
     |  toJulianDay(...)
     |      toJulianDay(self) -> int
     |  
     |  toPyDate(...)
     |      toPyDate(self) -> datetime.date
     |  
     |  toString(...)
     |      toString(self, format: Qt.DateFormat = Qt.TextDate) -> str
     |      toString(self, str) -> str
     |  
     |  weekNumber(...)
     |      weekNumber(self) -> Tuple[int, int]
     |  
     |  year(...)
     |      year(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  DateFormat = 0
     |  
     |  MonthNameType = <class 'PyQt5.QtCore.QDate.MonthNameType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  StandaloneFormat = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QDateTime(sip.simplewrapper)
     |  QDateTime()
     |  QDateTime(Union[QDateTime, datetime.datetime])
     |  QDateTime(Union[QDate, datetime.date])
     |  QDateTime(Union[QDate, datetime.date], Union[QTime, datetime.time], timeSpec: Qt.TimeSpec = Qt.LocalTime)
     |  QDateTime(int, int, int, int, int, second: int = 0, msec: int = 0, timeSpec: int = 0)
     |  QDateTime(Union[QDate, datetime.date], Union[QTime, datetime.time], Qt.TimeSpec, int)
     |  QDateTime(Union[QDate, datetime.date], Union[QTime, datetime.time], QTimeZone)
     |  
     |  Method resolution order:
     |      QDateTime
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __bool__(self, /)
     |      self != 0
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __reduce__ = _pickle_type(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  addDays(...)
     |      addDays(self, int) -> QDateTime
     |  
     |  addMSecs(...)
     |      addMSecs(self, int) -> QDateTime
     |  
     |  addMonths(...)
     |      addMonths(self, int) -> QDateTime
     |  
     |  addSecs(...)
     |      addSecs(self, int) -> QDateTime
     |  
     |  addYears(...)
     |      addYears(self, int) -> QDateTime
     |  
     |  currentDateTime(...)
     |      currentDateTime() -> QDateTime
     |  
     |  currentDateTimeUtc(...)
     |      currentDateTimeUtc() -> QDateTime
     |  
     |  currentMSecsSinceEpoch(...)
     |      currentMSecsSinceEpoch() -> int
     |  
     |  currentSecsSinceEpoch(...)
     |      currentSecsSinceEpoch() -> int
     |  
     |  date(...)
     |      date(self) -> QDate
     |  
     |  daysTo(...)
     |      daysTo(self, Union[QDateTime, datetime.datetime]) -> int
     |  
     |  fromMSecsSinceEpoch(...)
     |      fromMSecsSinceEpoch(int) -> QDateTime
     |      fromMSecsSinceEpoch(int, Qt.TimeSpec, offsetSeconds: int = 0) -> QDateTime
     |      fromMSecsSinceEpoch(int, QTimeZone) -> QDateTime
     |  
     |  fromSecsSinceEpoch(...)
     |      fromSecsSinceEpoch(int, spec: Qt.TimeSpec = Qt.LocalTime, offsetSeconds: int = 0) -> QDateTime
     |      fromSecsSinceEpoch(int, QTimeZone) -> QDateTime
     |  
     |  fromString(...)
     |      fromString(str, format: Qt.DateFormat = Qt.TextDate) -> QDateTime
     |      fromString(str, str) -> QDateTime
     |  
     |  fromTime_t(...)
     |      fromTime_t(int) -> QDateTime
     |      fromTime_t(int, Qt.TimeSpec, offsetSeconds: int = 0) -> QDateTime
     |      fromTime_t(int, QTimeZone) -> QDateTime
     |  
     |  isDaylightTime(...)
     |      isDaylightTime(self) -> bool
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  msecsTo(...)
     |      msecsTo(self, Union[QDateTime, datetime.datetime]) -> int
     |  
     |  offsetFromUtc(...)
     |      offsetFromUtc(self) -> int
     |  
     |  secsTo(...)
     |      secsTo(self, Union[QDateTime, datetime.datetime]) -> int
     |  
     |  setDate(...)
     |      setDate(self, Union[QDate, datetime.date])
     |  
     |  setMSecsSinceEpoch(...)
     |      setMSecsSinceEpoch(self, int)
     |  
     |  setOffsetFromUtc(...)
     |      setOffsetFromUtc(self, int)
     |  
     |  setSecsSinceEpoch(...)
     |      setSecsSinceEpoch(self, int)
     |  
     |  setTime(...)
     |      setTime(self, Union[QTime, datetime.time])
     |  
     |  setTimeSpec(...)
     |      setTimeSpec(self, Qt.TimeSpec)
     |  
     |  setTimeZone(...)
     |      setTimeZone(self, QTimeZone)
     |  
     |  setTime_t(...)
     |      setTime_t(self, int)
     |  
     |  swap(...)
     |      swap(self, QDateTime)
     |  
     |  time(...)
     |      time(self) -> QTime
     |  
     |  timeSpec(...)
     |      timeSpec(self) -> Qt.TimeSpec
     |  
     |  timeZone(...)
     |      timeZone(self) -> QTimeZone
     |  
     |  timeZoneAbbreviation(...)
     |      timeZoneAbbreviation(self) -> str
     |  
     |  toLocalTime(...)
     |      toLocalTime(self) -> QDateTime
     |  
     |  toMSecsSinceEpoch(...)
     |      toMSecsSinceEpoch(self) -> int
     |  
     |  toOffsetFromUtc(...)
     |      toOffsetFromUtc(self, int) -> QDateTime
     |  
     |  toPyDateTime(...)
     |      toPyDateTime(self) -> datetime.datetime
     |  
     |  toSecsSinceEpoch(...)
     |      toSecsSinceEpoch(self) -> int
     |  
     |  toString(...)
     |      toString(self, format: Qt.DateFormat = Qt.TextDate) -> str
     |      toString(self, str) -> str
     |  
     |  toTimeSpec(...)
     |      toTimeSpec(self, Qt.TimeSpec) -> QDateTime
     |  
     |  toTimeZone(...)
     |      toTimeZone(self, QTimeZone) -> QDateTime
     |  
     |  toTime_t(...)
     |      toTime_t(self) -> int
     |  
     |  toUTC(...)
     |      toUTC(self) -> QDateTime
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QDeadlineTimer(sip.simplewrapper)
     |  QDeadlineTimer(type: Qt.TimerType = Qt.CoarseTimer)
     |  QDeadlineTimer(QDeadlineTimer.ForeverConstant, type: Qt.TimerType = Qt.CoarseTimer)
     |  QDeadlineTimer(int, type: Qt.TimerType = Qt.CoarseTimer)
     |  QDeadlineTimer(QDeadlineTimer)
     |  
     |  Method resolution order:
     |      QDeadlineTimer
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __iadd__(self, value, /)
     |      Return self+=value.
     |  
     |  __isub__(self, value, /)
     |      Return self-=value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __radd__(self, value, /)
     |      Return value+self.
     |  
     |  __rsub__(self, value, /)
     |      Return value-self.
     |  
     |  __sub__(self, value, /)
     |      Return self-value.
     |  
     |  addNSecs(...)
     |      addNSecs(QDeadlineTimer, int) -> QDeadlineTimer
     |  
     |  current(...)
     |      current(type: Qt.TimerType = Qt.CoarseTimer) -> QDeadlineTimer
     |  
     |  deadline(...)
     |      deadline(self) -> int
     |  
     |  deadlineNSecs(...)
     |      deadlineNSecs(self) -> int
     |  
     |  hasExpired(...)
     |      hasExpired(self) -> bool
     |  
     |  isForever(...)
     |      isForever(self) -> bool
     |  
     |  remainingTime(...)
     |      remainingTime(self) -> int
     |  
     |  remainingTimeNSecs(...)
     |      remainingTimeNSecs(self) -> int
     |  
     |  setDeadline(...)
     |      setDeadline(self, int, type: Qt.TimerType = Qt.CoarseTimer)
     |  
     |  setPreciseDeadline(...)
     |      setPreciseDeadline(self, int, nsecs: int = 0, type: Qt.TimerType = Qt.CoarseTimer)
     |  
     |  setPreciseRemainingTime(...)
     |      setPreciseRemainingTime(self, int, nsecs: int = 0, type: Qt.TimerType = Qt.CoarseTimer)
     |  
     |  setRemainingTime(...)
     |      setRemainingTime(self, int, type: Qt.TimerType = Qt.CoarseTimer)
     |  
     |  setTimerType(...)
     |      setTimerType(self, Qt.TimerType)
     |  
     |  swap(...)
     |      swap(self, QDeadlineTimer)
     |  
     |  timerType(...)
     |      timerType(self) -> Qt.TimerType
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Forever = 0
     |  
     |  ForeverConstant = <class 'PyQt5.QtCore.QDeadlineTimer.ForeverConstant'...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QDir(sip.simplewrapper)
     |  QDir(QDir)
     |  QDir(path: str = '')
     |  QDir(str, str, sort: QDir.SortFlags = QDir.Name|QDir.IgnoreCase, filters: QDir.Filters = QDir.AllEntries)
     |  
     |  Method resolution order:
     |      QDir
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __contains__(self, key, /)
     |      Return key in self.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __len__(self, /)
     |      Return len(self).
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  absoluteFilePath(...)
     |      absoluteFilePath(self, str) -> str
     |  
     |  absolutePath(...)
     |      absolutePath(self) -> str
     |  
     |  addSearchPath(...)
     |      addSearchPath(str, str)
     |  
     |  canonicalPath(...)
     |      canonicalPath(self) -> str
     |  
     |  cd(...)
     |      cd(self, str) -> bool
     |  
     |  cdUp(...)
     |      cdUp(self) -> bool
     |  
     |  cleanPath(...)
     |      cleanPath(str) -> str
     |  
     |  count(...)
     |      count(self) -> int
     |  
     |  current(...)
     |      current() -> QDir
     |  
     |  currentPath(...)
     |      currentPath() -> str
     |  
     |  dirName(...)
     |      dirName(self) -> str
     |  
     |  drives(...)
     |      drives() -> List[QFileInfo]
     |  
     |  entryInfoList(...)
     |      entryInfoList(self, filters: Union[QDir.Filters, QDir.Filter] = QDir.NoFilter, sort: Union[QDir.SortFlags, QDir.SortFlag] = QDir.NoSort) -> List[QFileInfo]
     |      entryInfoList(self, Iterable[str], filters: Union[QDir.Filters, QDir.Filter] = QDir.NoFilter, sort: Union[QDir.SortFlags, QDir.SortFlag] = QDir.NoSort) -> List[QFileInfo]
     |  
     |  entryList(...)
     |      entryList(self, filters: Union[QDir.Filters, QDir.Filter] = QDir.NoFilter, sort: Union[QDir.SortFlags, QDir.SortFlag] = QDir.NoSort) -> List[str]
     |      entryList(self, Iterable[str], filters: Union[QDir.Filters, QDir.Filter] = QDir.NoFilter, sort: Union[QDir.SortFlags, QDir.SortFlag] = QDir.NoSort) -> List[str]
     |  
     |  exists(...)
     |      exists(self) -> bool
     |      exists(self, str) -> bool
     |  
     |  filePath(...)
     |      filePath(self, str) -> str
     |  
     |  filter(...)
     |      filter(self) -> QDir.Filters
     |  
     |  fromNativeSeparators(...)
     |      fromNativeSeparators(str) -> str
     |  
     |  home(...)
     |      home() -> QDir
     |  
     |  homePath(...)
     |      homePath() -> str
     |  
     |  isAbsolute(...)
     |      isAbsolute(self) -> bool
     |  
     |  isAbsolutePath(...)
     |      isAbsolutePath(str) -> bool
     |  
     |  isEmpty(...)
     |      isEmpty(self, filters: Union[QDir.Filters, QDir.Filter] = QDir.AllEntries|QDir.NoDotAndDotDot) -> bool
     |  
     |  isReadable(...)
     |      isReadable(self) -> bool
     |  
     |  isRelative(...)
     |      isRelative(self) -> bool
     |  
     |  isRelativePath(...)
     |      isRelativePath(str) -> bool
     |  
     |  isRoot(...)
     |      isRoot(self) -> bool
     |  
     |  listSeparator(...)
     |      listSeparator() -> str
     |  
     |  makeAbsolute(...)
     |      makeAbsolute(self) -> bool
     |  
     |  match(...)
     |      match(Iterable[str], str) -> bool
     |      match(str, str) -> bool
     |  
     |  mkdir(...)
     |      mkdir(self, str) -> bool
     |  
     |  mkpath(...)
     |      mkpath(self, str) -> bool
     |  
     |  nameFilters(...)
     |      nameFilters(self) -> List[str]
     |  
     |  nameFiltersFromString(...)
     |      nameFiltersFromString(str) -> List[str]
     |  
     |  path(...)
     |      path(self) -> str
     |  
     |  refresh(...)
     |      refresh(self)
     |  
     |  relativeFilePath(...)
     |      relativeFilePath(self, str) -> str
     |  
     |  remove(...)
     |      remove(self, str) -> bool
     |  
     |  removeRecursively(...)
     |      removeRecursively(self) -> bool
     |  
     |  rename(...)
     |      rename(self, str, str) -> bool
     |  
     |  rmdir(...)
     |      rmdir(self, str) -> bool
     |  
     |  rmpath(...)
     |      rmpath(self, str) -> bool
     |  
     |  root(...)
     |      root() -> QDir
     |  
     |  rootPath(...)
     |      rootPath() -> str
     |  
     |  searchPaths(...)
     |      searchPaths(str) -> List[str]
     |  
     |  separator(...)
     |      separator() -> str
     |  
     |  setCurrent(...)
     |      setCurrent(str) -> bool
     |  
     |  setFilter(...)
     |      setFilter(self, Union[QDir.Filters, QDir.Filter])
     |  
     |  setNameFilters(...)
     |      setNameFilters(self, Iterable[str])
     |  
     |  setPath(...)
     |      setPath(self, str)
     |  
     |  setSearchPaths(...)
     |      setSearchPaths(str, Iterable[str])
     |  
     |  setSorting(...)
     |      setSorting(self, Union[QDir.SortFlags, QDir.SortFlag])
     |  
     |  sorting(...)
     |      sorting(self) -> QDir.SortFlags
     |  
     |  swap(...)
     |      swap(self, QDir)
     |  
     |  temp(...)
     |      temp() -> QDir
     |  
     |  tempPath(...)
     |      tempPath() -> str
     |  
     |  toNativeSeparators(...)
     |      toNativeSeparators(str) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AccessMask = 1008
     |  
     |  AllDirs = 1024
     |  
     |  AllEntries = 7
     |  
     |  CaseSensitive = 2048
     |  
     |  Dirs = 1
     |  
     |  DirsFirst = 4
     |  
     |  DirsLast = 32
     |  
     |  Drives = 4
     |  
     |  Executable = 64
     |  
     |  Files = 2
     |  
     |  Filter = <class 'PyQt5.QtCore.QDir.Filter'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Filters = <class 'PyQt5.QtCore.QDir.Filters'>
     |      QDir.Filters()
     |      QDir.Filters(Union[QDir.Filters, QDir.Filter])
     |      QDir.Filters(QDir.Filters)
     |  
     |  Hidden = 256
     |  
     |  IgnoreCase = 16
     |  
     |  LocaleAware = 64
     |  
     |  Modified = 128
     |  
     |  Name = 0
     |  
     |  NoDot = 8192
     |  
     |  NoDotAndDotDot = 24576
     |  
     |  NoDotDot = 16384
     |  
     |  NoFilter = -1
     |  
     |  NoSort = -1
     |  
     |  NoSymLinks = 8
     |  
     |  PermissionMask = 112
     |  
     |  Readable = 16
     |  
     |  Reversed = 8
     |  
     |  Size = 2
     |  
     |  SortByMask = 3
     |  
     |  SortFlag = <class 'PyQt5.QtCore.QDir.SortFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  SortFlags = <class 'PyQt5.QtCore.QDir.SortFlags'>
     |      QDir.SortFlags()
     |      QDir.SortFlags(Union[QDir.SortFlags, QDir.SortFlag])
     |      QDir.SortFlags(QDir.SortFlags)
     |  
     |  System = 512
     |  
     |  Time = 1
     |  
     |  Type = 128
     |  
     |  TypeMask = 15
     |  
     |  Unsorted = 3
     |  
     |  Writable = 32
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QDirIterator(sip.simplewrapper)
     |  QDirIterator(QDir, flags: QDirIterator.IteratorFlags = QDirIterator.NoIteratorFlags)
     |  QDirIterator(str, flags: QDirIterator.IteratorFlags = QDirIterator.NoIteratorFlags)
     |  QDirIterator(str, QDir.Filters, flags: QDirIterator.IteratorFlags = QDirIterator.NoIteratorFlags)
     |  QDirIterator(str, Iterable[str], filters: QDir.Filters = QDir.NoFilter, flags: QDirIterator.IteratorFlags = QDirIterator.NoIteratorFlags)
     |  
     |  Method resolution order:
     |      QDirIterator
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  fileInfo(...)
     |      fileInfo(self) -> QFileInfo
     |  
     |  fileName(...)
     |      fileName(self) -> str
     |  
     |  filePath(...)
     |      filePath(self) -> str
     |  
     |  hasNext(...)
     |      hasNext(self) -> bool
     |  
     |  next(...)
     |      next(self) -> str
     |  
     |  path(...)
     |      path(self) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  FollowSymlinks = 1
     |  
     |  IteratorFlag = <class 'PyQt5.QtCore.QDirIterator.IteratorFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  IteratorFlags = <class 'PyQt5.QtCore.QDirIterator.IteratorFlags'>
     |      QDirIterator.IteratorFlags()
     |      QDirIterator.IteratorFlags(Union[QDirIterator.IteratorFlags, QDirIterator.IteratorFlag])
     |      QDirIterator.IteratorFlags(QDirIterator.IteratorFlags)
     |  
     |  NoIteratorFlags = 0
     |  
     |  Subdirectories = 2
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QDynamicPropertyChangeEvent(QEvent)
     |  QDynamicPropertyChangeEvent(Union[QByteArray, bytes, bytearray])
     |  QDynamicPropertyChangeEvent(QDynamicPropertyChangeEvent)
     |  
     |  Method resolution order:
     |      QDynamicPropertyChangeEvent
     |      QEvent
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  propertyName(...)
     |      propertyName(self) -> QByteArray
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QEvent:
     |  
     |  accept(...)
     |      accept(self)
     |  
     |  ignore(...)
     |      ignore(self)
     |  
     |  isAccepted(...)
     |      isAccepted(self) -> bool
     |  
     |  registerEventType(...)
     |      registerEventType(hint: int = -1) -> int
     |  
     |  setAccepted(...)
     |      setAccepted(self, bool)
     |  
     |  spontaneous(...)
     |      spontaneous(self) -> bool
     |  
     |  type(...)
     |      type(self) -> QEvent.Type
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QEvent:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QEvent:
     |  
     |  ActionAdded = 114
     |  
     |  ActionChanged = 113
     |  
     |  ActionRemoved = 115
     |  
     |  ActivationChange = 99
     |  
     |  ApplicationActivate = 121
     |  
     |  ApplicationActivated = 121
     |  
     |  ApplicationDeactivate = 122
     |  
     |  ApplicationDeactivated = 122
     |  
     |  ApplicationFontChange = 36
     |  
     |  ApplicationLayoutDirectionChange = 37
     |  
     |  ApplicationPaletteChange = 38
     |  
     |  ApplicationStateChange = 214
     |  
     |  ApplicationWindowIconChange = 35
     |  
     |  ChildAdded = 68
     |  
     |  ChildPolished = 69
     |  
     |  ChildRemoved = 71
     |  
     |  Clipboard = 40
     |  
     |  Close = 19
     |  
     |  CloseSoftwareInputPanel = 200
     |  
     |  ContentsRectChange = 178
     |  
     |  ContextMenu = 82
     |  
     |  CursorChange = 183
     |  
     |  DeferredDelete = 52
     |  
     |  DragEnter = 60
     |  
     |  DragLeave = 62
     |  
     |  DragMove = 61
     |  
     |  Drop = 63
     |  
     |  DynamicPropertyChange = 170
     |  
     |  EnabledChange = 98
     |  
     |  Enter = 10
     |  
     |  EnterWhatsThisMode = 124
     |  
     |  Expose = 206
     |  
     |  FileOpen = 116
     |  
     |  FocusAboutToChange = 23
     |  
     |  FocusIn = 8
     |  
     |  FocusOut = 9
     |  
     |  FontChange = 97
     |  
     |  Gesture = 198
     |  
     |  GestureOverride = 202
     |  
     |  GrabKeyboard = 188
     |  
     |  GrabMouse = 186
     |  
     |  GraphicsSceneContextMenu = 159
     |  
     |  GraphicsSceneDragEnter = 164
     |  
     |  GraphicsSceneDragLeave = 166
     |  
     |  GraphicsSceneDragMove = 165
     |  
     |  GraphicsSceneDrop = 167
     |  
     |  GraphicsSceneHelp = 163
     |  
     |  GraphicsSceneHoverEnter = 160
     |  
     |  GraphicsSceneHoverLeave = 162
     |  
     |  GraphicsSceneHoverMove = 161
     |  
     |  GraphicsSceneMouseDoubleClick = 158
     |  
     |  GraphicsSceneMouseMove = 155
     |  
     |  GraphicsSceneMousePress = 156
     |  
     |  GraphicsSceneMouseRelease = 157
     |  
     |  GraphicsSceneMove = 182
     |  
     |  GraphicsSceneResize = 181
     |  
     |  GraphicsSceneWheel = 168
     |  
     |  Hide = 18
     |  
     |  HideToParent = 27
     |  
     |  HoverEnter = 127
     |  
     |  HoverLeave = 128
     |  
     |  HoverMove = 129
     |  
     |  IconDrag = 96
     |  
     |  IconTextChange = 101
     |  
     |  InputMethod = 83
     |  
     |  InputMethodQuery = 207
     |  
     |  KeyPress = 6
     |  
     |  KeyRelease = 7
     |  
     |  KeyboardLayoutChange = 169
     |  
     |  LanguageChange = 89
     |  
     |  LayoutDirectionChange = 90
     |  
     |  LayoutRequest = 76
     |  
     |  Leave = 11
     |  
     |  LeaveWhatsThisMode = 125
     |  
     |  LocaleChange = 88
     |  
     |  MacSizeChange = 177
     |  
     |  MaxUser = 65535
     |  
     |  MetaCall = 43
     |  
     |  ModifiedChange = 102
     |  
     |  MouseButtonDblClick = 4
     |  
     |  MouseButtonPress = 2
     |  
     |  MouseButtonRelease = 3
     |  
     |  MouseMove = 5
     |  
     |  MouseTrackingChange = 109
     |  
     |  Move = 13
     |  
     |  NonClientAreaMouseButtonDblClick = 176
     |  
     |  NonClientAreaMouseButtonPress = 174
     |  
     |  NonClientAreaMouseButtonRelease = 175
     |  
     |  NonClientAreaMouseMove = 173
     |  
     |  None_ = 0
     |  
     |  OkRequest = 94
     |  
     |  OrientationChange = 208
     |  
     |  Paint = 12
     |  
     |  PaletteChange = 39
     |  
     |  ParentAboutToChange = 131
     |  
     |  ParentChange = 21
     |  
     |  PlatformPanel = 212
     |  
     |  PlatformSurface = 217
     |  
     |  Polish = 75
     |  
     |  PolishRequest = 74
     |  
     |  QueryWhatsThis = 123
     |  
     |  ReadOnlyChange = 106
     |  
     |  RequestSoftwareInputPanel = 199
     |  
     |  Resize = 14
     |  
     |  Scroll = 205
     |  
     |  ScrollPrepare = 204
     |  
     |  Shortcut = 117
     |  
     |  ShortcutOverride = 51
     |  
     |  Show = 17
     |  
     |  ShowToParent = 26
     |  
     |  SockAct = 50
     |  
     |  StateMachineSignal = 192
     |  
     |  StateMachineWrapped = 193
     |  
     |  StatusTip = 112
     |  
     |  StyleChange = 100
     |  
     |  TabletEnterProximity = 171
     |  
     |  TabletLeaveProximity = 172
     |  
     |  TabletMove = 87
     |  
     |  TabletPress = 92
     |  
     |  TabletRelease = 93
     |  
     |  TabletTrackingChange = 219
     |  
     |  ThreadChange = 22
     |  
     |  Timer = 1
     |  
     |  ToolBarChange = 120
     |  
     |  ToolTip = 110
     |  
     |  ToolTipChange = 184
     |  
     |  TouchBegin = 194
     |  
     |  TouchCancel = 209
     |  
     |  TouchEnd = 196
     |  
     |  TouchUpdate = 195
     |  
     |  Type = <class 'PyQt5.QtCore.QEvent.Type'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  UngrabKeyboard = 189
     |  
     |  UngrabMouse = 187
     |  
     |  UpdateLater = 78
     |  
     |  UpdateRequest = 77
     |  
     |  User = 1000
     |  
     |  WhatsThis = 111
     |  
     |  WhatsThisClicked = 118
     |  
     |  Wheel = 31
     |  
     |  WinEventAct = 132
     |  
     |  WinIdChange = 203
     |  
     |  WindowActivate = 24
     |  
     |  WindowBlocked = 103
     |  
     |  WindowDeactivate = 25
     |  
     |  WindowIconChange = 34
     |  
     |  WindowStateChange = 105
     |  
     |  WindowTitleChange = 33
     |  
     |  WindowUnblocked = 104
     |  
     |  ZOrderChange = 126
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QEasingCurve(sip.simplewrapper)
     |  QEasingCurve(type: QEasingCurve.Type = QEasingCurve.Linear)
     |  QEasingCurve(Union[QEasingCurve, QEasingCurve.Type])
     |  
     |  Method resolution order:
     |      QEasingCurve
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  addCubicBezierSegment(...)
     |      addCubicBezierSegment(self, Union[QPointF, QPoint], Union[QPointF, QPoint], Union[QPointF, QPoint])
     |  
     |  addTCBSegment(...)
     |      addTCBSegment(self, Union[QPointF, QPoint], float, float, float)
     |  
     |  amplitude(...)
     |      amplitude(self) -> float
     |  
     |  customType(...)
     |      customType(self) -> Callable[[], float]
     |  
     |  overshoot(...)
     |      overshoot(self) -> float
     |  
     |  period(...)
     |      period(self) -> float
     |  
     |  setAmplitude(...)
     |      setAmplitude(self, float)
     |  
     |  setCustomType(...)
     |      setCustomType(self, Callable[[], float])
     |  
     |  setOvershoot(...)
     |      setOvershoot(self, float)
     |  
     |  setPeriod(...)
     |      setPeriod(self, float)
     |  
     |  setType(...)
     |      setType(self, QEasingCurve.Type)
     |  
     |  swap(...)
     |      swap(self, QEasingCurve)
     |  
     |  toCubicSpline(...)
     |      toCubicSpline(self) -> List[QPointF]
     |  
     |  type(...)
     |      type(self) -> QEasingCurve.Type
     |  
     |  valueForProgress(...)
     |      valueForProgress(self, float) -> float
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  BezierSpline = 45
     |  
     |  CosineCurve = 44
     |  
     |  Custom = 47
     |  
     |  InBack = 33
     |  
     |  InBounce = 37
     |  
     |  InCirc = 25
     |  
     |  InCubic = 5
     |  
     |  InCurve = 41
     |  
     |  InElastic = 29
     |  
     |  InExpo = 21
     |  
     |  InOutBack = 35
     |  
     |  InOutBounce = 39
     |  
     |  InOutCirc = 27
     |  
     |  InOutCubic = 7
     |  
     |  InOutElastic = 31
     |  
     |  InOutExpo = 23
     |  
     |  InOutQuad = 3
     |  
     |  InOutQuart = 11
     |  
     |  InOutQuint = 15
     |  
     |  InOutSine = 19
     |  
     |  InQuad = 1
     |  
     |  InQuart = 9
     |  
     |  InQuint = 13
     |  
     |  InSine = 17
     |  
     |  Linear = 0
     |  
     |  OutBack = 34
     |  
     |  OutBounce = 38
     |  
     |  OutCirc = 26
     |  
     |  OutCubic = 6
     |  
     |  OutCurve = 42
     |  
     |  OutElastic = 30
     |  
     |  OutExpo = 22
     |  
     |  OutInBack = 36
     |  
     |  OutInBounce = 40
     |  
     |  OutInCirc = 28
     |  
     |  OutInCubic = 8
     |  
     |  OutInElastic = 32
     |  
     |  OutInExpo = 24
     |  
     |  OutInQuad = 4
     |  
     |  OutInQuart = 12
     |  
     |  OutInQuint = 16
     |  
     |  OutInSine = 20
     |  
     |  OutQuad = 2
     |  
     |  OutQuart = 10
     |  
     |  OutQuint = 14
     |  
     |  OutSine = 18
     |  
     |  SineCurve = 43
     |  
     |  TCBSpline = 46
     |  
     |  Type = <class 'PyQt5.QtCore.QEasingCurve.Type'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QElapsedTimer(sip.simplewrapper)
     |  QElapsedTimer()
     |  QElapsedTimer(QElapsedTimer)
     |  
     |  Method resolution order:
     |      QElapsedTimer
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  clockType(...)
     |      clockType() -> QElapsedTimer.ClockType
     |  
     |  elapsed(...)
     |      elapsed(self) -> int
     |  
     |  hasExpired(...)
     |      hasExpired(self, int) -> bool
     |  
     |  invalidate(...)
     |      invalidate(self)
     |  
     |  isMonotonic(...)
     |      isMonotonic() -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  msecsSinceReference(...)
     |      msecsSinceReference(self) -> int
     |  
     |  msecsTo(...)
     |      msecsTo(self, QElapsedTimer) -> int
     |  
     |  nsecsElapsed(...)
     |      nsecsElapsed(self) -> int
     |  
     |  restart(...)
     |      restart(self) -> int
     |  
     |  secsTo(...)
     |      secsTo(self, QElapsedTimer) -> int
     |  
     |  start(...)
     |      start(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ClockType = <class 'PyQt5.QtCore.QElapsedTimer.ClockType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  MachAbsoluteTime = 3
     |  
     |  MonotonicClock = 1
     |  
     |  PerformanceCounter = 4
     |  
     |  SystemTime = 0
     |  
     |  TickCounter = 2
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QEvent(sip.wrapper)
     |  QEvent(QEvent.Type)
     |  QEvent(QEvent)
     |  
     |  Method resolution order:
     |      QEvent
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  accept(...)
     |      accept(self)
     |  
     |  ignore(...)
     |      ignore(self)
     |  
     |  isAccepted(...)
     |      isAccepted(self) -> bool
     |  
     |  registerEventType(...)
     |      registerEventType(hint: int = -1) -> int
     |  
     |  setAccepted(...)
     |      setAccepted(self, bool)
     |  
     |  spontaneous(...)
     |      spontaneous(self) -> bool
     |  
     |  type(...)
     |      type(self) -> QEvent.Type
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ActionAdded = 114
     |  
     |  ActionChanged = 113
     |  
     |  ActionRemoved = 115
     |  
     |  ActivationChange = 99
     |  
     |  ApplicationActivate = 121
     |  
     |  ApplicationActivated = 121
     |  
     |  ApplicationDeactivate = 122
     |  
     |  ApplicationDeactivated = 122
     |  
     |  ApplicationFontChange = 36
     |  
     |  ApplicationLayoutDirectionChange = 37
     |  
     |  ApplicationPaletteChange = 38
     |  
     |  ApplicationStateChange = 214
     |  
     |  ApplicationWindowIconChange = 35
     |  
     |  ChildAdded = 68
     |  
     |  ChildPolished = 69
     |  
     |  ChildRemoved = 71
     |  
     |  Clipboard = 40
     |  
     |  Close = 19
     |  
     |  CloseSoftwareInputPanel = 200
     |  
     |  ContentsRectChange = 178
     |  
     |  ContextMenu = 82
     |  
     |  CursorChange = 183
     |  
     |  DeferredDelete = 52
     |  
     |  DragEnter = 60
     |  
     |  DragLeave = 62
     |  
     |  DragMove = 61
     |  
     |  Drop = 63
     |  
     |  DynamicPropertyChange = 170
     |  
     |  EnabledChange = 98
     |  
     |  Enter = 10
     |  
     |  EnterWhatsThisMode = 124
     |  
     |  Expose = 206
     |  
     |  FileOpen = 116
     |  
     |  FocusAboutToChange = 23
     |  
     |  FocusIn = 8
     |  
     |  FocusOut = 9
     |  
     |  FontChange = 97
     |  
     |  Gesture = 198
     |  
     |  GestureOverride = 202
     |  
     |  GrabKeyboard = 188
     |  
     |  GrabMouse = 186
     |  
     |  GraphicsSceneContextMenu = 159
     |  
     |  GraphicsSceneDragEnter = 164
     |  
     |  GraphicsSceneDragLeave = 166
     |  
     |  GraphicsSceneDragMove = 165
     |  
     |  GraphicsSceneDrop = 167
     |  
     |  GraphicsSceneHelp = 163
     |  
     |  GraphicsSceneHoverEnter = 160
     |  
     |  GraphicsSceneHoverLeave = 162
     |  
     |  GraphicsSceneHoverMove = 161
     |  
     |  GraphicsSceneMouseDoubleClick = 158
     |  
     |  GraphicsSceneMouseMove = 155
     |  
     |  GraphicsSceneMousePress = 156
     |  
     |  GraphicsSceneMouseRelease = 157
     |  
     |  GraphicsSceneMove = 182
     |  
     |  GraphicsSceneResize = 181
     |  
     |  GraphicsSceneWheel = 168
     |  
     |  Hide = 18
     |  
     |  HideToParent = 27
     |  
     |  HoverEnter = 127
     |  
     |  HoverLeave = 128
     |  
     |  HoverMove = 129
     |  
     |  IconDrag = 96
     |  
     |  IconTextChange = 101
     |  
     |  InputMethod = 83
     |  
     |  InputMethodQuery = 207
     |  
     |  KeyPress = 6
     |  
     |  KeyRelease = 7
     |  
     |  KeyboardLayoutChange = 169
     |  
     |  LanguageChange = 89
     |  
     |  LayoutDirectionChange = 90
     |  
     |  LayoutRequest = 76
     |  
     |  Leave = 11
     |  
     |  LeaveWhatsThisMode = 125
     |  
     |  LocaleChange = 88
     |  
     |  MacSizeChange = 177
     |  
     |  MaxUser = 65535
     |  
     |  MetaCall = 43
     |  
     |  ModifiedChange = 102
     |  
     |  MouseButtonDblClick = 4
     |  
     |  MouseButtonPress = 2
     |  
     |  MouseButtonRelease = 3
     |  
     |  MouseMove = 5
     |  
     |  MouseTrackingChange = 109
     |  
     |  Move = 13
     |  
     |  NonClientAreaMouseButtonDblClick = 176
     |  
     |  NonClientAreaMouseButtonPress = 174
     |  
     |  NonClientAreaMouseButtonRelease = 175
     |  
     |  NonClientAreaMouseMove = 173
     |  
     |  None_ = 0
     |  
     |  OkRequest = 94
     |  
     |  OrientationChange = 208
     |  
     |  Paint = 12
     |  
     |  PaletteChange = 39
     |  
     |  ParentAboutToChange = 131
     |  
     |  ParentChange = 21
     |  
     |  PlatformPanel = 212
     |  
     |  PlatformSurface = 217
     |  
     |  Polish = 75
     |  
     |  PolishRequest = 74
     |  
     |  QueryWhatsThis = 123
     |  
     |  ReadOnlyChange = 106
     |  
     |  RequestSoftwareInputPanel = 199
     |  
     |  Resize = 14
     |  
     |  Scroll = 205
     |  
     |  ScrollPrepare = 204
     |  
     |  Shortcut = 117
     |  
     |  ShortcutOverride = 51
     |  
     |  Show = 17
     |  
     |  ShowToParent = 26
     |  
     |  SockAct = 50
     |  
     |  StateMachineSignal = 192
     |  
     |  StateMachineWrapped = 193
     |  
     |  StatusTip = 112
     |  
     |  StyleChange = 100
     |  
     |  TabletEnterProximity = 171
     |  
     |  TabletLeaveProximity = 172
     |  
     |  TabletMove = 87
     |  
     |  TabletPress = 92
     |  
     |  TabletRelease = 93
     |  
     |  TabletTrackingChange = 219
     |  
     |  ThreadChange = 22
     |  
     |  Timer = 1
     |  
     |  ToolBarChange = 120
     |  
     |  ToolTip = 110
     |  
     |  ToolTipChange = 184
     |  
     |  TouchBegin = 194
     |  
     |  TouchCancel = 209
     |  
     |  TouchEnd = 196
     |  
     |  TouchUpdate = 195
     |  
     |  Type = <class 'PyQt5.QtCore.QEvent.Type'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  UngrabKeyboard = 189
     |  
     |  UngrabMouse = 187
     |  
     |  UpdateLater = 78
     |  
     |  UpdateRequest = 77
     |  
     |  User = 1000
     |  
     |  WhatsThis = 111
     |  
     |  WhatsThisClicked = 118
     |  
     |  Wheel = 31
     |  
     |  WinEventAct = 132
     |  
     |  WinIdChange = 203
     |  
     |  WindowActivate = 24
     |  
     |  WindowBlocked = 103
     |  
     |  WindowDeactivate = 25
     |  
     |  WindowIconChange = 34
     |  
     |  WindowStateChange = 105
     |  
     |  WindowTitleChange = 33
     |  
     |  WindowUnblocked = 104
     |  
     |  ZOrderChange = 126
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QEventLoop(QObject)
     |  QEventLoop(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QEventLoop
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  exec(...)
     |      exec(self, flags: QEventLoop.ProcessEventsFlags = QEventLoop.AllEvents) -> int
     |  
     |  exec_(...)
     |      exec_(self, flags: QEventLoop.ProcessEventsFlags = QEventLoop.AllEvents) -> int
     |  
     |  exit(...)
     |      exit(self, returnCode: int = 0)
     |  
     |  isRunning(...)
     |      isRunning(self) -> bool
     |  
     |  processEvents(...)
     |      processEvents(self, flags: Union[QEventLoop.ProcessEventsFlags, QEventLoop.ProcessEventsFlag] = QEventLoop.AllEvents) -> bool
     |      processEvents(self, Union[QEventLoop.ProcessEventsFlags, QEventLoop.ProcessEventsFlag], int)
     |  
     |  quit(...)
     |      quit(self)
     |  
     |  wakeUp(...)
     |      wakeUp(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AllEvents = 0
     |  
     |  ExcludeSocketNotifiers = 2
     |  
     |  ExcludeUserInputEvents = 1
     |  
     |  ProcessEventsFlag = <class 'PyQt5.QtCore.QEventLoop.ProcessEventsFlag'...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ProcessEventsFlags = <class 'PyQt5.QtCore.QEventLoop.ProcessEventsFlag...
     |      QEventLoop.ProcessEventsFlags()
     |      QEventLoop.ProcessEventsFlags(Union[QEventLoop.ProcessEventsFlags, QEventLoop.ProcessEventsFlag])
     |      QEventLoop.ProcessEventsFlags(QEventLoop.ProcessEventsFlags)
     |  
     |  WaitForMoreEvents = 4
     |  
     |  X11ExcludeTimers = 8
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QEventLoopLocker(sip.simplewrapper)
     |  QEventLoopLocker()
     |  QEventLoopLocker(QEventLoop)
     |  QEventLoopLocker(QThread)
     |  
     |  Method resolution order:
     |      QEventLoopLocker
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QEventTransition(QAbstractTransition)
     |  QEventTransition(sourceState: QState = None)
     |  QEventTransition(QObject, QEvent.Type, sourceState: QState = None)
     |  
     |  Method resolution order:
     |      QEventTransition
     |      QAbstractTransition
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventSource(...)
     |      eventSource(self) -> QObject
     |  
     |  eventTest(...)
     |      eventTest(self, QEvent) -> bool
     |  
     |  eventType(...)
     |      eventType(self) -> QEvent.Type
     |  
     |  onTransition(...)
     |      onTransition(self, QEvent)
     |  
     |  setEventSource(...)
     |      setEventSource(self, QObject)
     |  
     |  setEventType(...)
     |      setEventType(self, QEvent.Type)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractTransition:
     |  
     |  addAnimation(...)
     |      addAnimation(self, QAbstractAnimation)
     |  
     |  animations(...)
     |      animations(self) -> List[QAbstractAnimation]
     |  
     |  machine(...)
     |      machine(self) -> QStateMachine
     |  
     |  removeAnimation(...)
     |      removeAnimation(self, QAbstractAnimation)
     |  
     |  setTargetState(...)
     |      setTargetState(self, QAbstractState)
     |  
     |  setTargetStates(...)
     |      setTargetStates(self, Iterable[QAbstractState])
     |  
     |  setTransitionType(...)
     |      setTransitionType(self, QAbstractTransition.TransitionType)
     |  
     |  sourceState(...)
     |      sourceState(self) -> QState
     |  
     |  targetState(...)
     |      targetState(self) -> QAbstractState
     |  
     |  targetStateChanged = <unbound PYQT_SIGNAL targetStateChanged()>
     |  targetStates(...)
     |      targetStates(self) -> List[QAbstractState]
     |  
     |  targetStatesChanged = <unbound PYQT_SIGNAL targetStatesChanged()>
     |  transitionType(...)
     |      transitionType(self) -> QAbstractTransition.TransitionType
     |  
     |  triggered = <unbound PYQT_SIGNAL triggered()>
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QAbstractTransition:
     |  
     |  ExternalTransition = 0
     |  
     |  InternalTransition = 1
     |  
     |  TransitionType = <class 'PyQt5.QtCore.QAbstractTransition.TransitionTy...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QFile(QFileDevice)
     |  QFile()
     |  QFile(str)
     |  QFile(QObject)
     |  QFile(str, QObject)
     |  
     |  Method resolution order:
     |      QFile
     |      QFileDevice
     |      QIODevice
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  copy(...)
     |      copy(self, str) -> bool
     |      copy(str, str) -> bool
     |  
     |  decodeName(...)
     |      decodeName(Union[QByteArray, bytes, bytearray]) -> str
     |      decodeName(str) -> str
     |  
     |  encodeName(...)
     |      encodeName(str) -> QByteArray
     |  
     |  exists(...)
     |      exists(self) -> bool
     |      exists(str) -> bool
     |  
     |  fileName(...)
     |      fileName(self) -> str
     |  
     |  link(...)
     |      link(self, str) -> bool
     |      link(str, str) -> bool
     |  
     |  open(...)
     |      open(self, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag]) -> bool
     |      open(self, int, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag], handleFlags: Union[QFileDevice.FileHandleFlags, QFileDevice.FileHandleFlag] = QFileDevice.DontCloseHandle) -> bool
     |  
     |  permissions(...)
     |      permissions(self) -> QFileDevice.Permissions
     |      permissions(str) -> QFileDevice.Permissions
     |  
     |  remove(...)
     |      remove(self) -> bool
     |      remove(str) -> bool
     |  
     |  rename(...)
     |      rename(self, str) -> bool
     |      rename(str, str) -> bool
     |  
     |  resize(...)
     |      resize(self, int) -> bool
     |      resize(str, int) -> bool
     |  
     |  setFileName(...)
     |      setFileName(self, str)
     |  
     |  setPermissions(...)
     |      setPermissions(self, Union[QFileDevice.Permissions, QFileDevice.Permission]) -> bool
     |      setPermissions(str, Union[QFileDevice.Permissions, QFileDevice.Permission]) -> bool
     |  
     |  size(...)
     |      size(self) -> int
     |  
     |  symLinkTarget(...)
     |      symLinkTarget(self) -> str
     |      symLinkTarget(str) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QFileDevice:
     |  
     |  atEnd(...)
     |      atEnd(self) -> bool
     |  
     |  close(...)
     |      close(self)
     |  
     |  error(...)
     |      error(self) -> QFileDevice.FileError
     |  
     |  fileTime(...)
     |      fileTime(self, QFileDevice.FileTime) -> QDateTime
     |  
     |  flush(...)
     |      flush(self) -> bool
     |  
     |  handle(...)
     |      handle(self) -> int
     |  
     |  isSequential(...)
     |      isSequential(self) -> bool
     |  
     |  map(...)
     |      map(self, int, int, flags: QFileDevice.MemoryMapFlags = QFileDevice.NoOptions) -> sip.voidptr
     |  
     |  pos(...)
     |      pos(self) -> int
     |  
     |  readData(...)
     |      readData(self, int) -> bytes
     |  
     |  readLineData(...)
     |      readLineData(self, int) -> bytes
     |  
     |  seek(...)
     |      seek(self, int) -> bool
     |  
     |  setFileTime(...)
     |      setFileTime(self, Union[QDateTime, datetime.datetime], QFileDevice.FileTime) -> bool
     |  
     |  unmap(...)
     |      unmap(self, sip.voidptr) -> bool
     |  
     |  unsetError(...)
     |      unsetError(self)
     |  
     |  writeData(...)
     |      writeData(self, bytes) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QFileDevice:
     |  
     |  AbortError = 6
     |  
     |  AutoCloseHandle = 1
     |  
     |  CopyError = 14
     |  
     |  DontCloseHandle = 0
     |  
     |  ExeGroup = 16
     |  
     |  ExeOther = 1
     |  
     |  ExeOwner = 4096
     |  
     |  ExeUser = 256
     |  
     |  FatalError = 3
     |  
     |  FileAccessTime = 0
     |  
     |  FileBirthTime = 1
     |  
     |  FileError = <class 'PyQt5.QtCore.QFileDevice.FileError'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FileHandleFlag = <class 'PyQt5.QtCore.QFileDevice.FileHandleFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FileHandleFlags = <class 'PyQt5.QtCore.QFileDevice.FileHandleFlags'>
     |      QFileDevice.FileHandleFlags()
     |      QFileDevice.FileHandleFlags(Union[QFileDevice.FileHandleFlags, QFileDevice.FileHandleFlag])
     |      QFileDevice.FileHandleFlags(QFileDevice.FileHandleFlags)
     |  
     |  FileMetadataChangeTime = 2
     |  
     |  FileModificationTime = 3
     |  
     |  FileTime = <class 'PyQt5.QtCore.QFileDevice.FileTime'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  MapPrivateOption = 1
     |  
     |  MemoryMapFlags = <class 'PyQt5.QtCore.QFileDevice.MemoryMapFlags'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NoError = 0
     |  
     |  NoOptions = 0
     |  
     |  OpenError = 5
     |  
     |  Permission = <class 'PyQt5.QtCore.QFileDevice.Permission'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Permissions = <class 'PyQt5.QtCore.QFileDevice.Permissions'>
     |      QFileDevice.Permissions()
     |      QFileDevice.Permissions(Union[QFileDevice.Permissions, QFileDevice.Permission])
     |      QFileDevice.Permissions(QFileDevice.Permissions)
     |  
     |  PermissionsError = 13
     |  
     |  PositionError = 11
     |  
     |  ReadError = 1
     |  
     |  ReadGroup = 64
     |  
     |  ReadOther = 4
     |  
     |  ReadOwner = 16384
     |  
     |  ReadUser = 1024
     |  
     |  RemoveError = 9
     |  
     |  RenameError = 10
     |  
     |  ResizeError = 12
     |  
     |  ResourceError = 4
     |  
     |  TimeOutError = 7
     |  
     |  UnspecifiedError = 8
     |  
     |  WriteError = 2
     |  
     |  WriteGroup = 32
     |  
     |  WriteOther = 2
     |  
     |  WriteOwner = 8192
     |  
     |  WriteUser = 512
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QIODevice:
     |  
     |  aboutToClose = <unbound PYQT_SIGNAL aboutToClose()>
     |  bytesAvailable(...)
     |      bytesAvailable(self) -> int
     |  
     |  bytesToWrite(...)
     |      bytesToWrite(self) -> int
     |  
     |  bytesWritten = <unbound PYQT_SIGNAL bytesWritten(qint64)>
     |  canReadLine(...)
     |      canReadLine(self) -> bool
     |  
     |  channelBytesWritten = <unbound PYQT_SIGNAL channelBytesWritten(int,qint64)>
     |  channelReadyRead = <unbound PYQT_SIGNAL channelReadyRead(int)>
     |  commitTransaction(...)
     |      commitTransaction(self)
     |  
     |  currentReadChannel(...)
     |      currentReadChannel(self) -> int
     |  
     |  currentWriteChannel(...)
     |      currentWriteChannel(self) -> int
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  getChar(...)
     |      getChar(self) -> Tuple[bool, str]
     |  
     |  isOpen(...)
     |      isOpen(self) -> bool
     |  
     |  isReadable(...)
     |      isReadable(self) -> bool
     |  
     |  isTextModeEnabled(...)
     |      isTextModeEnabled(self) -> bool
     |  
     |  isTransactionStarted(...)
     |      isTransactionStarted(self) -> bool
     |  
     |  isWritable(...)
     |      isWritable(self) -> bool
     |  
     |  openMode(...)
     |      openMode(self) -> QIODevice.OpenMode
     |  
     |  peek(...)
     |      peek(self, int) -> QByteArray
     |  
     |  putChar(...)
     |      putChar(self, str) -> bool
     |  
     |  read(...)
     |      read(self, int) -> bytes
     |  
     |  readAll(...)
     |      readAll(self) -> QByteArray
     |  
     |  readChannelCount(...)
     |      readChannelCount(self) -> int
     |  
     |  readChannelFinished = <unbound PYQT_SIGNAL readChannelFinished()>
     |  readLine(...)
     |      readLine(self, maxlen: int = 0) -> bytes
     |  
     |  readyRead = <unbound PYQT_SIGNAL readyRead()>
     |  reset(...)
     |      reset(self) -> bool
     |  
     |  rollbackTransaction(...)
     |      rollbackTransaction(self)
     |  
     |  setCurrentReadChannel(...)
     |      setCurrentReadChannel(self, int)
     |  
     |  setCurrentWriteChannel(...)
     |      setCurrentWriteChannel(self, int)
     |  
     |  setErrorString(...)
     |      setErrorString(self, str)
     |  
     |  setOpenMode(...)
     |      setOpenMode(self, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |  
     |  setTextModeEnabled(...)
     |      setTextModeEnabled(self, bool)
     |  
     |  skip(...)
     |      skip(self, int) -> int
     |  
     |  startTransaction(...)
     |      startTransaction(self)
     |  
     |  ungetChar(...)
     |      ungetChar(self, str)
     |  
     |  waitForBytesWritten(...)
     |      waitForBytesWritten(self, int) -> bool
     |  
     |  waitForReadyRead(...)
     |      waitForReadyRead(self, int) -> bool
     |  
     |  write(...)
     |      write(self, Union[QByteArray, bytes, bytearray]) -> int
     |  
     |  writeChannelCount(...)
     |      writeChannelCount(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QIODevice:
     |  
     |  Append = 4
     |  
     |  ExistingOnly = 128
     |  
     |  NewOnly = 64
     |  
     |  NotOpen = 0
     |  
     |  OpenMode = <class 'PyQt5.QtCore.QIODevice.OpenMode'>
     |      QIODevice.OpenMode()
     |      QIODevice.OpenMode(Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |      QIODevice.OpenMode(QIODevice.OpenMode)
     |  
     |  OpenModeFlag = <class 'PyQt5.QtCore.QIODevice.OpenModeFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ReadOnly = 1
     |  
     |  ReadWrite = 3
     |  
     |  Text = 16
     |  
     |  Truncate = 8
     |  
     |  Unbuffered = 32
     |  
     |  WriteOnly = 2
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QFileDevice(QIODevice)
     |  QIODevice()
     |  QIODevice(QObject)
     |  
     |  Method resolution order:
     |      QFileDevice
     |      QIODevice
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  atEnd(...)
     |      atEnd(self) -> bool
     |  
     |  close(...)
     |      close(self)
     |  
     |  error(...)
     |      error(self) -> QFileDevice.FileError
     |  
     |  fileName(...)
     |      fileName(self) -> str
     |  
     |  fileTime(...)
     |      fileTime(self, QFileDevice.FileTime) -> QDateTime
     |  
     |  flush(...)
     |      flush(self) -> bool
     |  
     |  handle(...)
     |      handle(self) -> int
     |  
     |  isSequential(...)
     |      isSequential(self) -> bool
     |  
     |  map(...)
     |      map(self, int, int, flags: QFileDevice.MemoryMapFlags = QFileDevice.NoOptions) -> sip.voidptr
     |  
     |  permissions(...)
     |      permissions(self) -> QFileDevice.Permissions
     |  
     |  pos(...)
     |      pos(self) -> int
     |  
     |  readData(...)
     |      readData(self, int) -> bytes
     |  
     |  readLineData(...)
     |      readLineData(self, int) -> bytes
     |  
     |  resize(...)
     |      resize(self, int) -> bool
     |  
     |  seek(...)
     |      seek(self, int) -> bool
     |  
     |  setFileTime(...)
     |      setFileTime(self, Union[QDateTime, datetime.datetime], QFileDevice.FileTime) -> bool
     |  
     |  setPermissions(...)
     |      setPermissions(self, Union[QFileDevice.Permissions, QFileDevice.Permission]) -> bool
     |  
     |  size(...)
     |      size(self) -> int
     |  
     |  unmap(...)
     |      unmap(self, sip.voidptr) -> bool
     |  
     |  unsetError(...)
     |      unsetError(self)
     |  
     |  writeData(...)
     |      writeData(self, bytes) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AbortError = 6
     |  
     |  AutoCloseHandle = 1
     |  
     |  CopyError = 14
     |  
     |  DontCloseHandle = 0
     |  
     |  ExeGroup = 16
     |  
     |  ExeOther = 1
     |  
     |  ExeOwner = 4096
     |  
     |  ExeUser = 256
     |  
     |  FatalError = 3
     |  
     |  FileAccessTime = 0
     |  
     |  FileBirthTime = 1
     |  
     |  FileError = <class 'PyQt5.QtCore.QFileDevice.FileError'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FileHandleFlag = <class 'PyQt5.QtCore.QFileDevice.FileHandleFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FileHandleFlags = <class 'PyQt5.QtCore.QFileDevice.FileHandleFlags'>
     |      QFileDevice.FileHandleFlags()
     |      QFileDevice.FileHandleFlags(Union[QFileDevice.FileHandleFlags, QFileDevice.FileHandleFlag])
     |      QFileDevice.FileHandleFlags(QFileDevice.FileHandleFlags)
     |  
     |  FileMetadataChangeTime = 2
     |  
     |  FileModificationTime = 3
     |  
     |  FileTime = <class 'PyQt5.QtCore.QFileDevice.FileTime'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  MapPrivateOption = 1
     |  
     |  MemoryMapFlags = <class 'PyQt5.QtCore.QFileDevice.MemoryMapFlags'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NoError = 0
     |  
     |  NoOptions = 0
     |  
     |  OpenError = 5
     |  
     |  Permission = <class 'PyQt5.QtCore.QFileDevice.Permission'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Permissions = <class 'PyQt5.QtCore.QFileDevice.Permissions'>
     |      QFileDevice.Permissions()
     |      QFileDevice.Permissions(Union[QFileDevice.Permissions, QFileDevice.Permission])
     |      QFileDevice.Permissions(QFileDevice.Permissions)
     |  
     |  PermissionsError = 13
     |  
     |  PositionError = 11
     |  
     |  ReadError = 1
     |  
     |  ReadGroup = 64
     |  
     |  ReadOther = 4
     |  
     |  ReadOwner = 16384
     |  
     |  ReadUser = 1024
     |  
     |  RemoveError = 9
     |  
     |  RenameError = 10
     |  
     |  ResizeError = 12
     |  
     |  ResourceError = 4
     |  
     |  TimeOutError = 7
     |  
     |  UnspecifiedError = 8
     |  
     |  WriteError = 2
     |  
     |  WriteGroup = 32
     |  
     |  WriteOther = 2
     |  
     |  WriteOwner = 8192
     |  
     |  WriteUser = 512
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QIODevice:
     |  
     |  aboutToClose = <unbound PYQT_SIGNAL aboutToClose()>
     |  bytesAvailable(...)
     |      bytesAvailable(self) -> int
     |  
     |  bytesToWrite(...)
     |      bytesToWrite(self) -> int
     |  
     |  bytesWritten = <unbound PYQT_SIGNAL bytesWritten(qint64)>
     |  canReadLine(...)
     |      canReadLine(self) -> bool
     |  
     |  channelBytesWritten = <unbound PYQT_SIGNAL channelBytesWritten(int,qint64)>
     |  channelReadyRead = <unbound PYQT_SIGNAL channelReadyRead(int)>
     |  commitTransaction(...)
     |      commitTransaction(self)
     |  
     |  currentReadChannel(...)
     |      currentReadChannel(self) -> int
     |  
     |  currentWriteChannel(...)
     |      currentWriteChannel(self) -> int
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  getChar(...)
     |      getChar(self) -> Tuple[bool, str]
     |  
     |  isOpen(...)
     |      isOpen(self) -> bool
     |  
     |  isReadable(...)
     |      isReadable(self) -> bool
     |  
     |  isTextModeEnabled(...)
     |      isTextModeEnabled(self) -> bool
     |  
     |  isTransactionStarted(...)
     |      isTransactionStarted(self) -> bool
     |  
     |  isWritable(...)
     |      isWritable(self) -> bool
     |  
     |  open(...)
     |      open(self, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag]) -> bool
     |  
     |  openMode(...)
     |      openMode(self) -> QIODevice.OpenMode
     |  
     |  peek(...)
     |      peek(self, int) -> QByteArray
     |  
     |  putChar(...)
     |      putChar(self, str) -> bool
     |  
     |  read(...)
     |      read(self, int) -> bytes
     |  
     |  readAll(...)
     |      readAll(self) -> QByteArray
     |  
     |  readChannelCount(...)
     |      readChannelCount(self) -> int
     |  
     |  readChannelFinished = <unbound PYQT_SIGNAL readChannelFinished()>
     |  readLine(...)
     |      readLine(self, maxlen: int = 0) -> bytes
     |  
     |  readyRead = <unbound PYQT_SIGNAL readyRead()>
     |  reset(...)
     |      reset(self) -> bool
     |  
     |  rollbackTransaction(...)
     |      rollbackTransaction(self)
     |  
     |  setCurrentReadChannel(...)
     |      setCurrentReadChannel(self, int)
     |  
     |  setCurrentWriteChannel(...)
     |      setCurrentWriteChannel(self, int)
     |  
     |  setErrorString(...)
     |      setErrorString(self, str)
     |  
     |  setOpenMode(...)
     |      setOpenMode(self, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |  
     |  setTextModeEnabled(...)
     |      setTextModeEnabled(self, bool)
     |  
     |  skip(...)
     |      skip(self, int) -> int
     |  
     |  startTransaction(...)
     |      startTransaction(self)
     |  
     |  ungetChar(...)
     |      ungetChar(self, str)
     |  
     |  waitForBytesWritten(...)
     |      waitForBytesWritten(self, int) -> bool
     |  
     |  waitForReadyRead(...)
     |      waitForReadyRead(self, int) -> bool
     |  
     |  write(...)
     |      write(self, Union[QByteArray, bytes, bytearray]) -> int
     |  
     |  writeChannelCount(...)
     |      writeChannelCount(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QIODevice:
     |  
     |  Append = 4
     |  
     |  ExistingOnly = 128
     |  
     |  NewOnly = 64
     |  
     |  NotOpen = 0
     |  
     |  OpenMode = <class 'PyQt5.QtCore.QIODevice.OpenMode'>
     |      QIODevice.OpenMode()
     |      QIODevice.OpenMode(Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |      QIODevice.OpenMode(QIODevice.OpenMode)
     |  
     |  OpenModeFlag = <class 'PyQt5.QtCore.QIODevice.OpenModeFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ReadOnly = 1
     |  
     |  ReadWrite = 3
     |  
     |  Text = 16
     |  
     |  Truncate = 8
     |  
     |  Unbuffered = 32
     |  
     |  WriteOnly = 2
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QFileInfo(sip.simplewrapper)
     |  QFileInfo()
     |  QFileInfo(str)
     |  QFileInfo(QFile)
     |  QFileInfo(QDir, str)
     |  QFileInfo(QFileInfo)
     |  
     |  Method resolution order:
     |      QFileInfo
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __fspath__(...)
     |      __fspath__(self) -> object
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  absoluteDir(...)
     |      absoluteDir(self) -> QDir
     |  
     |  absoluteFilePath(...)
     |      absoluteFilePath(self) -> str
     |  
     |  absolutePath(...)
     |      absolutePath(self) -> str
     |  
     |  baseName(...)
     |      baseName(self) -> str
     |  
     |  birthTime(...)
     |      birthTime(self) -> QDateTime
     |  
     |  bundleName(...)
     |      bundleName(self) -> str
     |  
     |  caching(...)
     |      caching(self) -> bool
     |  
     |  canonicalFilePath(...)
     |      canonicalFilePath(self) -> str
     |  
     |  canonicalPath(...)
     |      canonicalPath(self) -> str
     |  
     |  completeBaseName(...)
     |      completeBaseName(self) -> str
     |  
     |  completeSuffix(...)
     |      completeSuffix(self) -> str
     |  
     |  created(...)
     |      created(self) -> QDateTime
     |  
     |  dir(...)
     |      dir(self) -> QDir
     |  
     |  exists(...)
     |      exists(self) -> bool
     |      exists(str) -> bool
     |  
     |  fileName(...)
     |      fileName(self) -> str
     |  
     |  filePath(...)
     |      filePath(self) -> str
     |  
     |  fileTime(...)
     |      fileTime(self, QFileDevice.FileTime) -> QDateTime
     |  
     |  group(...)
     |      group(self) -> str
     |  
     |  groupId(...)
     |      groupId(self) -> int
     |  
     |  isAbsolute(...)
     |      isAbsolute(self) -> bool
     |  
     |  isBundle(...)
     |      isBundle(self) -> bool
     |  
     |  isDir(...)
     |      isDir(self) -> bool
     |  
     |  isExecutable(...)
     |      isExecutable(self) -> bool
     |  
     |  isFile(...)
     |      isFile(self) -> bool
     |  
     |  isHidden(...)
     |      isHidden(self) -> bool
     |  
     |  isNativePath(...)
     |      isNativePath(self) -> bool
     |  
     |  isReadable(...)
     |      isReadable(self) -> bool
     |  
     |  isRelative(...)
     |      isRelative(self) -> bool
     |  
     |  isRoot(...)
     |      isRoot(self) -> bool
     |  
     |  isSymLink(...)
     |      isSymLink(self) -> bool
     |  
     |  isWritable(...)
     |      isWritable(self) -> bool
     |  
     |  lastModified(...)
     |      lastModified(self) -> QDateTime
     |  
     |  lastRead(...)
     |      lastRead(self) -> QDateTime
     |  
     |  makeAbsolute(...)
     |      makeAbsolute(self) -> bool
     |  
     |  metadataChangeTime(...)
     |      metadataChangeTime(self) -> QDateTime
     |  
     |  owner(...)
     |      owner(self) -> str
     |  
     |  ownerId(...)
     |      ownerId(self) -> int
     |  
     |  path(...)
     |      path(self) -> str
     |  
     |  permission(...)
     |      permission(self, Union[QFileDevice.Permissions, QFileDevice.Permission]) -> bool
     |  
     |  permissions(...)
     |      permissions(self) -> QFileDevice.Permissions
     |  
     |  refresh(...)
     |      refresh(self)
     |  
     |  setCaching(...)
     |      setCaching(self, bool)
     |  
     |  setFile(...)
     |      setFile(self, str)
     |      setFile(self, QFile)
     |      setFile(self, QDir, str)
     |  
     |  size(...)
     |      size(self) -> int
     |  
     |  suffix(...)
     |      suffix(self) -> str
     |  
     |  swap(...)
     |      swap(self, QFileInfo)
     |  
     |  symLinkTarget(...)
     |      symLinkTarget(self) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QFileSelector(QObject)
     |  QFileSelector(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QFileSelector
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  allSelectors(...)
     |      allSelectors(self) -> List[str]
     |  
     |  extraSelectors(...)
     |      extraSelectors(self) -> List[str]
     |  
     |  select(...)
     |      select(self, str) -> str
     |      select(self, QUrl) -> QUrl
     |  
     |  setExtraSelectors(...)
     |      setExtraSelectors(self, Iterable[str])
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QFileSystemWatcher(QObject)
     |  QFileSystemWatcher(parent: QObject = None)
     |  QFileSystemWatcher(Iterable[str], parent: QObject = None)
     |  
     |  Method resolution order:
     |      QFileSystemWatcher
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  addPath(...)
     |      addPath(self, str) -> bool
     |  
     |  addPaths(...)
     |      addPaths(self, Iterable[str]) -> List[str]
     |  
     |  directories(...)
     |      directories(self) -> List[str]
     |  
     |  directoryChanged = <unbound PYQT_SIGNAL directoryChanged(QString)>
     |  fileChanged = <unbound PYQT_SIGNAL fileChanged(QString)>
     |  files(...)
     |      files(self) -> List[str]
     |  
     |  removePath(...)
     |      removePath(self, str) -> bool
     |  
     |  removePaths(...)
     |      removePaths(self, Iterable[str]) -> List[str]
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignal  ed(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      meta Object(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QFinalState(QAbstractState)
     |  QFinalState(parent: QState = None)
     |  
     |  Method resolution order:
     |      QFinalState
     |      QAbstractState
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  onEntry(...)
     |      onEntry(self, QEvent)
     |  
     |  onExit(...)
     |      onExit(self, QEvent)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractState:
     |  
     |  active(...)
     |      active(self) -> bool
     |  
     |  activeChanged = <unbound PYQT_SIGNAL activeChanged(bool)>
     |  entered = <unbound PYQT_SIGNAL entered()>
     |  exited = <unbound PYQT_SIGNAL exited()>
     |  machine(...)
     |      machine(self) -> QStateMachine
     |  
     |  parentState(...)
     |      parentState(self) -> QState
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QGenericArgument(sip.simplewrapper)
     |  Method resolution order:
     |      QGenericArgument
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QGenericReturnArgument(sip.simplewrapper)
     |  Method resolution order:
     |      QGenericReturnArgument
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QHistoryState(QAbstractState)
     |  QHistoryState(parent: QState = None)
     |  QHistoryState(QHistoryState.HistoryType, parent: QState = None)
     |  
     |  Method resolution order:
     |      QHistoryState
     |      QAbstractState
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  defaultState(...)
     |      defaultState(self) -> QAbstractState
     |  
     |  defaultStateChanged = <unbound PYQT_SIGNAL defaultStateChanged()>
     |  defaultTransition(...)
     |      defaultTransition(self) -> QAbstractTransition
     |  
     |  defaultTransitionChanged = <unbound PYQT_SIGNAL defaultTransitionChanged()>
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  historyType(...)
     |      historyType(self) -> QHistoryState.HistoryType
     |  
     |  historyTypeChanged = <unbound PYQT_SIGNAL historyTypeChanged()>
     |  onEntry(...)
     |      onEntry(self, QEvent)
     |  
     |  onExit(...)
     |      onExit(self, QEvent)
     |  
     |  setDefaultState(...)
     |      setDefaultState(self, QAbstractState)
     |  
     |  setDefaultTransition(...)
     |      setDefaultTransition(self, QAbstractTransition)
     |  
     |  setHistoryType(...)
     |      setHistoryType(self, QHistoryState.HistoryType)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  DeepHistory = 1
     |  
     |  HistoryType = <class 'PyQt5.QtCore.QHistoryState.HistoryType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ShallowHistory = 0
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractState:
     |  
     |  active(...)
     |      active(self) -> bool
     |  
     |  activeChanged = <unbound PYQT_SIGNAL activeChanged(bool)>
     |  entered = <unbound PYQT_SIGNAL entered()>
     |  exited = <unbound PYQT_SIGNAL exited()>
     |  machine(...)
     |      machine(self) -> QStateMachine
     |  
     |  parentState(...)
     |      parentState(self) -> QState
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QIODevice(QObject)
     |  QIODevice()
     |  QIODevice(QObject)
     |  
     |  Method resolution order:
     |      QIODevice
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  aboutToClose = <unbound PYQT_SIGNAL aboutToClose()>
     |  atEnd(...)
     |      atEnd(self) -> bool
     |  
     |  bytesAvailable(...)
     |      bytesAvailable(self) -> int
     |  
     |  bytesToWrite(...)
     |      bytesToWrite(self) -> int
     |  
     |  bytesWritten = <unbound PYQT_SIGNAL bytesWritten(qint64)>
     |  canReadLine(...)
     |      canReadLine(self) -> bool
     |  
     |  channelBytesWritten = <unbound PYQT_SIGNAL channelBytesWritten(int,qint64)>
     |  channelReadyRead = <unbound PYQT_SIGNAL channelReadyRead(int)>
     |  close(...)
     |      close(self)
     |  
     |  commitTransaction(...)
     |      commitTransaction(self)
     |  
     |  currentReadChannel(...)
     |      currentReadChannel(self) -> int
     |  
     |  currentWriteChannel(...)
     |      currentWriteChannel(self) -> int
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  getChar(...)
     |      getChar(self) -> Tuple[bool, str]
     |  
     |  isOpen(...)
     |      isOpen(self) -> bool
     |  
     |  isReadable(...)
     |      isReadable(self) -> bool
     |  
     |  isSequential(...)
     |      isSequential(self) -> bool
     |  
     |  isTextModeEnabled(...)
     |      isTextModeEnabled(self) -> bool
     |  
     |  isTransactionStarted(...)
     |      isTransactionStarted(self) -> bool
     |  
     |  isWritable(...)
     |      isWritable(self) -> bool
     |  
     |  open(...)
     |      open(self, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag]) -> bool
     |  
     |  openMode(...)
     |      openMode(self) -> QIODevice.OpenMode
     |  
     |  peek(...)
     |      peek(self, int) -> QByteArray
     |  
     |  pos(...)
     |      pos(self) -> int
     |  
     |  putChar(...)
     |      putChar(self, str) -> bool
     |  
     |  read(...)
     |      read(self, int) -> bytes
     |  
     |  readAll(...)
     |      readAll(self) -> QByteArray
     |  
     |  readChannelCount(...)
     |      readChannelCount(self) -> int
     |  
     |  readChannelFinished = <unbound PYQT_SIGNAL readChannelFinished()>
     |  readData(...)
     |      readData(self, int) -> bytes
     |  
     |  readLine(...)
     |      readLine(self, maxlen: int = 0) -> bytes
     |  
     |  readLineData(...)
     |      readLineData(self, int) -> bytes
     |  
     |  readyRead = <unbound PYQT_SIGNAL readyRead()>
     |  reset(...)
     |      reset(self) -> bool
     |  
     |  rollbackTransaction(...)
     |      rollbackTransaction(self)
     |  
     |  seek(...)
     |      seek(self, int) -> bool
     |  
     |  setCurrentReadChannel(...)
     |      setCurrentReadChannel(self, int)
     |  
     |  setCurrentWriteChannel(...)
     |      setCurrentWriteChannel(self, int)
     |  
     |  setErrorString(...)
     |      setErrorString(self, str)
     |  
     |  setOpenMode(...)
     |      setOpenMode(self, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |  
     |  setTextModeEnabled(...)
     |      setTextModeEnabled(self, bool)
     |  
     |  size(...)
     |      size(self) -> int
     |  
     |  skip(...)
     |      skip(self, int) -> int
     |  
     |  startTransaction(...)
     |      startTransaction(self)
     |  
     |  ungetChar(...)
     |      ungetChar(self, str)
     |  
     |  waitForBytesWritten(...)
     |      waitForBytesWritten(self, int) -> bool
     |  
     |  waitForReadyRead(...)
     |      waitForReadyRead(self, int) -> bool
     |  
     |  write(...)
     |      write(self, Union[QByteArray, bytes, bytearray]) -> int
     |  
     |  writeChannelCount(...)
     |      writeChannelCount(self) -> int
     |  
     |  writeData(...)
     |      writeData(self, bytes) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Append = 4
     |  
     |  ExistingOnly = 128
     |  
     |  NewOnly = 64
     |  
     |  NotOpen = 0
     |  
     |  OpenMode = <class 'PyQt5.QtCore.QIODevice.OpenMode'>
     |      QIODevice.OpenMode()
     |      QIODevice.OpenMode(Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |      QIODevice.OpenMode(QIODevice.OpenMode)
     |  
     |  OpenModeFlag = <class 'PyQt5.QtCore.QIODevice.OpenModeFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ReadOnly = 1
     |  
     |  ReadWrite = 3
     |  
     |  Text = 16
     |  
     |  Truncate = 8
     |  
     |  Unbuffered = 32
     |  
     |  WriteOnly = 2
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QIdentityProxyModel(QAbstractProxyModel)
     |  QIdentityProxyModel(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QIdentityProxyModel
     |      QAbstractProxyModel
     |      QAbstractItemModel
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  columnCount(...)
     |      columnCount(self, parent: QModelIndex = QModelIndex()) -> int
     |  
     |  dropMimeData(...)
     |      dropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool
     |  
     |  headerData(...)
     |      headerData(self, int, Qt.Orientation, role: int = Qt.DisplayRole) -> Any
     |  
     |  index(...)
     |      index(self, int, int, parent: QModelIndex = QModelIndex()) -> QModelIndex
     |  
     |  insertColumns(...)
     |      insertColumns(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertRows(...)
     |      insertRows(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  mapFromSource(...)
     |      mapFromSource(self, QModelIndex) -> QModelIndex
     |  
     |  mapSelectionFromSource(...)
     |      mapSelectionFromSource(self, QItemSelection) -> QItemSelection
     |  
     |  mapSelectionToSource(...)
     |      mapSelectionToSource(self, QItemSelection) -> QItemSelection
     |  
     |  mapToSource(...)
     |      mapToSource(self, QModelIndex) -> QModelIndex
     |  
     |  match(...)
     |      match(self, QModelIndex, int, Any, hits: int = 1, flags: Union[Qt.MatchFlags, Qt.MatchFlag] = Qt.MatchStartsWith|Qt.MatchWrap) -> List[QModelIndex]
     |  
     |  parent(...)
     |      parent(self, QModelIndex) -> QModelIndex
     |  
     |  removeColumns(...)
     |      removeColumns(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeRows(...)
     |      removeRows(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  rowCount(...)
     |      rowCount(self, parent: QModelIndex = QModelIndex()) -> int
     |  
     |  setSourceModel(...)
     |      setSourceModel(self, QAbstractItemModel)
     |  
     |  sibling(...)
     |      sibling(self, int, int, QModelIndex) -> QModelIndex
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractProxyModel:
     |  
     |  buddy(...)
     |      buddy(self, QModelIndex) -> QModelIndex
     |  
     |  canDropMimeData(...)
     |      canDropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool
     |  
     |  canFetchMore(...)
     |      canFetchMore(self, QModelIndex) -> bool
     |  
     |  data(...)
     |      data(self, QModelIndex, role: int = Qt.DisplayRole) -> Any
     |  
     |  fetchMore(...)
     |      fetchMore(self, QModelIndex)
     |  
     |  flags(...)
     |      flags(self, QModelIndex) -> Qt.ItemFlags
     |  
     |  hasChildren(...)
     |      hasChildren(self, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  itemData(...)
     |      itemData(self, QModelIndex) -> Dict[int, Any]
     |  
     |  mimeData(...)
     |      mimeData(self, Iterable[QModelIndex]) -> QMimeData
     |  
     |  mimeTypes(...)
     |      mimeTypes(self) -> List[str]
     |  
     |  resetInternalData(...)
     |      resetInternalData(self)
     |  
     |  revert(...)
     |      revert(self)
     |  
     |  setData(...)
     |      setData(self, QModelIndex, Any, role: int = Qt.EditRole) -> bool
     |  
     |  setHeaderData(...)
     |      setHeaderData(self, int, Qt.Orientation, Any, role: int = Qt.EditRole) -> bool
     |  
     |  setItemData(...)
     |      setItemData(self, QModelIndex, Dict[int, Any]) -> bool
     |  
     |  sort(...)
     |      sort(self, int, order: Qt.SortOrder = Qt.AscendingOrder)
     |  
     |  sourceModel(...)
     |      sourceModel(self) -> QAbstractItemModel
     |  
     |  sourceModelChanged = <unbound PYQT_SIGNAL sourceModelChanged()>
     |  span(...)
     |      span(self, QModelIndex) -> QSize
     |  
     |  submit(...)
     |      submit(self) -> bool
     |  
     |  supportedDragActions(...)
     |      supportedDragActions(self) -> Qt.DropActions
     |  
     |  supportedDropActions(...)
     |      supportedDropActions(self) -> Qt.DropActions
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractItemModel:
     |  
     |  beginInsertColumns(...)
     |      beginInsertColumns(self, QModelIndex, int, int)
     |  
     |  beginInsertRows(...)
     |      beginInsertRows(self, QModelIndex, int, int)
     |  
     |  beginMoveColumns(...)
     |      beginMoveColumns(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  beginMoveRows(...)
     |      beginMoveRows(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  beginRemoveColumns(...)
     |      beginRemoveColumns(self, QModelIndex, int, int)
     |  
     |  beginRemoveRows(...)
     |      beginRemoveRows(self, QModelIndex, int, int)
     |  
     |  beginResetModel(...)
     |      beginResetModel(self)
     |  
     |  changePersistentIndex(...)
     |      changePersistentIndex(self, QModelIndex, QModelIndex)
     |  
     |  changePersistentIndexList(...)
     |      changePersistentIndexList(self, Iterable[QModelIndex], Iterable[QModelIndex])
     |  
     |  checkIndex(...)
     |      checkIndex(self, QModelIndex, options: Union[QAbstractItemModel.CheckIndexOptions, QAbstractItemModel.CheckIndexOption] = QAbstractItemModel.CheckIndexOption.NoOption) -> bool
     |  
     |  columnsAboutToBeInserted = <unbound PYQT_SIGNAL columnsAboutToBeInserted(QModelIndex,int,int)>
     |  columnsAboutToBeMoved = <unbound PYQT_SIGNAL columnsAboutToBeMoved(QModelIndex,int,int,QModelIndex,int)>
     |  columnsAboutToBeRemoved = <unbound PYQT_SIGNAL columnsAboutToBeRemoved(QModelIndex,int,int)>
     |  columnsInserted = <unbound PYQT_SIGNAL columnsInserted(QModelIndex,int,int)>
     |  columnsMoved = <unbound PYQT_SIGNAL columnsMoved(QModelIndex,int,int,QModelIndex,int)>
     |  columnsRemoved = <unbound PYQT_SIGNAL columnsRemoved(QModelIndex,int,int)>
     |  createIndex(...)
     |      createIndex(self, int, int, object: object = 0) -> QModelIndex
     |  
     |  dataChanged = <unbound PYQT_SIGNAL dataChanged(QModelIndex,QModelIndex,QVector<int>)>
     |  decodeData(...)
     |      decodeData(self, int, int, QModelIndex, QDataStream) -> bool
     |  
     |  encodeData(...)
     |      encodeData(self, Iterable[QModelIndex], QDataStream)
     |  
     |  endInsertColumns(...)
     |      endInsertColumns(self)
     |  
     |  endInsertRows(...)
     |      endInsertRows(self)
     |  
     |  endMoveColumns(...)
     |      endMoveColumns(self)
     |  
     |  endMoveRows(...)
     |      endMoveRows(self)
     |  
     |  endRemoveColumns(...)
     |      endRemoveColumns(self)
     |  
     |  endRemoveRows(...)
     |      endRemoveRows(self)
     |  
     |  endResetModel(...)
     |      endResetModel(self)
     |  
     |  hasIndex(...)
     |      hasIndex(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  headerDataChanged = <unbound PYQT_SIGNAL headerDataChanged(Qt::Orientation,int,int)>
     |  insertColumn(...)
     |      insertColumn(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertRow(...)
     |      insertRow(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  layoutAboutToBeChanged = <unbound PYQT_SIGNAL layoutAboutToBeChanged(QLis...odelIndex>,QAbstractItemModel::LayoutChangeHint)>
     |  layoutChanged = <unbound PYQT_SIGNAL layoutChanged(QList<QPersis...odelIndex>,QAbstractItemModel::LayoutChangeHint)>
     |  modelAboutToBeReset = <unbound PYQT_SIGNAL modelAboutToBeReset()>
     |  modelReset = <unbound PYQT_SIGNAL modelReset()>
     |  moveColumn(...)
     |      moveColumn(self, QModelIndex, int, QModelIndex, int) -> bool
     |  
     |  moveColumns(...)
     |      moveColumns(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  moveRow(...)
     |      moveRow(self, QModelIndex, int, QModelIndex, int) -> bool
     |  
     |  moveRows(...)
     |      moveRows(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  persistentIndexList(...)
     |      persistentIndexList(self) -> List[QModelIndex]
     |  
     |  removeColumn(...)
     |      removeColumn(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeRow(...)
     |      removeRow(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  roleNames(...)
     |      roleNames(self) -> Dict[int, QByteArray]
     |  
     |  rowsAboutToBeInserted = <unbound PYQT_SIGNAL rowsAboutToBeInserted(QModelIndex,int,int)>
     |  rowsAboutToBeMoved = <unbound PYQT_SIGNAL rowsAboutToBeMoved(QModelIndex,int,int,QModelIndex,int)>
     |  rowsAboutToBeRemoved = <unbound PYQT_SIGNAL rowsAboutToBeRemoved(QModelIndex,int,int)>
     |  rowsInserted = <unbound PYQT_SIGNAL rowsInserted(QModelIndex,int,int)>
     |  rowsMoved = <unbound PYQT_SIGNAL rowsMoved(QModelIndex,int,int,QModelIndex,int)>
     |  rowsRemoved = <unbound PYQT_SIGNAL rowsRemoved(QModelIndex,int,int)>
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QAbstractItemModel:
     |  
     |  CheckIndexOption = <enum 'CheckIndexOption'>
     |      An enumeration.
     |  
     |  CheckIndexOptions = <class 'PyQt5.QtCore.QAbstractItemModel.CheckIndex...
     |      QAbstractItemModel.CheckIndexOptions()
     |      QAbstractItemModel.CheckIndexOptions(Union[QAbstractItemModel.CheckIndexOptions, QAbstractItemModel.CheckIndexOption])
     |      QAbstractItemModel.CheckIndexOptions(QAbstractItemModel.CheckIndexOptions)
     |  
     |  HorizontalSortHint = 2
     |  
     |  LayoutChangeHint = <class 'PyQt5.QtCore.QAbstractItemModel.LayoutChang...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NoLayoutChangeHint = 0
     |  
     |  VerticalSortHint = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QItemSelection(sip.simplewrapper)
     |  QItemSelection()
     |  QItemSelection(QModelIndex, QModelIndex)
     |  QItemSelection(QItemSelection)
     |  
     |  Method resolution order:
     |      QItemSelection
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __contains__(self, key, /)
     |      Return key in self.
     |  
     |  __delitem__(self, key, /)
     |      Delete self[key].
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __iadd__(self, value, /)
     |      Implement self+=value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __len__(self, /)
     |      Return len(self).
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __setitem__(self, key, value, /)
     |      Set self[key] to value.
     |  
     |  append(...)
     |      append(self, QItemSelectionRange)
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  contains(...)
     |      contains(self, QModelIndex) -> bool
     |  
     |  count(...)
     |      count(self, QItemSelectionRange) -> int
     |      count(self) -> int
     |  
     |  first(...)
     |      first(self) -> QItemSelectionRange
     |  
     |  indexOf(...)
     |      indexOf(self, QItemSelectionRange, from_: int = 0) -> int
     |  
     |  indexes(...)
     |      indexes(self) -> List[QModelIndex]
     |  
     |  insert(...)
     |      insert(self, int, QItemSelectionRange)
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  last(...)
     |      last(self) -> QItemSelectionRange
     |  
     |  lastIndexOf(...)
     |      lastIndexOf(self, QItemSelectionRange, from_: int = -1) -> int
     |  
     |  merge(...)
     |      merge(self, QItemSelection, Union[QItemSelectionModel.SelectionFlags, QItemSelectionModel.SelectionFlag])
     |  
     |  move(...)
     |      move(self, int, int)
     |  
     |  prepend(...)
     |      prepend(self, QItemSelectionRange)
     |  
     |  removeAll(...)
     |      removeAll(self, QItemSelectionRange) -> int
     |  
     |  removeAt(...)
     |      removeAt(self, int)
     |  
     |  replace(...)
     |      replace(self, int, QItemSelectionRange)
     |  
     |  select(...)
     |      select(self, QModelIndex, QModelIndex)
     |  
     |  split(...)
     |      split(QItemSelectionRange, QItemSelectionRange, QItemSelection)
     |  
     |  swap(...)
     |      swap(self, int, int)
     |  
     |  takeAt(...)
     |      takeAt(self, int) -> QItemSelectionRange
     |  
     |  takeFirst(...)
     |      takeFirst(self) -> QItemSelectionRange
     |  
     |  takeLast(...)
     |      takeLast(self) -> QItemSelectionRange
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QItemSelectionModel(QObject)
     |  QItemSelectionModel(model: QAbstractItemModel = None)
     |  QItemSelectionModel(QAbstractItemModel, QObject)
     |  
     |  Method resolution order:
     |      QItemSelectionModel
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  clearCurrentIndex(...)
     |      clearCurrentIndex(self)
     |  
     |  clearSelection(...)
     |      clearSelection(self)
     |  
     |  columnIntersectsSelection(...)
     |      columnIntersectsSelection(self, int, QModelIndex) -> bool
     |  
     |  currentChanged = <unbound PYQT_SIGNAL currentChanged(QModelIndex,QModelIndex)>
     |  currentColumnChanged = <unbound PYQT_SIGNAL currentColumnChanged(QModelIndex,QModelIndex)>
     |  currentIndex(...)
     |      currentIndex(self) -> QModelIndex
     |  
     |  currentRowChanged = <unbound PYQT_SIGNAL currentRowChanged(QModelIndex,QModelIndex)>
     |  emitSelectionChanged(...)
     |      emitSelectionChanged(self, QItemSelection, QItemSelection)
     |  
     |  hasSelection(...)
     |      hasSelection(self) -> bool
     |  
     |  isColumnSelected(...)
     |      isColumnSelected(self, int, QModelIndex) -> bool
     |  
     |  isRowSelected(...)
     |      isRowSelected(self, int, QModelIndex) -> bool
     |  
     |  isSelected(...)
     |      isSelected(self, QModelIndex) -> bool
     |  
     |  model(...)
     |      model(self) -> QAbstractItemModel
     |  
     |  modelChanged = <unbound PYQT_SIGNAL modelChanged(QAbstractItemModel*)>
     |  reset(...)
     |      reset(self)
     |  
     |  rowIntersectsSelection(...)
     |      rowIntersectsSelection(self, int, QModelIndex) -> bool
     |  
     |  select(...)
     |      select(self, QModelIndex, Union[QItemSelectionModel.SelectionFlags, QItemSelectionModel.SelectionFlag])
     |      select(self, QItemSelection, Union[QItemSelectionModel.SelectionFlags, QItemSelectionModel.SelectionFlag])
     |  
     |  selectedColumns(...)
     |      selectedColumns(self, row: int = 0) -> List[QModelIndex]
     |  
     |  selectedIndexes(...)
     |      selectedIndexes(self) -> List[QModelIndex]
     |  
     |  selectedRows(...)
     |      selectedRows(self, column: int = 0) -> List[QModelIndex]
     |  
     |  selection(...)
     |      selection(self) -> QItemSelection
     |  
     |  selectionChanged = <unbound PYQT_SIGNAL selectionChanged(QItemSelection,QItemSelection)>
     |  setCurrentIndex(...)
     |      setCurrentIndex(self, QModelIndex, Union[QItemSelectionModel.SelectionFlags, QItemSelectionModel.SelectionFlag])
     |  
     |  setModel(...)
     |      setModel(self, QAbstractItemModel)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Clear = 1
     |  
     |  ClearAndSelect = 3
     |  
     |  Columns = 64
     |  
     |  Current = 16
     |  
     |  Deselect = 4
     |  
     |  NoUpdate = 0
     |  
     |  Rows = 32
     |  
     |  Select = 2
     |  
     |  SelectCurrent = 18
     |  
     |  SelectionFlag = <class 'PyQt5.QtCore.QItemSelectionModel.SelectionFlag...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  SelectionFlags = <class 'PyQt5.QtCore.QItemSelectionModel.SelectionFla...
     |      QItemSelectionModel.SelectionFlags()
     |      QItemSelectionModel.SelectionFlags(Union[QItemSelectionModel.SelectionFlags, QItemSelectionModel.SelectionFlag])
     |      QItemSelectionModel.SelectionFlags(QItemSelectionModel.SelectionFlags)
     |  
     |  Toggle = 8
     |  
     |  ToggleCurrent = 24
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QItemSelectionRange(sip.simplewrapper)
     |  QItemSelectionRange()
     |  QItemSelectionRange(QItemSelectionRange)
     |  QItemSelectionRange(QModelIndex, QModelIndex)
     |  QItemSelectionRange(QModelIndex)
     |  
     |  Method resolution order:
     |      QItemSelectionRange
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  bottom(...)
     |      bottom(self) -> int
     |  
     |  bottomRight(...)
     |      bottomRight(self) -> QPersistentModelIndex
     |  
     |  contains(...)
     |      contains(self, QModelIndex) -> bool
     |      contains(self, int, int, QModelIndex) -> bool
     |  
     |  height(...)
     |      height(self) -> int
     |  
     |  indexes(...)
     |      indexes(self) -> List[QModelIndex]
     |  
     |  intersected(...)
     |      intersected(self, QItemSelectionRange) -> QItemSelectionRange
     |  
     |  intersects(...)
     |      intersects(self, QItemSelectionRange) -> bool
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  left(...)
     |      left(self) -> int
     |  
     |  model(...)
     |      model(self) -> QAbstractItemModel
     |  
     |  parent(...)
     |      parent(self) -> QModelIndex
     |  
     |  right(...)
     |      right(self) -> int
     |  
     |  swap(...)
     |      swap(self, QItemSelectionRange)
     |  
     |  top(...)
     |      top(self) -> int
     |  
     |  topLeft(...)
     |      topLeft(self) -> QPersistentModelIndex
     |  
     |  width(...)
     |      width(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QJsonDocument(sip.simplewrapper)
     |  QJsonDocument()
     |  QJsonDocument(Dict[str, QJsonValue])
     |  QJsonDocument(Iterable[Union[QJsonValue, QJsonValue.Type, Dict[str, QJsonValue], bool, int, float, str]])
     |  QJsonDocument(QJsonDocument)
     |  
     |  Method resolution order:
     |      QJsonDocument
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  array(...)
     |      array(self) -> List[QJsonValue]
     |  
     |  fromBinaryData(...)
     |      fromBinaryData(Union[QByteArray, bytes, bytearray], validation: QJsonDocument.DataValidation = QJsonDocument.Validate) -> QJsonDocument
     |  
     |  fromJson(...)
     |      fromJson(Union[QByteArray, bytes, bytearray], error: QJsonParseError = None) -> QJsonDocument
     |  
     |  fromRawData(...)
     |      fromRawData(str, int, validation: QJsonDocument.DataValidation = QJsonDocument.Validate) -> QJsonDocument
     |  
     |  fromVariant(...)
     |      fromVariant(Any) -> QJsonDocument
     |  
     |  isArray(...)
     |      isArray(self) -> bool
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  isObject(...)
     |      isObject(self) -> bool
     |  
     |  object(...)
     |      object(self) -> Dict[str, QJsonValue]
     |  
     |  rawData(...)
     |      rawData(self) -> Tuple[str, int]
     |  
     |  setArray(...)
     |      setArray(self, Iterable[Union[QJsonValue, QJsonValue.Type, Dict[str, QJsonValue], bool, int, float, str]])
     |  
     |  setObject(...)
     |      setObject(self, Dict[str, QJsonValue])
     |  
     |  swap(...)
     |      swap(self, QJsonDocument)
     |  
     |  toBinaryData(...)
     |      toBinaryData(self) -> QByteArray
     |  
     |  toJson(...)
     |      toJson(self) -> QByteArray
     |      toJson(self, QJsonDocument.JsonFormat) -> QByteArray
     |  
     |  toVariant(...)
     |      toVariant(self) -> Any
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  BypassValidation = 1
     |  
     |  Compact = 1
     |  
     |  DataValidation = <class 'PyQt5.QtCore.QJsonDocument.DataValidation'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Indented = 0
     |  
     |  JsonFormat = <class 'PyQt5.QtCore.QJsonDocument.JsonFormat'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Validate = 0
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QJsonParseError(sip.simplewrapper)
     |  QJsonParseError()
     |  QJsonParseError(QJsonParseError)
     |  
     |  Method resolution order:
     |      QJsonParseError
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  error
     |  
     |  offset
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  DeepNesting = 12
     |  
     |  DocumentTooLarge = 13
     |  
     |  GarbageAtEnd = 14
     |  
     |  IllegalEscapeSequence = 8
     |  
     |  IllegalNumber = 7
     |  
     |  IllegalUTF8String = 9
     |  
     |  IllegalValue = 5
     |  
     |  MissingNameSeparator = 2
     |  
     |  MissingObject = 11
     |  
     |  MissingValueSeparator = 4
     |  
     |  NoError = 0
     |  
     |  ParseError = <class 'PyQt5.QtCore.QJsonParseError.ParseError'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TerminationByNumber = 6
     |  
     |  UnterminatedArray = 3
     |  
     |  UnterminatedObject = 1
     |  
     |  UnterminatedString = 10
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QJsonValue(sip.simplewrapper)
     |  QJsonValue(type: QJsonValue.Type = QJsonValue.Null)
     |  QJsonValue(Union[QJsonValue, QJsonValue.Type, Dict[str, QJsonValue], bool, int, float, str])
     |  
     |  Method resolution order:
     |      QJsonValue
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  fromVariant(...)
     |      fromVariant(Any) -> QJsonValue
     |  
     |  isArray(...)
     |      isArray(self) -> bool
     |  
     |  isBool(...)
     |      isBool(self) -> bool
     |  
     |  isDouble(...)
     |      isDouble(self) -> bool
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  isObject(...)
     |      isObject(self) -> bool
     |  
     |  isString(...)
     |      isString(self) -> bool
     |  
     |  isUndefined(...)
     |      isUndefined(self) -> bool
     |  
     |  swap(...)
     |      swap(self, QJsonValue)
     |  
     |  toArray(...)
     |      toArray(self) -> List[QJsonValue]
     |      toArray(self, Iterable[Union[QJsonValue, QJsonValue.Type, Dict[str, QJsonValue], bool, int, float, str]]) -> List[QJsonValue]
     |  
     |  toBool(...)
     |      toBool(self, defaultValue: bool = False) -> bool
     |  
     |  toDouble(...)
     |      toDouble(self, defaultValue: float = 0) -> float
     |  
     |  toInt(...)
     |      toInt(self, defaultValue: int = 0) -> int
     |  
     |  toObject(...)
     |      toObject(self) -> Dict[str, QJsonValue]
     |      toObject(self, Dict[str, QJsonValue]) -> Dict[str, QJsonValue]
     |  
     |  toString(...)
     |      toString(self) -> str
     |      toString(self, str) -> str
     |  
     |  toVariant(...)
     |      toVariant(self) -> Any
     |  
     |  type(...)
     |      type(self) -> QJsonValue.Type
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Array = 4
     |  
     |  Bool = 1
     |  
     |  Double = 2
     |  
     |  Null = 0
     |  
     |  Object = 5
     |  
     |  String = 3
     |  
     |  Type = <class 'PyQt5.QtCore.QJsonValue.Type'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Undefined = 128
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QLibrary(QObject)
     |  QLibrary(parent: QObject = None)
     |  QLibrary(str, parent: QObject = None)
     |  QLibrary(str, int, parent: QObject = None)
     |  QLibrary(str, str, parent: QObject = None)
     |  
     |  Method resolution order:
     |      QLibrary
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  fileName(...)
     |      fileName(self) -> str
     |  
     |  isLibrary(...)
     |      isLibrary(str) -> bool
     |  
     |  isLoaded(...)
     |      isLoaded(self) -> bool
     |  
     |  load(...)
     |      load(self) -> bool
     |  
     |  loadHints(...)
     |      loadHints(self) -> QLibrary.LoadHints
     |  
     |  resolve(...)
     |      resolve(self, str) -> sip.voidptr
     |      resolve(str, str) -> sip.voidptr
     |      resolve(str, int, str) -> sip.voidptr
     |      resolve(str, str, str) -> sip.voidptr
     |  
     |  setFileName(...)
     |      setFileName(self, str)
     |  
     |  setFileNameAndVersion(...)
     |      setFileNameAndVersion(self, str, int)
     |      setFileNameAndVersion(self, str, str)
     |  
     |  setLoadHints(...)
     |      setLoadHints(self, Union[QLibrary.LoadHints, QLibrary.LoadHint])
     |  
     |  unload(...)
     |      unload(self) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  DeepBindHint = 16
     |  
     |  ExportExternalSymbolsHint = 2
     |  
     |  LoadArchiveMemberHint = 4
     |  
     |  LoadHint = <class 'PyQt5.QtCore.QLibrary.LoadHint'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  LoadHints = <class 'PyQt5.QtCore.QLibrary.LoadHints'>
     |      QLibrary.LoadHints()
     |      QLibrary.LoadHints(Union[QLibrary.LoadHints, QLibrary.LoadHint])
     |      QLibrary.LoadHints(QLibrary.LoadHints)
     |  
     |  PreventUnloadHint = 8
     |  
     |  ResolveAllSymbolsHint = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QLibraryInfo(sip.simplewrapper)
     |  QLibraryInfo(QLibraryInfo)
     |  
     |  Method resolution order:
     |      QLibraryInfo
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  buildDate(...)
     |      buildDate() -> QDate
     |  
     |  isDebugBuild(...)
     |      isDebugBuild() -> bool
     |  
     |  licensedProducts(...)
     |      licensedProducts() -> str
     |  
     |  licensee(...)
     |      licensee() -> str
     |  
     |  location(...)
     |      location(QLibraryInfo.LibraryLocation) -> str
     |  
     |  version(...)
     |      version() -> QVersionNumber
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ArchDataPath = 9
     |  
     |  BinariesPath = 5
     |  
     |  DataPath = 10
     |  
     |  DocumentationPath = 1
     |  
     |  ExamplesPath = 12
     |  
     |  HeadersPath = 2
     |  
     |  ImportsPath = 7
     |  
     |  LibrariesPath = 3
     |  
     |  LibraryExecutablesPath = 4
     |  
     |  LibraryLocation = <class 'PyQt5.QtCore.QLibraryInfo.LibraryLocation'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  PluginsPath = 6
     |  
     |  PrefixPath = 0
     |  
     |  Qml2ImportsPath = 8
     |  
     |  SettingsPath = 100
     |  
     |  TestsPath = 13
     |  
     |  TranslationsPath = 11
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QLine(sip.simplewrapper)
     |  QLine()
     |  QLine(QPoint, QPoint)
     |  QLine(int, int, int, int)
     |  QLine(QLine)
     |  
     |  Method resolution order:
     |      QLine
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __bool__(self, /)
     |      self != 0
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __reduce__ = _pickle_type(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  center(...)
     |      center(self) -> QPoint
     |  
     |  dx(...)
     |      dx(self) -> int
     |  
     |  dy(...)
     |      dy(self) -> int
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  p1(...)
     |      p1(self) -> QPoint
     |  
     |  p2(...)
     |      p2(self) -> QPoint
     |  
     |  setLine(...)
     |      setLine(self, int, int, int, int)
     |  
     |  setP1(...)
     |      setP1(self, QPoint)
     |  
     |  setP2(...)
     |      setP2(self, QPoint)
     |  
     |  setPoints(...)
     |      setPoints(self, QPoint, QPoint)
     |  
     |  translate(...)
     |      translate(self, QPoint)
     |      translate(self, int, int)
     |  
     |  translated(...)
     |      translated(self, QPoint) -> QLine
     |      translated(self, int, int) -> QLine
     |  
     |  x1(...)
     |      x1(self) -> int
     |  
     |  x2(...)
     |      x2(self) -> int
     |  
     |  y1(...)
     |      y1(self) -> int
     |  
     |  y2(...)
     |      y2(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QLineF(sip.simplewrapper)
     |  QLineF(QLine)
     |  QLineF()
     |  QLineF(Union[QPointF, QPoint], Union[QPointF, QPoint])
     |  QLineF(float, float, float, float)
     |  QLineF(QLineF)
     |  
     |  Method resolution order:
     |      QLineF
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __bool__(self, /)
     |      self != 0
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __reduce__ = _pickle_type(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  angle(...)
     |      angle(self) -> float
     |  
     |  angleTo(...)
     |      angleTo(self, QLineF) -> float
     |  
     |  center(...)
     |      center(self) -> QPointF
     |  
     |  dx(...)
     |      dx(self) -> float
     |  
     |  dy(...)
     |      dy(self) -> float
     |  
     |  fromPolar(...)
     |      fromPolar(float, float) -> QLineF
     |  
     |  intersect(...)
     |      intersect(self, QLineF, Union[QPointF, QPoint]) -> QLineF.IntersectType
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  length(...)
     |      length(self) -> float
     |  
     |  normalVector(...)
     |      normalVector(self) -> QLineF
     |  
     |  p1(...)
     |      p1(self) -> QPointF
     |  
     |  p2(...)
     |      p2(self) -> QPointF
     |  
     |  pointAt(...)
     |      pointAt(self, float) -> QPointF
     |  
     |  setAngle(...)
     |      setAngle(self, float)
     |  
     |  setLength(...)
     |      setLength(self, float)
     |  
     |  setLine(...)
     |      setLine(self, float, float, float, float)
     |  
     |  setP1(...)
     |      setP1(self, Union[QPointF, QPoint])
     |  
     |  setP2(...)
     |      setP2(self, Union[QPointF, QPoint])
     |  
     |  setPoints(...)
     |      setPoints(self, Union[QPointF, QPoint], Union[QPointF, QPoint])
     |  
     |  toLine(...)
     |      toLine(self) -> QLine
     |  
     |  translate(...)
     |      translate(self, Union[QPointF, QPoint])
     |      translate(self, float, float)
     |  
     |  translated(...)
     |      translated(self, Union[QPointF, QPoint]) -> QLineF
     |      translated(self, float, float) -> QLineF
     |  
     |  unitVector(...)
     |      unitVector(self) -> QLineF
     |  
     |  x1(...)
     |      x1(self) -> float
     |  
     |  x2(...)
     |      x2(self) -> float
     |  
     |  y1(...)
     |      y1(self) -> float
     |  
     |  y2(...)
     |      y2(self) -> float
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  BoundedIntersection = 1
     |  
     |  IntersectType = <class 'PyQt5.QtCore.QLineF.IntersectType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NoIntersection = 0
     |  
     |  UnboundedIntersection = 2
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QLocale(sip.simplewrapper)
     |  QLocale()
     |  QLocale(str)
     |  QLocale(QLocale.Language, country: QLocale.Country = QLocale.AnyCountry)
     |  QLocale(QLocale)
     |  QLocale(QLocale.Language, QLocale.Script, QLocale.Country)
     |  
     |  Method resolution order:
     |      QLocale
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  amText(...)
     |      amText(self) -> str
     |  
     |  bcp47Name(...)
     |      bcp47Name(self) -> str
     |  
     |  c(...)
     |      c() -> QLocale
     |  
     |  country(...)
     |      country(self) -> QLocale.Country
     |  
     |  countryToString(...)
     |      countryToString(QLocale.Country) -> str
     |  
     |  createSeparatedList(...)
     |      createSeparatedList(self, Iterable[str]) -> str
     |  
     |  currencySymbol(...)
     |      currencySymbol(self, format: QLocale.CurrencySymbolFormat = QLocale.CurrencySymbol) -> str
     |  
     |  dateFormat(...)
     |      dateFormat(self, format: QLocale.FormatType = QLocale.LongFormat) -> str
     |  
     |  dateTimeFormat(...)
     |      dateTimeFormat(self, format: QLocale.FormatType = QLocale.LongFormat) -> str
     |  
     |  dayName(...)
     |      dayName(self, int, format: QLocale.FormatType = QLocale.LongFormat) -> str
     |  
     |  decimalPoint(...)
     |      decimalPoint(self) -> str
     |  
     |  exponential(...)
     |      exponential(self) -> str
     |  
     |  firstDayOfWeek(...)
     |      firstDayOfWeek(self) -> Qt.DayOfWeek
     |  
     |  formattedDataSize(...)
     |      formattedDataSize(self, int, precision: int = 2, format: Union[QLocale.DataSizeFormats, QLocale.DataSizeFormat] = QLocale.DataSizeIecFormat) -> str
     |  
     |  groupSeparator(...)
     |      groupSeparator(self) -> str
     |  
     |  language(...)
     |      language(self) -> QLocale.Language
     |  
     |  languageToString(...)
     |      languageToString(QLocale.Language) -> str
     |  
     |  matchingLocales(...)
     |      matchingLocales(QLocale.Language, QLocale.Script, QLocale.Country) -> List[QLocale]
     |  
     |  measurementSystem(...)
     |      measurementSystem(self) -> QLocale.MeasurementSystem
     |  
     |  monthName(...)
     |      monthName(self, int, format: QLocale.FormatType = QLocale.LongFormat) -> str
     |  
     |  name(...)
     |      name(self) -> str
     |  
     |  nativeCountryName(...)
     |      nativeCountryName(self) -> str
     |  
     |  nativeLanguageName(...)
     |      nativeLanguageName(self) -> str
     |  
     |  negativeSign(...)
     |      negativeSign(self) -> str
     |  
     |  numberOptions(...)
     |      numberOptions(self) -> QLocale.NumberOptions
     |  
     |  percent(...)
     |      percent(self) -> str
     |  
     |  pmText(...)
     |      pmText(self) -> str
     |  
     |  positiveSign(...)
     |      positiveSign(self) -> str
     |  
     |  quoteString(...)
     |      quoteString(self, str, style: QLocale.QuotationStyle = QLocale.StandardQuotation) -> str
     |  
     |  script(...)
     |      script(self) -> QLocale.Script
     |  
     |  scriptToString(...)
     |      scriptToString(QLocale.Script) -> str
     |  
     |  setDefault(...)
     |      setDefault(QLocale)
     |  
     |  setNumberOptions(...)
     |      setNumberOptions(self, Union[QLocale.NumberOptions, QLocale.NumberOption])
     |  
     |  standaloneDayName(...)
     |      standaloneDayName(self, int, format: QLocale.FormatType = QLocale.LongFormat) -> str
     |  
     |  standaloneMonthName(...)
     |      standaloneMonthName(self, int, format: QLocale.FormatType = QLocale.LongFormat) -> str
     |  
     |  swap(...)
     |      swap(self, QLocale)
     |  
     |  system(...)
     |      system() -> QLocale
     |  
     |  textDirection(...)
     |      textDirection(self) -> Qt.LayoutDirection
     |  
     |  timeFormat(...)
     |      timeFormat(self, format: QLocale.FormatType = QLocale.LongFormat) -> str
     |  
     |  toCurrencyString(...)
     |      toCurrencyString(self, float, symbol: str = '') -> str
     |      toCurrencyString(self, float, str, int) -> str
     |      toCurrencyString(self, int, symbol: str = '') -> str
     |  
     |  toDate(...)
     |      toDate(self, str, format: QLocale.FormatType = QLocale.LongFormat) -> QDate
     |      toDate(self, str, str) -> QDate
     |  
     |  toDateTime(...)
     |      toDateTime(self, str, format: QLocale.FormatType = QLocale.LongFormat) -> QDateTime
     |      toDateTime(self, str, str) -> QDateTime
     |  
     |  toDouble(...)
     |      toDouble(self, str) -> Tuple[float, bool]
     |  
     |  toFloat(...)
     |      toFloat(self, str) -> Tuple[float, bool]
     |  
     |  toInt(...)
     |      toInt(self, str) -> Tuple[int, bool]
     |  
     |  toLongLong(...)
     |      toLongLong(self, str) -> Tuple[int, bool]
     |  
     |  toLower(...)
     |      toLower(self, str) -> str
     |  
     |  toShort(...)
     |      toShort(self, str) -> Tuple[int, bool]
     |  
     |  toString(...)
     |      toString(self, float, format: str = 'g', precision: int = 6) -> str
     |      toString(self, Union[QDateTime, datetime.datetime], str) -> str
     |      toString(self, Union[QDateTime, datetime.datetime], format: QLocale.FormatType = QLocale.LongFormat) -> str
     |      toString(self, Union[QDate, datetime.date], str) -> str
     |      toString(self, Union[QDate, datetime.date], format: QLocale.FormatType = QLocale.LongFormat) -> str
     |      toString(self, Union[QTime, datetime.time], str) -> str
     |      toString(self, Union[QTime, datetime.time], format: QLocale.FormatType = QLocale.LongFormat) -> str
     |      toString(self, int) -> str
     |  
     |  toTime(...)
     |      toTime(self, str, format: QLocale.FormatType = QLocale.LongFormat) -> QTime
     |      toTime(self, str, str) -> QTime
     |  
     |  toUInt(...)
     |      toUInt(self, str) -> Tuple[int, bool]
     |  
     |  toULongLong(...)
     |      toULongLong(self, str) -> Tuple[int, bool]
     |  
     |  toUShort(...)
     |      toUShort(self, str) -> Tuple[int, bool]
     |  
     |  toUpper(...)
     |      toUpper(self, str) -> str
     |  
     |  uiLanguages(...)
     |      uiLanguages(self) -> List[str]
     |  
     |  weekdays(...)
     |      weekdays(self) -> List[Qt.DayOfWeek]
     |  
     |  zeroDigit(...)
     |      zeroDigit(self) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Abkhazian = 2
     |  
     |  AdlamScript = 134
     |  
     |  Afan = 3
     |  
     |  Afar = 4
     |  
     |  Afghanistan = 1
     |  
     |  Afrikaans = 5
     |  
     |  Aghem = 237
     |  
     |  Ahom = 340
     |  
     |  AhomScript = 128
     |  
     |  Akan = 146
     |  
     |  Akkadian = 262
     |  
     |  Akoose = 312
     |  
     |  AlandIslands = 248
     |  
     |  Albania = 2
     |  
     |  Albanian = 6
     |  
     |  Algeria = 3
     |  
     |  AlternateQuotation = 1
     |  
     |  AmericanSamoa = 4
     |  
     |  AmericanSignLanguage = 341
     |  
     |  Amharic = 7
     |  
     |  AnatolianHieroglyphsScript = 129
     |  
     |  AncientEgyptian = 263
     |  
     |  AncientGreek = 264
     |  
     |  AncientNorthArabian = 331
     |  
     |  Andorra = 5
     |  
     |  Angola = 6
     |  
     |  Anguilla = 7
     |  
     |  Antarctica = 8
     |  
     |  AntiguaAndBarbuda = 9
     |  
     |  AnyCountry = 0
     |  
     |  AnyLanguage = 0
     |  
     |  AnyScript = 0
     |  
     |  Arabic = 8
     |  
     |  ArabicScript = 1
     |  
     |  Aragonese = 261
     |  
     |  Aramaic = 265
     |  
     |  ArdhamagadhiPrakrit = 342
     |  
     |  Argentina = 10
     |  
     |  Armenia = 11
     |  
     |  Armenian = 9
     |  
     |  ArmenianScript = 10
     |  
     |  Aruba = 12
     |  
     |  AscensionIsland = 247
     |  
     |  Assamese = 10
     |  
     |  Asturian = 256
     |  
     |  Asu = 205
     |  
     |  Atsam = 156
     |  
     |  Australia = 13
     |  
     |  Austria = 14
     |  
     |  Avaric = 216
     |  
     |  Avestan = 255
     |  
     |  AvestanScript = 36
     |  
     |  Aymara = 11
     |  
     |  Azerbaijan = 15
     |  
     |  Azerbaijani = 12
     |  
     |  Bafia = 243
     |  
     |  Bahamas = 16
     |  
     |  Bahrain = 17
     |  
     |  Balinese = 266
     |  
     |  BalineseScript = 37
     |  
     |  Bambara = 188
     |  
     |  BamumScript = 38
     |  
     |  Bamun = 267
     |  
     |  Bangladesh = 18
     |  
     |  Barbados = 19
     |  
     |  Basaa = 238
     |  
     |  Bashkir = 13
     |  
     |  Basque = 14
     |  
     |  Bassa = 336
     |  
     |  BassaVahScript = 106
     |  
     |  BatakScript = 39
     |  
     |  BatakToba = 268
     |  
     |  Belarus = 20
     |  
     |  Belarusian = 22
     |  
     |  Belgium = 21
     |  
     |  Belize = 22
     |  
     |  Bemba = 195
     |  
     |  Bena = 186
     |  
     |  Bengali = 15
     |  
     |  BengaliScript = 11
     |  
     |  Benin = 23
     |  
     |  Bermuda = 24
     |  
     |  BhaiksukiScript = 135
     |  
     |  Bhojpuri = 343
     |  
     |  Bhutan = 25
     |  
     |  Bhutani = 16
     |  
     |  Bihari = 17
     |  
     |  Bislama = 18
     |  
     |  Blin = 152
     |  
     |  Bodo = 215
     |  
     |  Bolivia = 26
     |  
     |  Bonaire = 255
     |  
     |  BopomofoScript = 40
     |  
     |  BosniaAndHerzegowina = 27
     |  
     |  Bosnian = 142
     |  
     |  Botswana = 28
     |  
     |  BouvetIsland = 29
     |  
     |  BrahmiScript = 41
     |  
     |  BrailleScript = 103
     |  
     |  Brazil = 30
     |  
     |  Breton = 19
     |  
     |  BritishIndianOceanTerritory = 31
     |  
     |  BritishVirginIslands = 233
     |  
     |  Brunei = 32
     |  
     |  Buginese = 269
     |  
     |  BugineseScript = 42
     |  
     |  Buhid = 270
     |  
     |  BuhidScript = 43
     |  
     |  Bulgaria = 33
     |  
     |  Bulgarian = 20
     |  
     |  BurkinaFaso = 34
     |  
     |  Burmese = 21
     |  
     |  Burundi = 35
     |  
     |  Byelorussian = 22
     |  
     |  C = 1
     |  
     |  Cambodia = 36
     |  
     |  Cambodian = 23
     |  
     |  Cameroon = 37
     |  
     |  Canada = 38
     |  
     |  CanadianAboriginalScript = 44
     |  
     |  CanaryIslands = 238
     |  
     |  Cantonese = 357
     |  
     |  CapeVerde = 39
     |  
     |  Carian = 271
     |  
     |  CarianScript = 45
     |  
     |  Catalan = 24
     |  
     |  CaucasianAlbanianScript = 105
     |  
     |  CaymanIslands = 40
     |  
     |  CentralAfricanRepublic = 41
     |  
     |  CentralKurdish = 316
     |  
     |  CentralMoroccoTamazight = 212
     |  
     |  CeutaAndMelilla = 250
     |  
     |  Chad = 42
     |  
     |  Chakma = 272
     |  
     |  ChakmaScript = 46
     |  
     |  ChamScript = 47
     |  
     |  Chamorro = 217
     |  
     |  Chechen = 218
     |  
     |  Cherokee = 190
     |  
     |  CherokeeScript = 12
     |  
     |  Chewa = 165
     |  
     |  Chiga = 211
     |  
     |  Chile = 43
     |  
     |  China = 44
     |  
     |  Chinese = 25
     |  
     |  ChristmasIsland = 45
     |  
     |  Church = 219
     |  
     |  Chuvash = 220
     |  
     |  ClassicalMandaic = 273
     |  
     |  ClippertonIsland = 241
     |  
     |  CocosIslands = 46
     |  
     |  Colognian = 201
     |  
     |  Colombia = 47
     |  
     |  Comoros = 48
     |  
     |  CongoBrazzaville = 50
     |  
     |  CongoKinshasa = 49
     |  
     |  CongoSwahili = 250
     |  
     |  CookIslands = 51
     |  
     |  Coptic = 274
     |  
     |  CopticScript = 48
     |  
     |  Cornish = 145
     |  
     |  Corsican = 26
     |  
     |  CostaRica = 52
     |  
     |  Country = <class 'PyQt5.QtCore.QLocale.Country'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Cree = 221
     |  
     |  Croatia = 54
     |  
     |  Croatian = 27
     |  
     |  Cuba = 55
     |  
     |  CuneiformScript = 94
     |  
     |  CuraSao = 152
     |  
     |  CurrencyDisplayName = 2
     |  
     |  CurrencyIsoCode = 0
     |  
     |  CurrencySymbol = 1
     |  
     |  CurrencySymbolFormat = <class 'PyQt5.QtCore.QLocale.CurrencySymbolForm...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  CypriotScript = 49
     |  
     |  Cyprus = 56
     |  
     |  CyrillicScript = 2
     |  
     |  Czech = 28
     |  
     |  CzechRepublic = 57
     |  
     |  Danish = 29
     |  
     |  DataSizeFormat = <class 'PyQt5.QtCore.QLocale.DataSizeFormat'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  DataSizeFormats = <class 'PyQt5.QtCore.QLocale.DataSizeFormats'>
     |      QLocale.DataSizeFormats()
     |      QLocale.DataSizeFormats(Union[QLocale.DataSizeFormats, QLocale.DataSizeFormat])
     |      QLocale.DataSizeFormats(QLocale.DataSizeFormats)
     |  
     |  DataSizeIecFormat = 0
     |  
     |  DataSizeSIFormat = 3
     |  
     |  DataSizeTraditionalFormat = 2
     |  
     |  DefaultNumberOptions = 0
     |  
     |  DemocraticRepublicOfCongo = 49
     |  
     |  DemocraticRepublicOfKorea = 113
     |  
     |  Denmark = 58
     |  
     |  DeseretScript = 3
     |  
     |  DevanagariScript = 13
     |  
     |  DiegoGarcia = 249
     |  
     |  Divehi = 143
     |  
     |  Djibouti = 59
     |  
     |  Dogri = 275
     |  
     |  Dominica = 60
     |  
     |  DominicanRepublic = 61
     |  
     |  Duala = 240
     |  
     |  DuployanScript = 107
     |  
     |  Dutch = 30
     |  
     |  Dzongkha = 16
     |  
     |  EastTimor = 62
     |  
     |  EasternCham = 276
     |  
     |  EasternKayah = 277
     |  
     |  Ecuador = 63
     |  
     |  Egypt = 64
     |  
     |  EgyptianHieroglyphsScript = 50
     |  
     |  ElSalvador = 65
     |  
     |  ElbasanScript = 108
     |  
     |  Embu = 189
     |  
     |  English = 31
     |  
     |  EquatorialGuinea = 66
     |  
     |  Eritrea = 67
     |  
     |  Esperanto = 32
     |  
     |  Estonia = 68
     |  
     |  Estonian = 33
     |  
     |  Ethiopia = 69
     |  
     |  EthiopicScript = 14
     |  
     |  Etruscan = 278
     |  
     |  EuropeanUnion = 258
     |  
     |  Ewe = 161
     |  
     |  Ewondo = 242
     |  
     |  FalklandIslands = 70
     |  
     |  FaroeIslands = 71
     |  
     |  Faroese = 34
     |  
     |  Fiji = 72
     |  
     |  Fijian = 35
     |  
     |  Filipino = 166
     |  
     |  Finland = 73
     |  
     |  Finnish = 36
     |  
     |  FloatingPointPrecisionOption = <class 'PyQt5.QtCore.QLocale.FloatingPo...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FloatingPointShortest = -128
     |  
     |  FormatType = <class 'PyQt5.QtCore.QLocale.FormatType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  France = 74
     |  
     |  FraserScript = 51
     |  
     |  French = 37
     |  
     |  FrenchGuiana = 76
     |  
     |  FrenchPolynesia = 77
     |  
     |  FrenchSouthernTerritories = 78
     |  
     |  Frisian = 38
     |  
     |  Friulian = 159
     |  
     |  Fulah = 177
     |  
     |  Ga = 148
     |  
     |  Gabon = 79
     |  
     |  Gaelic = 39
     |  
     |  Galician = 40
     |  
     |  Gambia = 80
     |  
     |  Ganda = 194
     |  
     |  Geez = 153
     |  
     |  Georgia = 81
     |  
     |  Georgian = 41
     |  
     |  GeorgianScript = 15
     |  
     |  German = 42
     |  
     |  Germany = 82
     |  
     |  Ghana = 83
     |  
     |  Gibraltar = 84
     |  
     |  GlagoliticScript = 52
     |  
     |  Gothic = 279
     |  
     |  GothicScript = 53
     |  
     |  GranthaScript = 109
     |  
     |  Greece = 85
     |  
     |  Greek = 43
     |  
     |  GreekScript = 16
     |  
     |  Greenland = 86
     |  
     |  Greenlandic = 44
     |  
     |  Grenada = 87
     |  
     |  Guadeloupe = 88
     |  
     |  Guam = 89
     |  
     |  Guarani = 45
     |  
     |  Guatemala = 90
     |  
     |  Guernsey = 75
     |  
     |  Guinea = 91
     |  
     |  GuineaBissau = 92
     |  
     |  Gujarati = 46
     |  
     |  GujaratiScript = 17
     |  
     |  GurmukhiScript = 4
     |  
     |  Gusii = 175
     |  
     |  Guyana = 93
     |  
     |  Haiti = 94
     |  
     |  Haitian = 222
     |  
     |  HanScript = 54
     |  
     |  HanWithBopomofoScript = 140
     |  
     |  HangulScript = 55
     |  
     |  Hanunoo = 280
     |  
     |  HanunooScript = 56
     |  
     |  HatranScript = 130
     |  
     |  Hausa = 47
     |  
     |  Hawaiian = 163
     |  
     |  HeardAndMcDonaldIslands = 95
     |  
     |  Hebrew = 48
     |  
     |  HebrewScript = 18
     |  
     |  Herero = 223
     |  
     |  HieroglyphicLuwian = 344
     |  
     |  Hindi = 49
     |  
     |  HiraganaScript = 104
     |  
     |  HiriMotu = 224
     |  
     |  HmongNjua = 333
     |  
     |  Ho = 334
     |  
     |  Honduras = 96
     |  
     |  HongKong = 97
     |  
     |  Hungarian = 50
     |  
     |  Hungary = 98
     |  
     |  Iceland = 99
     |  
     |  Icelandic = 51
     |  
     |  Igbo = 149
     |  
     |  ImperialAramaicScript = 57
     |  
     |  ImperialSystem = 1
     |  
     |  ImperialUKSystem = 2
     |  
     |  ImperialUSSystem = 1
     |  
     |  InariSami = 326
     |  
     |  IncludeTrailingZeroesAfterDot = 16
     |  
     |  India = 100
     |  
     |  Indonesia = 101
     |  
     |  Indonesian = 52
     |  
     |  Ingush = 281
     |  
     |  InscriptionalPahlaviScript = 58
     |  
     |  InscriptionalParthianScript = 59
     |  
     |  Interlingua = 53
     |  
     |  Interlingue = 54
     |  
     |  Inuktitut = 55
     |  
     |  Inupiak = 56
     |  
     |  Iran = 102
     |  
     |  Iraq = 103
     |  
     |  Ireland = 104
     |  
     |  Irish = 57
     |  
     |  IsleOfMan = 251
     |  
     |  Israel = 105
     |  
     |  Italian = 58
     |  
     |  Italy = 106
     |  
     |  IvoryCoast = 53
     |  
     |  Jamaica = 107
     |  
     |  JamoScript = 141
     |  
     |  Japan = 108
     |  
     |  Japanese = 59
     |  
     |  JapaneseScript = 19
     |  
     |  Javanese = 60
     |  
     |  JavaneseScript = 60
     |  
     |  Jersey = 252
     |  
     |  Jju = 158
     |  
     |  JolaFonyi = 241
     |  
     |  Jordan = 109
     |  
     |  Kabuverdianu = 196
     |  
     |  Kabyle = 184
     |  
     |  KaithiScript = 61
     |  
     |  Kako = 258
     |  
     |  Kalenjin = 198
     |  
     |  Kamba = 150
     |  
     |  Kannada = 61
     |  
     |  KannadaScript = 21
     |  
     |  Kanuri = 225
     |  
     |  Kashmiri = 62
     |  
     |  KatakanaScript = 62
     |  
     |  KayahLiScript = 63
     |  
     |  Kazakh = 63
     |  
     |  Kazakhstan = 110
     |  
     |  Kenya = 111
     |  
     |  Kenyang = 319
     |  
     |  KharoshthiScript = 64
     |  
     |  Khmer = 23
     |  
     |  KhmerScript = 20
     |  
     |  KhojkiScript = 111
     |  
     |  KhudawadiScript = 125
     |  
     |  Kiche = 323
     |  
     |  Kikuyu = 178
     |  
     |  Kinyarwanda = 64
     |  
     |  Kirghiz = 65
     |  
     |  Kiribati = 112
     |  
     |  Komi = 226
     |  
     |  Kongo = 227
     |  
     |  Konkani = 147
     |  
     |  Korean = 66
     |  
     |  KoreanScript = 22
     |  
     |  Koro = 154
     |  
     |  Kosovo = 257
     |  
     |  KoyraChiini = 208
     |  
     |  KoyraboroSenni = 213
     |  
     |  Kpelle = 169
     |  
     |  Kurdish = 67
     |  
     |  Kurundi = 68
     |  
     |  Kuwait = 115
     |  
     |  Kwanyama = 228
     |  
     |  Kwasio = 246
     |  
     |  Kyrgyzstan = 116
     |  
     |  Lakota = 313
     |  
     |  Langi = 193
     |  
     |  Language = <class 'PyQt5.QtCore.QLocale.Language'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  LannaScript = 65
     |  
     |  Lao = 69
     |  
     |  LaoScript = 23
     |  
     |  Laos = 117
     |  
     |  LargeFloweryMiao = 282
     |  
     |  LastCountry = 259
     |  
     |  LastLanguage = 359
     |  
     |  Latin = 70
     |  
     |  LatinAmericaAndTheCaribbean = 246
     |  
     |  LatinScript = 7
     |  
     |  Latvia = 118
     |  
     |  Latvian = 71
     |  
     |  Lebanon = 119
     |  
     |  Lepcha = 283
     |  
     |  LepchaScript = 66
     |  
     |  Lesotho = 120
     |  
     |  Lezghian = 335
     |  
     |  Liberia = 121
     |  
     |  Libya = 122
     |  
     |  Liechtenstein = 123
     |  
     |  Limbu = 284
     |  
     |  LimbuScript = 67
     |  
     |  Limburgish = 229
     |  
     |  LinearA = 332
     |  
     |  LinearAScript = 112
     |  
     |  LinearBScript = 68
     |  
     |  Lingala = 72
     |  
     |  Lisu = 285
     |  
     |  LiteraryChinese = 345
     |  
     |  Lithuania = 124
     |  
     |  Lithuanian = 73
     |  
     |  LongFormat = 0
     |  
     |  LowGerman = 170
     |  
     |  LowerSorbian = 317
     |  
     |  Lu = 286
     |  
     |  LubaKatanga = 230
     |  
     |  LuleSami = 325
     |  
     |  Luo = 210
     |  
     |  Luxembourg = 125
     |  
     |  Luxembourgish = 231
     |  
     |  Luyia = 204
     |  
     |  Lycian = 287
     |  
     |  LycianScript = 69
     |  
     |  Lydian = 288
     |  
     |  LydianScript = 70
     |  
     |  Macau = 126
     |  
     |  Macedonia = 127
     |  
     |  Macedonian = 74
     |  
     |  Machame = 200
     |  
     |  Madagascar = 128
     |  
     |  MahajaniScript = 113
     |  
     |  Maithili = 339
     |  
     |  MakhuwaMeetto = 244
     |  
     |  Makonde = 192
     |  
     |  Malagasy = 75
     |  
     |  Malawi = 129
     |  
     |  Malay = 76
     |  
     |  Malayalam = 77
     |  
     |  MalayalamScript = 24
     |  
     |  Malaysia = 130
     |  
     |  Maldives = 131
     |  
     |  Mali = 132
     |  
     |  Malta = 133
     |  
     |  Maltese = 78
     |  
     |  MandaeanScript = 71
     |  
     |  Mandingo = 289
     |  
     |  ManichaeanMiddlePersian = 329
     |  
     |  ManichaeanScript = 114
     |  
     |  Manipuri = 290
     |  
     |  Manx = 144
     |  
     |  Maori = 79
     |  
     |  Mapuche = 315
     |  
     |  Marathi = 80
     |  
     |  MarchenScript = 136
     |  
     |  MarshallIslands = 134
     |  
     |  Marshallese = 81
     |  
     |  Martinique = 135
     |  
     |  Masai = 202
     |  
     |  Mauritania = 136
     |  
     |  Mauritius = 137
     |  
     |  Mayotte = 138
     |  
     |  Mazanderani = 346
     |  
     |  MeasurementSystem = <class 'PyQt5.QtCore.QLocale.MeasurementSystem'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  MeiteiMayekScript = 72
     |  
     |  Mende = 330
     |  
     |  MendeKikakuiScript = 115
     |  
     |  Meroitic = 291
     |  
     |  MeroiticCursiveScript = 74
     |  
     |  MeroiticScript = 73
     |  
     |  Meru = 197
     |  
     |  Meta = 259
     |  
     |  MetricSystem = 0
     |  
     |  Mexico = 139
     |  
     |  Micronesia = 140
     |  
     |  ModiScript = 116
     |  
     |  Mohawk = 320
     |  
     |  Moldavian = 95
     |  
     |  Moldova = 141
     |  
     |  Monaco = 142
     |  
     |  Mongolia = 143
     |  
     |  Mongolian = 82
     |  
     |  MongolianScript = 8
     |  
     |  Mono = 337
     |  
     |  Montenegro = 242
     |  
     |  Montserrat = 144
     |  
     |  Morisyen = 191
     |  
     |  Morocco = 145
     |  
     |  Mozambique = 146
     |  
     |  MroScript = 117
     |  
     |  Mru = 347
     |  
     |  MultaniScript = 131
     |  
     |  Mundang = 245
     |  
     |  Myanmar = 147
     |  
     |  MyanmarScript = 25
     |  
     |  NabataeanScript = 119
     |  
     |  Nama = 199
     |  
     |  Namibia = 148
     |  
     |  NarrowFormat = 2
     |  
     |  NauruCountry = 149
     |  
     |  NauruLanguage = 83
     |  
     |  Navaho = 232
     |  
     |  Ndonga = 233
     |  
     |  Nepal = 150
     |  
     |  Nepali = 84
     |  
     |  Netherlands = 151
     |  
     |  NewCaledonia = 153
     |  
     |  NewTaiLueScript = 76
     |  
     |  NewZealand = 154
     |  
     |  NewaScript = 137
     |  
     |  Newari = 348
     |  
     |  Ngiemboon = 260
     |  
     |  Ngomba = 257
     |  
     |  Nicaragua = 155
     |  
     |  Niger = 156
     |  
     |  Nigeria = 157
     |  
     |  Niue = 158
     |  
     |  Nko = 321
     |  
     |  NkoScript = 75
     |  
     |  NorfolkIsland = 159
     |  
     |  NorthKorea = 113
     |  
     |  NorthNdebele = 181
     |  
     |  NorthernLuri = 349
     |  
     |  NorthernMarianaIslands = 160
     |  
     |  NorthernSami = 173
     |  
     |  NorthernSotho = 172
     |  
     |  NorthernThai = 292
     |  
     |  Norway = 161
     |  
     |  Norwegian = 85
     |  
     |  NorwegianBokmal = 85
     |  
     |  NorwegianNynorsk = 141
     |  
     |  Nuer = 247
     |  
     |  NumberOption = <class 'PyQt5.QtCore.QLocale.NumberOption'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NumberOptions = <class 'PyQt5.QtCore.QLocale.NumberOptions'>
     |      QLocale.NumberOptions()
     |      QLocale.NumberOptions(Union[QLocale.NumberOptions, QLocale.NumberOption])
     |      QLocale.NumberOptions(QLocale.NumberOptions)
     |  
     |  Nyanja = 165
     |  
     |  Nyankole = 185
     |  
     |  Occitan = 86
     |  
     |  OghamScript = 77
     |  
     |  Ojibwa = 234
     |  
     |  OlChikiScript = 78
     |  
     |  OldHungarianScript = 132
     |  
     |  OldIrish = 293
     |  
     |  OldItalicScript = 79
     |  
     |  OldNorse = 294
     |  
     |  OldNorthArabianScript = 118
     |  
     |  OldPermicScript = 122
     |  
     |  OldPersian = 295
     |  
     |  OldPersianScript = 80
     |  
     |  OldSouthArabianScript = 81
     |  
     |  OldTurkish = 296
     |  
     |  Oman = 162
     |  
     |  OmitGroupSeparator = 1
     |  
     |  OmitLeadingZeroInExponent = 4
     |  
     |  Oriya = 87
     |  
     |  OriyaScript = 26
     |  
     |  OrkhonScript = 82
     |  
     |  Oromo = 3
     |  
     |  Osage = 358
     |  
     |  OsageScript = 138
     |  
     |  OsmanyaScript = 83
     |  
     |  Ossetic = 101
     |  
     |  OutlyingOceania = 259
     |  
     |  PahawhHmongScript = 110
     |  
     |  Pahlavi = 297
     |  
     |  Pakistan = 163
     |  
     |  Palau = 164
     |  
     |  Palauan = 350
     |  
     |  PalestinianTerritories = 165
     |  
     |  Pali = 235
     |  
     |  PalmyreneScript = 120
     |  
     |  Panama = 166
     |  
     |  Papiamento = 351
     |  
     |  PapuaNewGuinea = 167
     |  
     |  Paraguay = 168
     |  
     |  Parthian = 298
     |  
     |  Pashto = 88
     |  
     |  PauCinHauScript = 121
     |  
     |  PeoplesRepublicOfCongo = 50
     |  
     |  Persian = 89
     |  
     |  Peru = 169
     |  
     |  PhagsPaScript = 84
     |  
     |  Philippines = 170
     |  
     |  Phoenician = 299
     |  
     |  PhoenicianScript = 85
     |  
     |  Pitcairn = 171
     |  
     |  Poland = 172
     |  
     |  Polish = 90
     |  
     |  PollardPhoneticScript = 86
     |  
     |  Portugal = 173
     |  
     |  Portuguese = 91
     |  
     |  PrakritLanguage = 300
     |  
     |  Prussian = 322
     |  
     |  PsalterPahlaviScript = 123
     |  
     |  PuertoRico = 174
     |  
     |  Punjabi = 92
     |  
     |  Qatar = 175
     |  
     |  Quechua = 93
     |  
     |  QuotationStyle = <class 'PyQt5.QtCore.QLocale.QuotationStyle'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Rejang = 301
     |  
     |  RejangScript = 87
     |  
     |  RejectGroupSeparator = 2
     |  
     |  RejectLeadingZeroInExponent = 8
     |  
     |  RejectTrailingZeroesAfterDot = 32
     |  
     |  RepublicOfKorea = 114
     |  
     |  Reunion = 176
     |  
     |  RhaetoRomance = 94
     |  
     |  Romania = 177
     |  
     |  Romanian = 95
     |  
     |  Romansh = 94
     |  
     |  Rombo = 182
     |  
     |  Rundi = 68
     |  
     |  RunicScript = 88
     |  
     |  Russia = 178
     |  
     |  Russian = 96
     |  
     |  RussianFederation = 178
     |  
     |  Rwa = 209
     |  
     |  Rwanda = 179
     |  
     |  Sabaean = 302
     |  
     |  Saho = 207
     |  
     |  SaintBarthelemy = 244
     |  
     |  SaintHelena = 199
     |  
     |  SaintKittsAndNevis = 180
     |  
     |  SaintLucia = 181
     |  
     |  SaintMartin = 245
     |  
     |  SaintPierreAndMiquelon = 200
     |  
     |  SaintVincentAndTheGrenadines = 182
     |  
     |  Sakha = 248
     |  
     |  Samaritan = 303
     |  
     |  SamaritanScript = 89
     |  
     |  Samburu = 179
     |  
     |  Samoa = 183
     |  
     |  Samoan = 97
     |  
     |  SanMarino = 184
     |  
     |  Sango = 98
     |  
     |  Sangu = 249
     |  
     |  Sanskrit = 99
     |  
     |  Santali = 304
     |  
     |  SaoTomeAndPrincipe = 185
     |  
     |  Saraiki = 352
     |  
     |  Sardinian = 115
     |  
     |  SaudiArabia = 186
     |  
     |  Saurashtra = 305
     |  
     |  SaurashtraScript = 90
     |  
     |  Script = <class 'PyQt5.QtCore.QLocale.Script'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Sena = 180
     |  
     |  Senegal = 187
     |  
     |  Serbia = 243
     |  
     |  Serbian = 100
     |  
     |  SerboCroatian = 100
     |  
     |  Seychelles = 188
     |  
     |  Shambala = 214
     |  
     |  SharadaScript = 91
     |  
     |  ShavianScript = 92
     |  
     |  Shona = 104
     |  
     |  ShortFormat = 1
     |  
     |  SichuanYi = 168
     |  
     |  Sidamo = 155
     |  
     |  SiddhamScript = 124
     |  
     |  SierraLeone = 189
     |  
     |  SignWritingScript = 133
     |  
     |  SimplifiedChineseScript = 5
     |  
     |  SimplifiedHanScript = 5
     |  
     |  Sindhi = 105
     |  
     |  Singapore = 190
     |  
     |  Sinhala = 106
     |  
     |  SinhalaScript = 32
     |  
     |  SintMaarten = 256
     |  
     |  SkoltSami = 327
     |  
     |  Slovak = 108
     |  
     |  Slovakia = 191
     |  
     |  Slovenia = 192
     |  
     |  Slovenian = 109
     |  
     |  Soga = 203
     |  
     |  SolomonIslands = 193
     |  
     |  Somali = 110
     |  
     |  Somalia = 194
     |  
     |  Sora = 306
     |  
     |  SoraSompengScript = 93
     |  
     |  SouthAfrica = 195
     |  
     |  SouthGeorgiaAndTheSouthSandwichIslands = 196
     |  
     |  SouthKorea = 114
     |  
     |  SouthNdebele = 171
     |  
     |  SouthSudan = 254
     |  
     |  SouthernSami = 324
     |  
     |  SouthernSotho = 102
     |  
     |  Spain = 197
     |  
     |  Spanish = 111
     |  
     |  SriLanka = 198
     |  
     |  StandardMoroccanTamazight = 314
     |  
     |  StandardQuotation = 0
     |  
     |  Sudan = 201
     |  
     |  Sundanese = 112
     |  
     |  SundaneseScript = 95
     |  
     |  Suriname = 202
     |  
     |  SvalbardAndJanMayenIslands = 203
     |  
     |  Swahili = 113
     |  
     |  Swati = 107
     |  
     |  Swaziland = 204
     |  
     |  Sweden = 205
     |  
     |  Swedish = 114
     |  
     |  SwissGerman = 167
     |  
     |  Switzerland = 206
     |  
     |  Sylheti = 307
     |  
     |  SylotiNagriScript = 96
     |  
     |  Syria = 207
     |  
     |  Syriac = 151
     |  
     |  SyriacScript = 33
     |  
     |  SyrianArabRepublic = 207
     |  
     |  Tachelhit = 183
     |  
     |  Tagalog = 166
     |  
     |  TagalogScript = 97
     |  
     |  Tagbanwa = 308
     |  
     |  TagbanwaScript = 98
     |  
     |  Tahitian = 127
     |  
     |  TaiDam = 309
     |  
     |  TaiLeScript = 99
     |  
     |  TaiNua = 310
     |  
     |  TaiVietScript = 100
     |  
     |  Taita = 176
     |  
     |  Taiwan = 208
     |  
     |  Tajik = 116
     |  
     |  Tajikistan = 209
     |  
     |  TakriScript = 101
     |  
     |  Tamil = 117
     |  
     |  TamilScript = 27
     |  
     |  Tangut = 359
     |  
     |  TangutScript = 139
     |  
     |  Tanzania = 210
     |  
     |  Taroko = 174
     |  
     |  Tasawaq = 251
     |  
     |  Tatar = 118
     |  
     |  TedimChin = 338
     |  
     |  Telugu = 119
     |  
     |  TeluguScript = 28
     |  
     |  Teso = 206
     |  
     |  ThaanaScript = 29
     |  
     |  Thai = 120
     |  
     |  ThaiScript = 30
     |  
     |  Thailand = 211
     |  
     |  Tibetan = 121
     |  
     |  TibetanScript = 31
     |  
     |  TifinaghScript = 9
     |  
     |  Tigre = 157
     |  
     |  Tigrinya = 122
     |  
     |  TirhutaScript = 126
     |  
     |  Togo = 212
     |  
     |  TokPisin = 354
     |  
     |  Tokelau = 213
     |  
     |  TokelauCountry = 213
     |  
     |  TokelauLanguage = 353
     |  
     |  Tonga = 214
     |  
     |  Tongan = 123
     |  
     |  TraditionalChineseScript = 6
     |  
     |  TraditionalHanScript = 6
     |  
     |  TrinidadAndTobago = 215
     |  
     |  TristanDaCunha = 253
     |  
     |  Tsonga = 124
     |  
     |  Tswana = 103
     |  
     |  Tunisia = 216
     |  
     |  Turkey = 217
     |  
     |  Turkish = 125
     |  
     |  Turkmen = 126
     |  
     |  Turkmenistan = 218
     |  
     |  TurksAndCaicosIslands = 219
     |  
     |  Tuvalu = 220
     |  
     |  TuvaluCountry = 220
     |  
     |  TuvaluLanguage = 355
     |  
     |  Twi = 146
     |  
     |  Tyap = 164
     |  
     |  Uganda = 221
     |  
     |  Ugaritic = 311
     |  
     |  UgariticScript = 102
     |  
     |  Uighur = 128
     |  
     |  Uigur = 128
     |  
     |  Ukraine = 222
     |  
     |  Ukrainian = 129
     |  
     |  UncodedLanguages = 356
     |  
     |  UnitedArabEmirates = 223
     |  
     |  UnitedKingdom = 224
     |  
     |  UnitedStates = 225
     |  
     |  UnitedStatesMinorOutlyingIslands = 226
     |  
     |  UnitedStatesVirginIslands = 234
     |  
     |  UpperSorbian = 318
     |  
     |  Urdu = 130
     |  
     |  Uruguay = 227
     |  
     |  Uzbek = 131
     |  
     |  Uzbekistan = 228
     |  
     |  Vai = 252
     |  
     |  VaiScript = 35
     |  
     |  Vanuatu = 229
     |  
     |  VarangKshitiScript = 127
     |  
     |  VaticanCityState = 230
     |  
     |  Venda = 160
     |  
     |  Venezuela = 231
     |  
     |  Vietnam = 232
     |  
     |  Vietnamese = 132
     |  
     |  Volapuk = 133
     |  
     |  Vunjo = 187
     |  
     |  Walamo = 162
     |  
     |  WallisAndFutunaIslands = 235
     |  
     |  Walloon = 236
     |  
     |  Walser = 253
     |  
     |  Warlpiri = 328
     |  
     |  Welsh = 134
     |  
     |  WesternFrisian = 38
     |  
     |  WesternSahara = 236
     |  
     |  Wolof = 135
     |  
     |  Xhosa = 136
     |  
     |  Yangben = 254
     |  
     |  Yemen = 237
     |  
     |  YiScript = 34
     |  
     |  Yiddish = 137
     |  
     |  Yoruba = 138
     |  
     |  Zambia = 239
     |  
     |  Zarma = 239
     |  
     |  Zhuang = 139
     |  
     |  Zimbabwe = 240
     |  
     |  Zulu = 140
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QLockFile(sip.simplewrapper)
     |  QLockFile(str)
     |  
     |  Method resolution order:
     |      QLockFile
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  error(...)
     |      error(self) -> QLockFile.LockError
     |  
     |  getLockInfo(...)
     |      getLockInfo(self) -> Tuple[bool, int, str, str]
     |  
     |  isLocked(...)
     |      isLocked(self) -> bool
     |  
     |  lock(...)
     |      lock(self) -> bool
     |  
     |  removeStaleLockFile(...)
     |      removeStaleLockFile(self) -> bool
     |  
     |  setStaleLockTime(...)
     |      setStaleLockTime(self, int)
     |  
     |  staleLockTime(...)
     |      staleLockTime(self) -> int
     |  
     |  tryLock(...)
     |      tryLock(self, timeout: int = 0) -> bool
     |  
     |  unlock(...)
     |      unlock(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  LockError = <class 'PyQt5.QtCore.QLockFile.LockError'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  LockFailedError = 1
     |  
     |  NoError = 0
     |  
     |  PermissionError = 2
     |  
     |  UnknownError = 3
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMargins(sip.simplewrapper)
     |  QMargins()
     |  QMargins(int, int, int, int)
     |  QMargins(QMargins)
     |  
     |  Method resolution order:
     |      QMargins
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __iadd__(self, value, /)
     |      Return self+=value.
     |  
     |  __imul__(self, value, /)
     |      Return self*=value.
     |  
     |  __isub__(self, value, /)
     |      Return self-=value.
     |  
     |  __itruediv__(self, value, /)
     |      Return self/=value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __neg__(self, /)
     |      -self
     |  
     |  __pos__(self, /)
     |      +self
     |  
     |  __radd__(self, value, /)
     |      Return value+self.
     |  
     |  __rmul__(self, value, /)
     |      Return value*self.
     |  
     |  __rsub__(self, value, /)
     |      Return value-self.
     |  
     |  __rtruediv__(self, value, /)
     |      Return value/self.
     |  
     |  __sub__(self, value, /)
     |      Return self-value.
     |  
     |  __truediv__(self, value, /)
     |      Return self/value.
     |  
     |  bottom(...)
     |      bottom(self) -> int
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  left(...)
     |      left(self) -> int
     |  
     |  right(...)
     |      right(self) -> int
     |  
     |  setBottom(...)
     |      setBottom(self, int)
     |  
     |  setLeft(...)
     |      setLeft(self, int)
     |  
     |  setRight(...)
     |      setRight(self, int)
     |  
     |  setTop(...)
     |      setTop(self, int)
     |  
     |  top(...)
     |      top(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMarginsF(sip.simplewrapper)
     |  QMarginsF()
     |  QMarginsF(float, float, float, float)
     |  QMarginsF(QMargins)
     |  QMarginsF(QMarginsF)
     |  
     |  Method resolution order:
     |      QMarginsF
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __iadd__(self, value, /)
     |      Return self+=value.
     |  
     |  __imul__(self, value, /)
     |      Return self*=value.
     |  
     |  __isub__(self, value, /)
     |      Return self-=value.
     |  
     |  __itruediv__(self, value, /)
     |      Return self/=value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __neg__(self, /)
     |      -self
     |  
     |  __pos__(self, /)
     |      +self
     |  
     |  __radd__(self, value, /)
     |      Return value+self.
     |  
     |  __rmul__(self, value, /)
     |      Return value*self.
     |  
     |  __rsub__(self, value, /)
     |      Return value-self.
     |  
     |  __rtruediv__(self, value, /)
     |      Return value/self.
     |  
     |  __sub__(self, value, /)
     |      Return self-value.
     |  
     |  __truediv__(self, value, /)
     |      Return self/value.
     |  
     |  bottom(...)
     |      bottom(self) -> float
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  left(...)
     |      left(self) -> float
     |  
     |  right(...)
     |      right(self) -> float
     |  
     |  setBottom(...)
     |      setBottom(self, float)
     |  
     |  setLeft(...)
     |      setLeft(self, float)
     |  
     |  setRight(...)
     |      setRight(self, float)
     |  
     |  setTop(...)
     |      setTop(self, float)
     |  
     |  toMargins(...)
     |      toMargins(self) -> QMargins
     |  
     |  top(...)
     |      top(self) -> float
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMessageAuthenticationCode(sip.simplewrapper)
     |  QMessageAuthenticationCode(QCryptographicHash.Algorithm, key: Union[QByteArray, bytes, bytearray] = QByteArray())
     |  
     |  Method resolution order:
     |      QMessageAuthenticationCode
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  addData(...)
     |      addData(self, str, int)
     |      addData(self, Union[QByteArray, bytes, bytearray])
     |      addData(self, QIODevice) -> bool
     |  
     |  hash(...)
     |      hash(Union[QByteArray, bytes, bytearray], Union[QByteArray, bytes, bytearray], QCryptographicHash.Algorithm) -> QByteArray
     |  
     |  reset(...)
     |      reset(self)
     |  
     |  result(...)
     |      result(self) -> QByteArray
     |  
     |  setKey(...)
     |      setKey(self, Union[QByteArray, bytes, bytearray])
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMessageLogContext(sip.simplewrapper)
     |  Method resolution order:
     |      QMessageLogContext
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  category
     |  
     |  file
     |  
     |  function
     |  
     |  line
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMessageLogger(sip.simplewrapper)
     |  QMessageLogger()
     |  QMessageLogger(str, int, str)
     |  QMessageLogger(str, int, str, str)
     |  
     |  Method resolution order:
     |      QMessageLogger
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  critical(...)
     |      critical(self, str)
     |  
     |  debug(...)
     |      debug(self, str)
     |  
     |  fatal(...)
     |      fatal(self, str)
     |  
     |  info(...)
     |      info(self, str)
     |  
     |  warning(...)
     |      warning(self, str)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMetaClassInfo(sip.simplewrapper)
     |  QMetaClassInfo()
     |  QMetaClassInfo(QMetaClassInfo)
     |  
     |  Method resolution order:
     |      QMetaClassInfo
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  name(...)
     |      name(self) -> str
     |  
     |  value(...)
     |      value(self) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMetaEnum(sip.simplewrapper)
     |  QMetaEnum()
     |  QMetaEnum(QMetaEnum)
     |  
     |  Method resolution order:
     |      QMetaEnum
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  isFlag(...)
     |      isFlag(self) -> bool
     |  
     |  isScoped(...)
     |      isScoped(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  key(...)
     |      key(self, int) -> str
     |  
     |  keyCount(...)
     |      keyCount(self) -> int
     |  
     |  keyToValue(...)
     |      keyToValue(self, str) -> Tuple[int, bool]
     |  
     |  keysToValue(...)
     |      keysToValue(self, str) -> Tuple[int, bool]
     |  
     |  name(...)
     |      name(self) -> str
     |  
     |  scope(...)
     |      scope(self) -> str
     |  
     |  value(...)
     |      value(self, int) -> int
     |  
     |  valueToKey(...)
     |      valueToKey(self, int) -> str
     |  
     |  valueToKeys(...)
     |      valueToKeys(self, int) -> QByteArray
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMetaMethod(sip.simplewrapper)
     |  QMetaMethod()
     |  QMetaMethod(QMetaMethod)
     |  
     |  Method resolution order:
     |      QMetaMethod
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  access(...)
     |      access(self) -> QMetaMethod.Access
     |  
     |  invoke(...)
     |      invoke(self, QObject, Qt.ConnectionType, QGenericReturnArgument, value0: QGenericArgument = QGenericArgument(0,0), value1: QGenericArgument = QGenericArgument(0,0), value2: QGenericArgument = QGenericArgument(0,0), value3: QGenericArgument = QGenericArgument(0,0), value4: QGenericArgument = QGenericArgument(0,0), value5: QGenericArgument = QGenericArgument(0,0), value6: QGenericArgument = QGenericArgument(0,0), value7: QGenericArgument = QGenericArgument(0,0), value8: QGenericArgument = QGenericArgument(0,0), value9: QGenericArgument = QGenericArgument(0,0)) -> object
     |      invoke(self, QObject, QGenericReturnArgument, value0: QGenericArgument = QGenericArgument(0,0), value1: QGenericArgument = QGenericArgument(0,0), value2: QGenericArgument = QGenericArgument(0,0), value3: QGenericArgument = QGenericArgument(0,0), value4: QGenericArgument = QGenericArgument(0,0), value5: QGenericArgument = QGenericArgument(0,0), value6: QGenericArgument = QGenericArgument(0,0), value7: QGenericArgument = QGenericArgument(0,0), value8: QGenericArgument = QGenericArgument(0,0), value9: QGenericArgument = QGenericArgument(0,0)) -> object
     |      invoke(self, QObject, Qt.ConnectionType, value0: QGenericArgument = QGenericArgument(0,0), value1: QGenericArgument = QGenericArgument(0,0), value2: QGenericArgument = QGenericArgument(0,0), value3: QGenericArgument = QGenericArgument(0,0), value4: QGenericArgument = QGenericArgument(0,0), value5: QGenericArgument = QGenericArgument(0,0), value6: QGenericArgument = QGenericArgument(0,0), value7: QGenericArgument = QGenericArgument(0,0), value8: QGenericArgument = QGenericArgument(0,0), value9: QGenericArgument = QGenericArgument(0,0)) -> object
     |      invoke(self, QObject, value0: QGenericArgument = QGenericArgument(0,0), value1: QGenericArgument = QGenericArgument(0,0), value2: QGenericArgument = QGenericArgument(0,0), value3: QGenericArgument = QGenericArgument(0,0), value4: QGenericArgument = QGenericArgument(0,0), value5: QGenericArgument = QGenericArgument(0,0), value6: QGenericArgument = QGenericArgument(0,0), value7: QGenericArgument = QGenericArgument(0,0), value8: QGenericArgument = QGenericArgument(0,0), value9: QGenericArgument = QGenericArgument(0,0)) -> object
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  methodIndex(...)
     |      methodIndex(self) -> int
     |  
     |  methodSignature(...)
     |      methodSignature(self) -> QByteArray
     |  
     |  methodType(...)
     |      methodType(self) -> QMetaMethod.MethodType
     |  
     |  name(...)
     |      name(self) -> QByteArray
     |  
     |  parameterCount(...)
     |      parameterCount(self) -> int
     |  
     |  parameterNames(...)
     |      parameterNames(self) -> List[QByteArray]
     |  
     |  parameterType(...)
     |      parameterType(self, int) -> int
     |  
     |  parameterTypes(...)
     |      parameterTypes(self) -> List[QByteArray]
     |  
     |  returnType(...)
     |      returnType(self) -> int
     |  
     |  tag(...)
     |      tag(self) -> str
     |  
     |  typeName(...)
     |      typeName(self) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Access = <class 'PyQt5.QtCore.QMetaMethod.Access'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Constructor = 3
     |  
     |  Method = 0
     |  
     |  MethodType = <class 'PyQt5.QtCore.QMetaMethod.MethodType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Private = 0
     |  
     |  Protected = 1
     |  
     |  Public = 2
     |  
     |  Signal = 1
     |  
     |  Slot = 2
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMetaObject(sip.simplewrapper)
     |  QMetaObject()
     |  QMetaObject(QMetaObject)
     |  
     |  Method resolution order:
     |      QMetaObject
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  checkConnectArgs(...)
     |      checkConnectArgs(str, str) -> bool
     |      checkConnectArgs(QMetaMethod, QMetaMethod) -> bool
     |  
     |  classInfo(...)
     |      classInfo(self, int) -> QMetaClassInfo
     |  
     |  classInfoCount(...)
     |      classInfoCount(self) -> int
     |  
     |  classInfoOffset(...)
     |      classInfoOffset(self) -> int
     |  
     |  className(...)
     |      className(self) -> str
     |  
     |  connectSlotsByName(...)
     |      connectSlotsByName(QObject)
     |  
     |  constructor(...)
     |      constructor(self, int) -> QMetaMethod
     |  
     |  constructorCount(...)
     |      constructorCount(self) -> int
     |  
     |  enumerator(...)
     |      enumerator(self, int) -> QMetaEnum
     |  
     |  enumeratorCount(...)
     |      enumeratorCount(self) -> int
     |  
     |  enumeratorOffset(...)
     |      enumeratorOffset(self) -> int
     |  
     |  indexOfClassInfo(...)
     |      indexOfClassInfo(self, str) -> int
     |  
     |  indexOfConstructor(...)
     |      indexOfConstructor(self, str) -> int
     |  
     |  indexOfEnumerator(...)
     |      indexOfEnumerator(self, str) -> int
     |  
     |  indexOfMethod(...)
     |      indexOfMethod(self, str) -> int
     |  
     |  indexOfProperty(...)
     |      indexOfProperty(self, str) -> int
     |  
     |  indexOfSignal(...)
     |      indexOfSignal(self, str) -> int
     |  
     |  indexOfSlot(...)
     |      indexOfSlot(self, str) -> int
     |  
     |  inherits(...)
     |      inherits(self, QMetaObject) -> bool
     |  
     |  invokeMethod(...)
     |      invokeMethod(QObject, str, Qt.ConnectionType, QGenericReturnArgument, value0: QGenericArgument = QGenericArgument(0,0), value1: QGenericArgument = QGenericArgument(0,0), value2: QGenericArgument = QGenericArgument(0,0), value3: QGenericArgument = QGenericArgument(0,0), value4: QGenericArgument = QGenericArgument(0,0), value5: QGenericArgument = QGenericArgument(0,0), value6: QGenericArgument = QGenericArgument(0,0), value7: QGenericArgument = QGenericArgument(0,0), value8: QGenericArgument = QGenericArgument(0,0), value9: QGenericArgument = QGenericArgument(0,0)) -> object
     |      invokeMethod(QObject, str, QGenericReturnArgument, value0: QGenericArgument = QGenericArgument(0,0), value1: QGenericArgument = QGenericArgument(0,0), value2: QGenericArgument = QGenericArgument(0,0), value3: QGenericArgument = QGenericArgument(0,0), value4: QGenericArgument = QGenericArgument(0,0), value5: QGenericArgument = QGenericArgument(0,0), value6: QGenericArgument = QGenericArgument(0,0), value7: QGenericArgument = QGenericArgument(0,0), value8: QGenericArgument = QGenericArgument(0,0), value9: QGenericArgument = QGenericArgument(0,0)) -> object
     |      invokeMethod(QObject, str, Qt.ConnectionType, value0: QGenericArgument = QGenericArgument(0,0), value1: QGenericArgument = QGenericArgument(0,0), value2: QGenericArgument = QGenericArgument(0,0), value3: QGenericArgument = QGenericArgument(0,0), value4: QGenericArgument = QGenericArgument(0,0), value5: QGenericArgument = QGenericArgument(0,0), value6: QGenericArgument = QGenericArgument(0,0), value7: QGenericArgument = QGenericArgument(0,0), value8: QGenericArgument = QGenericArgument(0,0), value9: QGenericArgument = QGenericArgument(0,0)) -> object
     |      invokeMethod(QObject, str, value0: QGenericArgument = QGenericArgument(0,0), value1: QGenericArgument = QGenericArgument(0,0), value2: QGenericArgument = QGenericArgument(0,0), value3: QGenericArgument = QGenericArgument(0,0), value4: QGenericArgument = QGenericArgument(0,0), value5: QGenericArgument = QGenericArgument(0,0), value6: QGenericArgument = QGenericArgument(0,0), value7: QGenericArgument = QGenericArgument(0,0), value8: QGenericArgument = QGenericArgument(0,0), value9: QGenericArgument = QGenericArgument(0,0)) -> object
     |  
     |  method(...)
     |      method(self, int) -> QMetaMethod
     |  
     |  methodCount(...)
     |      methodCount(self) -> int
     |  
     |  methodOffset(...)
     |      methodOffset(self) -> int
     |  
     |  normalizedSignature(...)
     |      normalizedSignature(str) -> QByteArray
     |  
     |  normalizedType(...)
     |      normalizedType(str) -> QByteArray
     |  
     |  property(...)
     |      property(self, int) -> QMetaProperty
     |  
     |  propertyCount(...)
     |      propertyCount(self) -> int
     |  
     |  propertyOffset(...)
     |      propertyOffset(self) -> int
     |  
     |  superClass(...)
     |      superClass(self) -> QMetaObject
     |  
     |  userProperty(...)
     |      userProperty(self) -> QMetaProperty
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Connection = <class 'PyQt5.QtCore.QMetaObject.Connection'>
     |      QMetaObject.Connection()
     |      QMetaObject.Connection(QMetaObject.Connection)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMetaProperty(sip.simplewrapper)
     |  QMetaProperty()
     |  QMetaProperty(QMetaProperty)
     |  
     |  Method resolution order:
     |      QMetaProperty
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  enumerator(...)
     |      enumerator(self) -> QMetaEnum
     |  
     |  hasNotifySignal(...)
     |      hasNotifySignal(self) -> bool
     |  
     |  hasStdCppSet(...)
     |      hasStdCppSet(self) -> bool
     |  
     |  isConstant(...)
     |      isConstant(self) -> bool
     |  
     |  isDesignable(...)
     |      isDesignable(self, object: QObject = None) -> bool
     |  
     |  isEnumType(...)
     |      isEnumType(self) -> bool
     |  
     |  isFinal(...)
     |      isFinal(self) -> bool
     |  
     |  isFlagType(...)
     |      isFlagType(self) -> bool
     |  
     |  isReadable(...)
     |      isReadable(self) -> bool
     |  
     |  isResettable(...)
     |      isResettable(self) -> bool
     |  
     |  isScriptable(...)
     |      isScriptable(self, object: QObject = None) -> bool
     |  
     |  isStored(...)
     |      isStored(self, object: QObject = None) -> bool
     |  
     |  isUser(...)
     |      isUser(self, object: QObject = None) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  isWritable(...)
     |      isWritable(self) -> bool
     |  
     |  name(...)
     |      name(self) -> str
     |  
     |  notifySignal(...)
     |      notifySignal(self) -> QMetaMethod
     |  
     |  notifySignalIndex(...)
     |      notifySignalIndex(self) -> int
     |  
     |  propertyIndex(...)
     |      propertyIndex(self) -> int
     |  
     |  read(...)
     |      read(self, QObject) -> Any
     |  
     |  reset(...)
     |      reset(self, QObject) -> bool
     |  
     |  type(...)
     |      type(self) -> QVariant.Type
     |  
     |  typeName(...)
     |      typeName(self) -> str
     |  
     |  userType(...)
     |      userType(self) -> int
     |  
     |  write(...)
     |      write(self, QObject, Any) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMetaType(sip.simplewrapper)
     |  QMetaType(int)
     |  
     |  Method resolution order:
     |      QMetaType
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  flags(...)
     |      flags(self) -> QMetaType.TypeFlags
     |  
     |  isRegistered(...)
     |      isRegistered(int) -> bool
     |      isRegistered(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  metaObjectForType(...)
     |      metaObjectForType(int) -> QMetaObject
     |  
     |  type(...)
     |      type(str) -> int
     |  
     |  typeFlags(...)
     |      typeFlags(int) -> QMetaType.TypeFlags
     |  
     |  typeName(...)
     |      typeName(int) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Bool = 1
     |  
     |  Char = 34
     |  
     |  Double = 6
     |  
     |  FirstGuiType = 64
     |  
     |  Float = 38
     |  
     |  Int = 2
     |  
     |  IsEnumeration = 16
     |  
     |  LastCoreType = 51
     |  
     |  Long = 32
     |  
     |  LongLong = 4
     |  
     |  MovableType = 4
     |  
     |  NeedsConstruction = 1
     |  
     |  NeedsDestruction = 2
     |  
     |  PointerToQObject = 8
     |  
     |  QBitArray = 13
     |  
     |  QBitmap = 73
     |  
     |  QBrush = 66
     |  
     |  QByteArray = 12
     |  
     |  QByteArrayList = 49
     |  
     |  QChar = 7
     |  
     |  QColor = 67
     |  
     |  QCursor = 74
     |  
     |  QDate = 14
     |  
     |  QDateTime = 16
     |  
     |  QEasingCurve = 29
     |  
     |  QFont = 64
     |  
     |  QIcon = 69
     |  
     |  QImage = 70
     |  
     |  QJsonArray = 47
     |  
     |  QJsonDocument = 48
     |  
     |  QJsonObject = 46
     |  
     |  QJsonValue = 45
     |  
     |  QKeySequence = 75
     |  
     |  QLine = 23
     |  
     |  QLineF = 24
     |  
     |  QLocale = 18
     |  
     |  QMatrix = 79
     |  
     |  QMatrix4x4 = 81
     |  
     |  QModelIndex = 42
     |  
     |  QObjectStar = 39
     |  
     |  QPalette = 68
     |  
     |  QPen = 76
     |  
     |  QPersistentModelIndex = 50
     |  
     |  QPixmap = 65
     |  
     |  QPoint = 25
     |  
     |  QPointF = 26
     |  
     |  QPolygon = 71
     |  
     |  QPolygonF = 86
     |  
     |  QQuaternion = 85
     |  
     |  QRect = 19
     |  
     |  QRectF = 20
     |  
     |  QRegExp = 27
     |  
     |  QRegion = 72
     |  
     |  QRegularExpression = 44
     |  
     |  QSize = 21
     |  
     |  QSizeF = 22
     |  
     |  QSizePolicy = 121
     |  
     |  QString = 10
     |  
     |  QStringList = 11
     |  
     |  QTextFormat = 78
     |  
     |  QTextLength = 77
     |  
     |  QTime = 15
     |  
     |  QTransform = 80
     |  
     |  QUrl = 17
     |  
     |  QUuid = 30
     |  
     |  QVariant = 41
     |  
     |  QVariantHash = 28
     |  
     |  QVariantList = 9
     |  
     |  QVariantMap = 8
     |  
     |  QVector2D = 82
     |  
     |  QVector3D = 83
     |  
     |  QVector4D = 84
     |  
     |  SChar = 40
     |  
     |  Short = 33
     |  
     |  Type = <class 'PyQt5.QtCore.QMetaType.Type'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TypeFlag = <class 'PyQt5.QtCore.QMetaType.TypeFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TypeFlags = <class 'PyQt5.QtCore.QMetaType.TypeFlags'>
     |      QMetaType.TypeFlags()
     |      QMetaType.TypeFlags(Union[QMetaType.TypeFlags, QMetaType.TypeFlag])
     |      QMetaType.TypeFlags(QMetaType.TypeFlags)
     |  
     |  UChar = 37
     |  
     |  UInt = 3
     |  
     |  ULong = 35
     |  
     |  ULongLong = 5
     |  
     |  UShort = 36
     |  
     |  UnknownType = 0
     |  
     |  User = 1024
     |  
     |  Void = 43
     |  
     |  VoidStar = 31
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMimeData(QObject)
     |  QMimeData()
     |  
     |  Method resolution order:
     |      QMimeData
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  colorData(...)
     |      colorData(self) -> Any
     |  
     |  data(...)
     |      data(self, str) -> QByteArray
     |  
     |  formats(...)
     |      formats(self) -> List[str]
     |  
     |  hasColor(...)
     |      hasColor(self) -> bool
     |  
     |  hasFormat(...)
     |      hasFormat(self, str) -> bool
     |  
     |  hasHtml(...)
     |      hasHtml(self) -> bool
     |  
     |  hasImage(...)
     |      hasImage(self) -> bool
     |  
     |  hasText(...)
     |      hasText(self) -> bool
     |  
     |  hasUrls(...)
     |      hasUrls(self) -> bool
     |  
     |  html(...)
     |      html(self) -> str
     |  
     |  imageData(...)
     |      imageData(self) -> Any
     |  
     |  removeFormat(...)
     |      removeFormat(self, str)
     |  
     |  retrieveData(...)
     |      retrieveData(self, str, QVariant.Type) -> Any
     |  
     |  setColorData(...)
     |      setColorData(self, Any)
     |  
     |  setData(...)
     |      setData(self, str, Union[QByteArray, bytes, bytearray])
     |  
     |  setHtml(...)
     |      setHtml(self, str)
     |  
     |  setImageData(...)
     |      setImageData(self, Any)
     |  
     |  setText(...)
     |      setText(self, str)
     |  
     |  setUrls(...)
     |      setUrls(self, Iterable[QUrl])
     |  
     |  text(...)
     |      text(self) -> str
     |  
     |  urls(...)
     |      urls(self) -> List[QUrl]
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMimeDatabase(sip.simplewrapper)
     |  QMimeDatabase()
     |  
     |  Method resolution order:
     |      QMimeDatabase
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  allMimeTypes(...)
     |      allMimeTypes(self) -> List[QMimeType]
     |  
     |  mimeTypeForData(...)
     |      mimeTypeForData(self, Union[QByteArray, bytes, bytearray]) -> QMimeType
     |      mimeTypeForData(self, QIODevice) -> QMimeType
     |  
     |  mimeTypeForFile(...)
     |      mimeTypeForFile(self, str, mode: QMimeDatabase.MatchMode = QMimeDatabase.MatchDefault) -> QMimeType
     |      mimeTypeForFile(self, QFileInfo, mode: QMimeDatabase.MatchMode = QMimeDatabase.MatchDefault) -> QMimeType
     |  
     |  mimeTypeForFileNameAndData(...)
     |      mimeTypeForFileNameAndData(self, str, QIODevice) -> QMimeType
     |      mimeTypeForFileNameAndData(self, str, Union[QByteArray, bytes, bytearray]) -> QMimeType
     |  
     |  mimeTypeForName(...)
     |      mimeTypeForName(self, str) -> QMimeType
     |  
     |  mimeTypeForUrl(...)
     |      mimeTypeForUrl(self, QUrl) -> QMimeType
     |  
     |  mimeTypesForFileName(...)
     |      mimeTypesForFileName(self, str) -> List[QMimeType]
     |  
     |  suffixForFileName(...)
     |      suffixForFileName(self, str) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  MatchContent = 2
     |  
     |  MatchDefault = 0
     |  
     |  MatchExtension = 1
     |  
     |  MatchMode = <class 'PyQt5.QtCore.QMimeDatabase.MatchMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMimeType(sip.simplewrapper)
     |  QMimeType()
     |  QMimeType(QMimeType)
     |  
     |  Method resolution order:
     |      QMimeType
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  aliases(...)
     |      aliases(self) -> List[str]
     |  
     |  allAncestors(...)
     |      allAncestors(self) -> List[str]
     |  
     |  comment(...)
     |      comment(self) -> str
     |  
     |  filterString(...)
     |      filterString(self) -> str
     |  
     |  genericIconName(...)
     |      genericIconName(self) -> str
     |  
     |  globPatterns(...)
     |      globPatterns(self) -> List[str]
     |  
     |  iconName(...)
     |      iconName(self) -> str
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  isDefault(...)
     |      isDefault(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  name(...)
     |      name(self) -> str
     |  
     |  parentMimeTypes(...)
     |      parentMimeTypes(self) -> List[str]
     |  
     |  preferredSuffix(...)
     |      preferredSuffix(self) -> str
     |  
     |  suffixes(...)
     |      suffixes(self) -> List[str]
     |  
     |  swap(...)
     |      swap(self, QMimeType)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QModelIndex(sip.simplewrapper)
     |  QModelIndex()
     |  QModelIndex(QModelIndex)
     |  QModelIndex(QPersistentModelIndex)
     |  
     |  Method resolution order:
     |      QModelIndex
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  child(...)
     |      child(self, int, int) -> QModelIndex
     |  
     |  column(...)
     |      column(self) -> int
     |  
     |  data(...)
     |      data(self, role: int = Qt.DisplayRole) -> Any
     |  
     |  flags(...)
     |      flags(self) -> Qt.ItemFlags
     |  
     |  internalId(...)
     |      internalId(self) -> int
     |  
     |  internalPointer(...)
     |      internalPointer(self) -> object
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  model(...)
     |      model(self) -> QAbstractItemModel
     |  
     |  parent(...)
     |      parent(self) -> QModelIndex
     |  
     |  row(...)
     |      row(self) -> int
     |  
     |  sibling(...)
     |      sibling(self, int, int) -> QModelIndex
     |  
     |  siblingAtColumn(...)
     |      siblingAtColumn(self, int) -> QModelIndex
     |  
     |  siblingAtRow(...)
     |      siblingAtRow(self, int) -> QModelIndex
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMutex(sip.simplewrapper)
     |  QMutex(mode: QMutex.RecursionMode = QMutex.NonRecursive)
     |  
     |  Method resolution order:
     |      QMutex
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  isRecursive(...)
     |      isRecursive(self) -> bool
     |  
     |  lock(...)
     |      lock(self)
     |  
     |  tryLock(...)
     |      tryLock(self, timeout: int = 0) -> bool
     |  
     |  unlock(...)
     |      unlock(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  NonRecursive = 0
     |  
     |  RecursionMode = <class 'PyQt5.QtCore.QMutex.RecursionMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Recursive = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QMutexLocker(sip.simplewrapper)
     |  QMutexLocker(QMutex)
     |  
     |  Method resolution order:
     |      QMutexLocker
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __enter__(...)
     |      __enter__(self) -> object
     |  
     |  __exit__(...)
     |      __exit__(self, object, object, object)
     |  
     |  mutex(...)
     |      mutex(self) -> QMutex
     |  
     |  relock(...)
     |      relock(self)
     |  
     |  unlock(...)
     |      unlock(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QObject(sip.wrapper)
     |  QObject(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QObjectCleanupHandler(QObject)
     |  QObjectCleanupHandler()
     |  
     |  Method resolution order:
     |      QObjectCleanupHandler
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  add(...)
     |      add(self, QObject) -> QObject
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  remove(...)
     |      remove(self, QObject)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QOperatingSystemVersion(sip.simplewrapper)
     |  QOperatingSystemVersion(QOperatingSystemVersion.OSType, int, vminor: int = -1, vmicro: int = -1)
     |  QOperatingSystemVersion(QOperatingSystemVersion)
     |  
     |  Method resolution order:
     |      QOperatingSystemVersion
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  current(...)
     |      current() -> QOperatingSystemVersion
     |  
     |  currentType(...)
     |      currentType() -> QOperatingSystemVersion.OSType
     |  
     |  majorVersion(...)
     |      majorVersion(self) -> int
     |  
     |  microVersion(...)
     |      microVersion(self) -> int
     |  
     |  minorVersion(...)
     |      minorVersion(self) -> int
     |  
     |  name(...)
     |      name(self) -> str
     |  
     |  segmentCount(...)
     |      segmentCount(self) -> int
     |  
     |  type(...)
     |      type(self) -> QOperatingSystemVersion.OSType
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Android = 6
     |  
     |  AndroidJellyBean = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  AndroidJellyBean_MR1 = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  AndroidJellyBean_MR2 = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  AndroidKitKat = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  AndroidLollipop = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  AndroidLollipop_MR1 = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  AndroidMarshmallow = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  AndroidNougat = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  AndroidNougat_MR1 = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  AndroidOreo = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  IOS = 3
     |  
     |  MacOS = 2
     |  
     |  MacOSHighSierra = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  MacOSMojave = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  MacOSSierra = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  OSType = <class 'PyQt5.QtCore.QOperatingSystemVersion.OSType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  OSXElCapitan = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  OSXMavericks = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  OSXYosemite = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  TvOS = 4
     |  
     |  Unknown = 0
     |  
     |  WatchOS = 5
     |  
     |  Windows = 1
     |  
     |  Windows10 = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  Windows7 = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  Windows8 = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  Windows8_1 = <PyQt5.QtCore.QOperatingSystemVersion object>
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QParallelAnimationGroup(QAnimationGroup)
     |  QParallelAnimationGroup(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QParallelAnimationGroup
     |      QAnimationGroup
     |      QAbstractAnimation
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  duration(...)
     |      duration(self) -> int
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  updateCurrentTime(...)
     |      updateCurrentTime(self, int)
     |  
     |  updateDirection(...)
     |      updateDirection(self, QAbstractAnimation.Direction)
     |  
     |  updateState(...)
     |      updateState(self, QAbstractAnimation.State, QAbstractAnimation.State)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAnimationGroup:
     |  
     |  addAnimation(...)
     |      addAnimation(self, QAbstractAnimation)
     |  
     |  animationAt(...)
     |      animationAt(self, int) -> QAbstractAnimation
     |  
     |  animationCount(...)
     |      animationCount(self) -> int
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  indexOfAnimation(...)
     |      indexOfAnimation(self, QAbstractAnimation) -> int
     |  
     |  insertAnimation(...)
     |      insertAnimation(self, int, QAbstractAnimation)
     |  
     |  removeAnimation(...)
     |      removeAnimation(self, QAbstractAnimation)
     |  
     |  takeAnimation(...)
     |      takeAnimation(self, int) -> QAbstractAnimation
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractAnimation:
     |  
     |  currentLoop(...)
     |      currentLoop(self) -> int
     |  
     |  currentLoopChanged = <unbound PYQT_SIGNAL currentLoopChanged(int)>
     |  currentLoopTime(...)
     |      currentLoopTime(self) -> int
     |  
     |  currentTime(...)
     |      currentTime(self) -> int
     |  
     |  direction(...)
     |      direction(self) -> QAbstractAnimation.Direction
     |  
     |  directionChanged = <unbound PYQT_SIGNAL directionChanged(QAbstractAnimation::Direction)>
     |  finished = <unbound PYQT_SIGNAL finished()>
     |  group(...)
     |      group(self) -> QAnimationGroup
     |  
     |  loopCount(...)
     |      loopCount(self) -> int
     |  
     |  pause(...)
     |      pause(self)
     |  
     |  resume(...)
     |      resume(self)
     |  
     |  setCurrentTime(...)
     |      setCurrentTime(self, int)
     |  
     |  setDirection(...)
     |      setDirection(self, QAbstractAnimation.Direction)
     |  
     |  setLoopCount(...)
     |      setLoopCount(self, int)
     |  
     |  setPaused(...)
     |      setPaused(self, bool)
     |  
     |  start(...)
     |      start(self, policy: QAbstractAnimation.DeletionPolicy = QAbstractAnimation.KeepWhenStopped)
     |  
     |  state(...)
     |      state(self) -> QAbstractAnimation.State
     |  
     |  stateChanged = <unbound PYQT_SIGNAL stateChanged(QAbstractAnimation::State,QAbstractAnimation::State)>
     |  stop(...)
     |      stop(self)
     |  
     |  totalDuration(...)
     |      totalDuration(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QAbstractAnimation:
     |  
     |  Backward = 1
     |  
     |  DeleteWhenStopped = 1
     |  
     |  DeletionPolicy = <class 'PyQt5.QtCore.QAbstractAnimation.DeletionPolic...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Direction = <class 'PyQt5.QtCore.QAbstractAnimation.Direction'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Forward = 0
     |  
     |  KeepWhenStopped = 0
     |  
     |  Paused = 1
     |  
     |  Running = 2
     |  
     |  State = <class 'PyQt5.QtCore.QAbstractAnimation.State'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Stopped = 0
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QPauseAnimation(QAbstractAnimation)
     |  QPauseAnimation(parent: QObject = None)
     |  QPauseAnimation(int, parent: QObject = None)
     |  
     |  Method resolution order:
     |      QPauseAnimation
     |      QAbstractAnimation
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  duration(...)
     |      duration(self) -> int
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  setDuration(...)
     |      setDuration(self, int)
     |  
     |  updateCurrentTime(...)
     |      updateCurrentTime(self, int)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractAnimation:
     |  
     |  currentLoop(...)
     |      currentLoop(self) -> int
     |  
     |  currentLoopChanged = <unbound PYQT_SIGNAL currentLoopChanged(int)>
     |  currentLoopTime(...)
     |      currentLoopTime(self) -> int
     |  
     |  currentTime(...)
     |      currentTime(self) -> int
     |  
     |  direction(...)
     |      direction(self) -> QAbstractAnimation.Direction
     |  
     |  directionChanged = <unbound PYQT_SIGNAL directionChanged(QAbstractAnimation::Direction)>
     |  finished = <unbound PYQT_SIGNAL finished()>
     |  group(...)
     |      group(self) -> QAnimationGroup
     |  
     |  loopCount(...)
     |      loopCount(self) -> int
     |  
     |  pause(...)
     |      pause(self)
     |  
     |  resume(...)
     |      resume(self)
     |  
     |  setCurrentTime(...)
     |      setCurrentTime(self, int)
     |  
     |  setDirection(...)
     |      setDirection(self, QAbstractAnimation.Direction)
     |  
     |  setLoopCount(...)
     |      setLoopCount(self, int)
     |  
     |  setPaused(...)
     |      setPaused(self, bool)
     |  
     |  start(...)
     |      start(self, policy: QAbstractAnimation.DeletionPolicy = QAbstractAnimation.KeepWhenStopped)
     |  
     |  state(...)
     |      state(self) -> QAbstractAnimation.State
     |  
     |  stateChanged = <unbound PYQT_SIGNAL stateChanged(QAbstractAnimation::State,QAbstractAnimation::State)>
     |  stop(...)
     |      stop(self)
     |  
     |  totalDuration(...)
     |      totalDuration(self) -> int
     |  
     |  updateDirection(...)
     |      updateDirection(self, QAbstractAnimation.Direction)
     |  
     |  updateState(...)
     |      updateState(self, QAbstractAnimation.State, QAbstractAnimation.State)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QAbstractAnimation:
     |  
     |  Backward = 1
     |  
     |  DeleteWhenStopped = 1
     |  
     |  DeletionPolicy = <class 'PyQt5.QtCore.QAbstractAnimation.DeletionPolic...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Direction = <class 'PyQt5.QtCore.QAbstractAnimation.Direction'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Forward = 0
     |  
     |  KeepWhenStopped = 0
     |  
     |  Paused = 1
     |  
     |  Running = 2
     |  
     |  State = <class 'PyQt5.QtCore.QAbstractAnimation.State'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Stopped = 0
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QPersistentModelIndex(sip.simplewrapper)
     |  QPersistentModelIndex()
     |  QPersistentModelIndex(QModelIndex)
     |  QPersistentModelIndex(QPersistentModelIndex)
     |  
     |  Method resolution order:
     |      QPersistentModelIndex
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  child(...)
     |      child(self, int, int) -> QModelIndex
     |  
     |  column(...)
     |      column(self) -> int
     |  
     |  data(...)
     |      data(self, role: int = Qt.DisplayRole) -> Any
     |  
     |  flags(...)
     |      flags(self) -> Qt.ItemFlags
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  model(...)
     |      model(self) -> QAbstractItemModel
     |  
     |  parent(...)
     |      parent(self) -> QModelIndex
     |  
     |  row(...)
     |      row(self) -> int
     |  
     |  sibling(...)
     |      sibling(self, int, int) -> QModelIndex
     |  
     |  swap(...)
     |      swap(self, QPersistentModelIndex)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QPluginLoader(QObject)
     |  QPluginLoader(parent: QObject = None)
     |  QPluginLoader(str, parent: QObject = None)
     |  
     |  Method resolution order:
     |      QPluginLoader
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  fileName(...)
     |      fileName(self) -> str
     |  
     |  instance(...)
     |      instance(self) -> QObject
     |  
     |  isLoaded(...)
     |      isLoaded(self) -> bool
     |  
     |  load(...)
     |      load(self) -> bool
     |  
     |  loadHints(...)
     |      loadHints(self) -> QLibrary.LoadHints
     |  
     |  setFileName(...)
     |      setFileName(self, str)
     |  
     |  setLoadHints(...)
     |      setLoadHints(self, Union[QLibrary.LoadHints, QLibrary.LoadHint])
     |  
     |  staticInstances(...)
     |      staticInstances() -> List[QObject]
     |  
     |  unload(...)
     |      unload(self) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QPoint(sip.simplewrapper)
     |  QPoint()
     |  QPoint(int, int)
     |  QPoint(QPoint)
     |  
     |  Method resolution order:
     |      QPoint
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __bool__(self, /)
     |      self != 0
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __iadd__(self, value, /)
     |      Return self+=value.
     |  
     |  __imul__(self, value, /)
     |      Return self*=value.
     |  
     |  __isub__(self, value, /)
     |      Return self-=value.
     |  
     |  __itruediv__(self, value, /)
     |      Return self/=value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __neg__(self, /)
     |      -self
     |  
     |  __pos__(self, /)
     |      +self
     |  
     |  __radd__(self, value, /)
     |      Return value+self.
     |  
     |  __reduce__ = _pickle_type(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __rmul__(self, value, /)
     |      Return value*self.
     |  
     |  __rsub__(self, value, /)
     |      Return value-self.
     |  
     |  __rtruediv__(self, value, /)
     |      Return value/self.
     |  
     |  __sub__(self, value, /)
     |      Return self-value.
     |  
     |  __truediv__(self, value, /)
     |      Return self/value.
     |  
     |  dotProduct(...)
     |      dotProduct(QPoint, QPoint) -> int
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  manhattanLength(...)
     |      manhattanLength(self) -> int
     |  
     |  setX(...)
     |      setX(self, int)
     |  
     |  setY(...)
     |      setY(self, int)
     |  
     |  x(...)
     |      x(self) -> int
     |  
     |  y(...)
     |      y(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QPointF(sip.simplewrapper)
     |  QPointF()
     |  QPointF(float, float)
     |  QPointF(QPoint)
     |  QPointF(QPointF)
     |  
     |  Method resolution order:
     |      QPointF
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __bool__(self, /)
     |      self != 0
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __iadd__(self, value, /)
     |      Return self+=value.
     |  
     |  __imul__(self, value, /)
     |      Return self*=value.
     |  
     |  __isub__(self, value, /)
     |      Return self-=value.
     |  
     |  __itruediv__(self, value, /)
     |      Return self/=value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __neg__(self, /)
     |      -self
     |  
     |  __pos__(self, /)
     |      +self
     |  
     |  __radd__(self, value, /)
     |      Return value+self.
     |  
     |  __reduce__ = _pickle_type(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __rmul__(self, value, /)
     |      Return value*self.
     |  
     |  __rsub__(self, value, /)
     |      Return value-self.
     |  
     |  __rtruediv__(self, value, /)
     |      Return value/self.
     |  
     |  __sub__(self, value, /)
     |      Return self-value.
     |  
     |  __truediv__(self, value, /)
     |      Return self/value.
     |  
     |  dotProduct(...)
     |      dotProduct(Union[QPointF, QPoint], Union[QPointF, QPoint]) -> float
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  manhattanLength(...)
     |      manhattanLength(self) -> float
     |  
     |  setX(...)
     |      setX(self, float)
     |  
     |  setY(...)
     |      setY(self, float)
     |  
     |  toPoint(...)
     |      toPoint(self) -> QPoint
     |  
     |  x(...)
     |      x(self) -> float
     |  
     |  y(...)
     |      y(self) -> float
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QProcess(QIODevice)
     |  QProcess(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QProcess
     |      QIODevice
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  arguments(...)
     |      arguments(self) -> List[str]
     |  
     |  atEnd(...)
     |      atEnd(self) -> bool
     |  
     |  bytesAvailable(...)
     |      bytesAvailable(self) -> int
     |  
     |  bytesToWrite(...)
     |      bytesToWrite(self) -> int
     |  
     |  canReadLine(...)
     |      canReadLine(self) -> bool
     |  
     |  close(...)
     |      close(self)
     |  
     |  closeReadChannel(...)
     |      closeReadChannel(self, QProcess.ProcessChannel)
     |  
     |  closeWriteChannel(...)
     |      closeWriteChannel(self)
     |  
     |  error = <unbound PYQT_SIGNAL error(QProcess::ProcessError)>
     |  errorOccurred = <unbound PYQT_SIGNAL errorOccurred(QProcess::ProcessError)>
     |  execute(...)
     |      execute(str, Iterable[str]) -> int
     |      execute(str) -> int
     |  
     |  exitCode(...)
     |      exitCode(self) -> int
     |  
     |  exitStatus(...)
     |      exitStatus(self) -> QProcess.ExitStatus
     |  
     |  finished = <unbound PYQT_SIGNAL finished(int,QProcess::ExitStatus)>
     |  inputChannelMode(...)
     |      inputChannelMode(self) -> QProcess.InputChannelMode
     |  
     |  isSequential(...)
     |      isSequential(self) -> bool
     |  
     |  kill(...)
     |      kill(self)
     |  
     |  nullDevice(...)
     |      nullDevice() -> str
     |  
     |  open(...)
     |      open(self, mode: Union[QIODevice.OpenMode, QIODevice.OpenModeFlag] = QIODevice.ReadWrite) -> bool
     |  
     |  pid(...)
     |      pid(self) -> int
     |  
     |  processChannelMode(...)
     |      processChannelMode(self) -> QProcess.ProcessChannelMode
     |  
     |  processEnvironment(...)
     |      processEnvironment(self) -> QProcessEnvironment
     |  
     |  processId(...)
     |      processId(self) -> int
     |  
     |  program(...)
     |      program(self) -> str
     |  
     |  readAllStandardError(...)
     |      readAllStandardError(self) -> QByteArray
     |  
     |  readAllStandardOutput(...)
     |      readAllStandardOutput(self) -> QByteArray
     |  
     |  readChannel(...)
     |      readChannel(self) -> QProcess.ProcessChannel
     |  
     |  readData(...)
     |      readData(self, int) -> bytes
     |  
     |  readyReadStandardError = <unbound PYQT_SIGNAL readyReadStandardError()>
     |  readyReadStandardOutput = <unbound PYQT_SIGNAL readyReadStandardOutput()>
     |  setArguments(...)
     |      setArguments(self, Iterable[str])
     |  
     |  setInputChannelMode(...)
     |      setInputChannelMode(self, QProcess.InputChannelMode)
     |  
     |  setProcessChannelMode(...)
     |      setProcessChannelMode(self, QProcess.ProcessChannelMode)
     |  
     |  setProcessEnvironment(...)
     |      setProcessEnvironment(self, QProcessEnvironment)
     |  
     |  setProcessState(...)
     |      setProcessState(self, QProcess.ProcessState)
     |  
     |  setProgram(...)
     |      setProgram(self, str)
     |  
     |  setReadChannel(...)
     |      setReadChannel(self, QProcess.ProcessChannel)
     |  
     |  setStandardErrorFile(...)
     |      setStandardErrorFile(self, str, mode: Union[QIODevice.OpenMode, QIODevice.OpenModeFlag] = QIODevice.Truncate)
     |  
     |  setStandardInputFile(...)
     |      setStandardInputFile(self, str)
     |  
     |  setStandardOutputFile(...)
     |      setStandardOutputFile(self, str, mode: Union[QIODevice.OpenMode, QIODevice.OpenModeFlag] = QIODevice.Truncate)
     |  
     |  setStandardOutputProcess(...)
     |      setStandardOutputProcess(self, QProcess)
     |  
     |  setWorkingDirectory(...)
     |      setWorkingDirectory(self, str)
     |  
     |  setupChildProcess(...)
     |      setupChildProcess(self)
     |  
     |  start(...)
     |      start(self, str, Iterable[str], mode: Union[QIODevice.OpenMode, QIODevice.OpenModeFlag] = QIODevice.ReadWrite)
     |      start(self, str, mode: Union[QIODevice.OpenMode, QIODevice.OpenModeFlag] = QIODevice.ReadWrite)
     |      start(self, mode: Union[QIODevice.OpenMode, QIODevice.OpenModeFlag] = QIODevice.ReadWrite)
     |  
     |  startDetached(...)
     |      startDetached(str, Iterable[str], str) -> Tuple[bool, int]
     |      startDetached(str, Iterable[str]) -> bool
     |      startDetached(str) -> bool
     |      startDetached(self) -> Tuple[bool, int]
     |  
     |  started = <unbound PYQT_SIGNAL started()>
     |  state(...)
     |      state(self) -> QProcess.ProcessState
     |  
     |  stateChanged = <unbound PYQT_SIGNAL stateChanged(QProcess::ProcessState)>
     |  systemEnvironment(...)
     |      systemEnvironment() -> List[str]
     |  
     |  terminate(...)
     |      terminate(self)
     |  
     |  waitForBytesWritten(...)
     |      waitForBytesWritten(self, msecs: int = 30000) -> bool
     |  
     |  waitForFinished(...)
     |      waitForFinished(self, msecs: int = 30000) -> bool
     |  
     |  waitForReadyRead(...)
     |      waitForReadyRead(self, msecs: int = 30000) -> bool
     |  
     |  waitForStarted(...)
     |      waitForStarted(self, msecs: int = 30000) -> bool
     |  
     |  workingDirectory(...)
     |      workingDirectory(self) -> str
     |  
     |  writeData(...)
     |      writeData(self, bytes) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  CrashExit = 1
     |  
     |  Crashed = 1
     |  
     |  ExitStatus = <class 'PyQt5.QtCore.QProcess.ExitStatus'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FailedToStart = 0
     |  
     |  ForwardedChannels = 2
     |  
     |  ForwardedErrorChannel = 4
     |  
     |  ForwardedInputChannel = 1
     |  
     |  ForwardedOutputChannel = 3
     |  
     |  InputChannelMode = <class 'PyQt5.QtCore.QProcess.InputChannelMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ManagedInputChannel = 0
     |  
     |  MergedChannels = 1
     |  
     |  NormalExit = 0
     |  
     |  NotRunning = 0
     |  
     |  ProcessChannel = <class 'PyQt5.QtCore.QProcess.ProcessChannel'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ProcessChannelMode = <class 'PyQt5.QtCore.QProcess.ProcessChannelMode'...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ProcessError = <class 'PyQt5.QtCore.QProcess.ProcessError'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ProcessState = <class 'PyQt5.QtCore.QProcess.ProcessState'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ReadError = 3
     |  
     |  Running = 2
     |  
     |  SeparateChannels = 0
     |  
     |  StandardError = 1
     |  
     |  StandardOutput = 0
     |  
     |  Starting = 1
     |  
     |  Timedout = 2
     |  
     |  UnknownError = 5
     |  
     |  WriteError = 4
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QIODevice:
     |  
     |  aboutToClose = <unbound PYQT_SIGNAL aboutToClose()>
     |  bytesWritten = <unbound PYQT_SIGNAL bytesWritten(qint64)>
     |  channelBytesWritten = <unbound PYQT_SIGNAL channelBytesWritten(int,qint64)>
     |  channelReadyRead = <unbound PYQT_SIGNAL channelReadyRead(int)>
     |  commitTransaction(...)
     |      commitTransaction(self)
     |  
     |  currentReadChannel(...)
     |      currentReadChannel(self) -> int
     |  
     |  currentWriteChannel(...)
     |      currentWriteChannel(self) -> int
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  getChar(...)
     |      getChar(self) -> Tuple[bool, str]
     |  
     |  isOpen(...)
     |      isOpen(self) -> bool
     |  
     |  isReadable(...)
     |      isReadable(self) -> bool
     |  
     |  isTextModeEnabled(...)
     |      isTextModeEnabled(self) -> bool
     |  
     |  isTransactionStarted(...)
     |      isTransactionStarted(self) -> bool
     |  
     |  isWritable(...)
     |      isWritable(self) -> bool
     |  
     |  openMode(...)
     |      openMode(self) -> QIODevice.OpenMode
     |  
     |  peek(...)
     |      peek(self, int) -> QByteArray
     |  
     |  pos(...)
     |      pos(self) -> int
     |  
     |  putChar(...)
     |      putChar(self, str) -> bool
     |  
     |  read(...)
     |      read(self, int) -> bytes
     |  
     |  readAll(...)
     |      readAll(self) -> QByteArray
     |  
     |  readChannelCount(...)
     |      readChannelCount(self) -> int
     |  
     |  readChannelFinished = <unbound PYQT_SIGNAL readChannelFinished()>
     |  readLine(...)
     |      readLine(self, maxlen: int = 0) -> bytes
     |  
     |  readLineData(...)
     |      readLineData(self, int) -> bytes
     |  
     |  readyRead = <unbound PYQT_SIGNAL readyRead()>
     |  reset(...)
     |      reset(self) -> bool
     |  
     |  rollbackTransaction(...)
     |      rollbackTransaction(self)
     |  
     |  seek(...)
     |      seek(self, int) -> bool
     |  
     |  setCurrentReadChannel(...)
     |      setCurrentReadChannel(self, int)
     |  
     |  setCurrentWriteChannel(...)
     |      setCurrentWriteChannel(self, int)
     |  
     |  setErrorString(...)
     |      setErrorString(self, str)
     |  
     |  setOpenMode(...)
     |      setOpenMode(self, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |  
     |  setTextModeEnabled(...)
     |      setTextModeEnabled(self, bool)
     |  
     |  size(...)
     |      size(self) -> int
     |  
     |  skip(...)
     |      skip(self, int) -> int
     |  
     |  startTransaction(...)
     |      startTransaction(self)
     |  
     |  ungetChar(...)
     |      ungetChar(self, str)
     |  
     |  write(...)
     |      write(self, Union[QByteArray, bytes, bytearray]) -> int
     |  
     |  writeChannelCount(...)
     |      writeChannelCount(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QIODevice:
     |  
     |  Append = 4
     |  
     |  ExistingOnly = 128
     |  
     |  NewOnly = 64
     |  
     |  NotOpen = 0
     |  
     |  OpenMode = <class 'PyQt5.QtCore.QIODevice.OpenMode'>
     |      QIODevice.OpenMode()
     |      QIODevice.OpenMode(Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |      QIODevice.OpenMode(QIODevice.OpenMode)
     |  
     |  OpenModeFlag = <class 'PyQt5.QtCore.QIODevice.OpenModeFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ReadOnly = 1
     |  
     |  ReadWrite = 3
     |  
     |  Text = 16
     |  
     |  Truncate = 8
     |  
     |  Unbuffered = 32
     |  
     |  WriteOnly = 2
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QProcessEnvironment(sip.simplewrapper)
     |  QProcessEnvironment()
     |  QProcessEnvironment(QProcessEnvironment)
     |  
     |  Method resolution order:
     |      QProcessEnvironment
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  contains(...)
     |      contains(self, str) -> bool
     |  
     |  insert(...)
     |      insert(self, str, str)
     |      insert(self, QProcessEnvironment)
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  keys(...)
     |      keys(self) -> List[str]
     |  
     |  remove(...)
     |      remove(self, str)
     |  
     |  swap(...)
     |      swap(self, QProcessEnvironment)
     |  
     |  systemEnvironment(...)
     |      systemEnvironment() -> QProcessEnvironment
     |  
     |  toStringList(...)
     |      toStringList(self) -> List[str]
     |  
     |  value(...)
     |      value(self, str, defaultValue: str = '') -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QPropertyAnimation(QVariantAnimation)
     |  QPropertyAnimation(parent: QObject = None)
     |  QPropertyAnimation(QObject, Union[QByteArray, bytes, bytearray], parent: QObject = None)
     |  
     |  Method resolution order:
     |      QPropertyAnimation
     |      QVariantAnimation
     |      QAbstractAnimation
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  propertyName(...)
     |      propertyName(self) -> QByteArray
     |  
     |  setPropertyName(...)
     |      setPropertyName(self, Union[QByteArray, bytes, bytearray])
     |  
     |  setTargetObject(...)
     |      setTargetObject(self, QObject)
     |  
     |  targetObject(...)
     |      targetObject(self) -> QObject
     |  
     |  updateCurrentValue(...)
     |      updateCurrentValue(self, Any)
     |  
     |  updateState(...)
     |      updateState(self, QAbstractAnimation.State, QAbstractAnimation.State)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QVariantAnimation:
     |  
     |  currentValue(...)
     |      currentValue(self) -> Any
     |  
     |  duration(...)
     |      duration(self) -> int
     |  
     |  easingCurve(...)
     |      easingCurve(self) -> QEasingCurve
     |  
     |  endValue(...)
     |      endValue(self) -> Any
     |  
     |  interpolated(...)
     |      interpolated(self, Any, Any, float) -> Any
     |  
     |  keyValueAt(...)
     |      keyValueAt(self, float) -> Any
     |  
     |  keyValues(...)
     |      keyValues(self) -> List[Tuple[float, Any]]
     |  
     |  setDuration(...)
     |      setDuration(self, int)
     |  
     |  setEasingCurve(...)
     |      setEasingCurve(self, Union[QEasingCurve, QEasingCurve.Type])
     |  
     |  setEndValue(...)
     |      setEndValue(self, Any)
     |  
     |  setKeyValueAt(...)
     |      setKeyValueAt(self, float, Any)
     |  
     |  setKeyValues(...)
     |      setKeyValues(self, Iterable[Tuple[float, Any]])
     |  
     |  setStartValue(...)
     |      setStartValue(self, Any)
     |  
     |  startValue(...)
     |      startValue(self) -> Any
     |  
     |  updateCurrentTime(...)
     |      updateCurrentTime(self, int)
     |  
     |  valueChanged = <unbound PYQT_SIGNAL valueChanged(QVariant)>
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractAnimation:
     |  
     |  currentLoop(...)
     |      currentLoop(self) -> int
     |  
     |  currentLoopChanged = <unbound PYQT_SIGNAL currentLoopChanged(int)>
     |  currentLoopTime(...)
     |      currentLoopTime(self) -> int
     |  
     |  currentTime(...)
     |      currentTime(self) -> int
     |  
     |  direction(...)
     |      direction(self) -> QAbstractAnimation.Direction
     |  
     |  directionChanged = <unbound PYQT_SIGNAL directionChanged(QAbstractAnimation::Direction)>
     |  finished = <unbound PYQT_SIGNAL finished()>
     |  group(...)
     |      group(self) -> QAnimationGroup
     |  
     |  loopCount(...)
     |      loopCount(self) -> int
     |  
     |  pause(...)
     |      pause(self)
     |  
     |  resume(...)
     |      resume(self)
     |  
     |  setCurrentTime(...)
     |      setCurrentTime(self, int)
     |  
     |  setDirection(...)
     |      setDirection(self, QAbstractAnimation.Direction)
     |  
     |  setLoopCount(...)
     |      setLoopCount(self, int)
     |  
     |  setPaused(...)
     |      setPaused(self, bool)
     |  
     |  start(...)
     |      start(self, policy: QAbstractAnimation.DeletionPolicy = QAbstractAnimation.KeepWhenStopped)
     |  
     |  state(...)
     |      state(self) -> QAbstractAnimation.State
     |  
     |  stateChanged = <unbound PYQT_SIGNAL stateChanged(QAbstractAnimation::State,QAbstractAnimation::State)>
     |  stop(...)
     |      stop(self)
     |  
     |  totalDuration(...)
     |      totalDuration(self) -> int
     |  
     |  updateDirection(...)
     |      updateDirection(self, QAbstractAnimation.Direction)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QAbstractAnimation:
     |  
     |  Backward = 1
     |  
     |  DeleteWhenStopped = 1
     |  
     |  DeletionPolicy = <class 'PyQt5.QtCore.QAbstractAnimation.DeletionPolic...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Direction = <class 'PyQt5.QtCore.QAbstractAnimation.Direction'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Forward = 0
     |  
     |  KeepWhenStopped = 0
     |  
     |  Paused = 1
     |  
     |  Running = 2
     |  
     |  State = <class 'PyQt5.QtCore.QAbstractAnimation.State'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Stopped = 0
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QRandomGenerator(sip.simplewrapper)
     |  QRandomGenerator(seed: int = 1)
     |  QRandomGenerator(QRandomGenerator)
     |  
     |  Method resolution order:
     |      QRandomGenerator
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __call__(self, /, *args, **kwargs)
     |      Call self as a function.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  bounded(...)
     |      bounded(self, float) -> float
     |      bounded(self, int) -> int
     |      bounded(self, int, int) -> int
     |  
     |  discard(...)
     |      discard(self, int)
     |  
     |  generate(...)
     |      generate(self) -> int
     |  
     |  generate64(...)
     |      generate64(self) -> int
     |  
     |  generateDouble(...)
     |      generateDouble(self) -> float
     |  
     |  global_(...)
     |      global_() -> QRandomGenerator
     |  
     |  max(...)
     |      max() -> int
     |  
     |  min(...)
     |      min() -> int
     |  
     |  securelySeeded(...)
     |      securelySeeded() -> QRandomGenerator
     |  
     |  seed(...)
     |      seed(self, seed: int = 1)
     |  
     |  system(...)
     |      system() -> QRandomGenerator
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QReadLocker(sip.simplewrapper)
     |  QReadLocker(QReadWriteLock)
     |  
     |  Method resolution order:
     |      QReadLocker
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __enter__(...)
     |      __enter__(self) -> object
     |  
     |  __exit__(...)
     |      __exit__(self, object, object, object)
     |  
     |  readWriteLock(...)
     |      readWriteLock(self) -> QReadWriteLock
     |  
     |  relock(...)
     |      relock(self)
     |  
     |  unlock(...)
     |      unlock(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QReadWriteLock(sip.simplewrapper)
     |  QReadWriteLock(recursionMode: QReadWriteLock.RecursionMode = QReadWriteLock.NonRecursive)
     |  
     |  Method resolution order:
     |      QReadWriteLock
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  lockForRead(...)
     |      lockForRead(self)
     |  
     |  lockForWrite(...)
     |      lockForWrite(self)
     |  
     |  tryLockForRead(...)
     |      tryLockForRead(self) -> bool
     |      tryLockForRead(self, int) -> bool
     |  
     |  tryLockForWrite(...)
     |      tryLockForWrite(self) -> bool
     |      tryLockForWrite(self, int) -> bool
     |  
     |  unlock(...)
     |      unlock(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  NonRecursive = 0
     |  
     |  RecursionMode = <class 'PyQt5.QtCore.QReadWriteLock.RecursionMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Recursive = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QRect(sip.simplewrapper)
     |  QRect()
     |  QRect(int, int, int, int)
     |  QRect(QPoint, QPoint)
     |  QRect(QPoint, QSize)
     |  QRect(QRect)
     |  
     |  Method resolution order:
     |      QRect
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __and__(self, value, /)
     |      Return self&value.
     |  
     |  __bool__(self, /)
     |      self != 0
     |  
     |  __contains__(self, key, /)
     |      Return key in self.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __iadd__(self, value, /)
     |      Return self+=value.
     |  
     |  __iand__(self, value, /)
     |      Return self&=value.
     |  
     |  __ior__(self, value, /)
     |      Return self|=value.
     |  
     |  __isub__(self, value, /)
     |      Return self-=value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __or__(self, value, /)
     |      Return self|value.
     |  
     |  __radd__(self, value, /)
     |      Return value+self.
     |  
     |  __rand__(self, value, /)
     |      Return value&self.
     |  
     |  __reduce__ = _pickle_type(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __ror__(self, value, /)
     |      Return value|self.
     |  
     |  __rsub__(self, value, /)
     |      Return value-self.
     |  
     |  __sub__(self, value, /)
     |      Return self-value.
     |  
     |  adjust(...)
     |      adjust(self, int, int, int, int)
     |  
     |  adjusted(...)
     |      adjusted(self, int, int, int, int) -> QRect
     |  
     |  bottom(...)
     |      bottom(self) -> int
     |  
     |  bottomLeft(...)
     |      bottomLeft(self) -> QPoint
     |  
     |  bottomRight(...)
     |      bottomRight(self) -> QPoint
     |  
     |  center(...)
     |      center(self) -> QPoint
     |  
     |  contains(...)
     |      contains(self, QPoint, proper: bool = False) -> bool
     |      contains(self, QRect, proper: bool = False) -> bool
     |      contains(self, int, int, bool) -> bool
     |      contains(self, int, int) -> bool
     |  
     |  getCoords(...)
     |      getCoords(self) -> Tuple[int, int, int, int]
     |  
     |  getRect(...)
     |      getRect(self) -> Tuple[int, int, int, int]
     |  
     |  height(...)
     |      height(self) -> int
     |  
     |  intersected(...)
     |      intersected(self, QRect) -> QRect
     |  
     |  intersects(...)
     |      intersects(self, QRect) -> bool
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  left(...)
     |      left(self) -> int
     |  
     |  marginsAdded(...)
     |      marginsAdded(self, QMargins) -> QRect
     |  
     |  marginsRemoved(...)
     |      marginsRemoved(self, QMargins) -> QRect
     |  
     |  moveBottom(...)
     |      moveBottom(self, int)
     |  
     |  moveBottomLeft(...)
     |      moveBottomLeft(self, QPoint)
     |  
     |  moveBottomRight(...)
     |      moveBottomRight(self, QPoint)
     |  
     |  moveCenter(...)
     |      moveCenter(self, QPoint)
     |  
     |  moveLeft(...)
     |      moveLeft(self, int)
     |  
     |  moveRight(...)
     |      moveRight(self, int)
     |  
     |  moveTo(...)
     |      moveTo(self, int, int)
     |      moveTo(self, QPoint)
     |  
     |  moveTop(...)
     |      moveTop(self, int)
     |  
     |  moveTopLeft(...)
     |      moveTopLeft(self, QPoint)
     |  
     |  moveTopRight(...)
     |      moveTopRight(self, QPoint)
     |  
     |  normalized(...)
     |      normalized(self) -> QRect
     |  
     |  right(...)
     |      right(self) -> int
     |  
     |  setBottom(...)
     |      setBottom(self, int)
     |  
     |  setBottomLeft(...)
     |      setBottomLeft(self, QPoint)
     |  
     |  setBottomRight(...)
     |      setBottomRight(self, QPoint)
     |  
     |  setCoords(...)
     |      setCoords(self, int, int, int, int)
     |  
     |  setHeight(...)
     |      setHeight(self, int)
     |  
     |  setLeft(...)
     |      setLeft(self, int)
     |  
     |  setRect(...)
     |      setRect(self, int, int, int, int)
     |  
     |  setRight(...)
     |      setRight(self, int)
     |  
     |  setSize(...)
     |      setSize(self, QSize)
     |  
     |  setTop(...)
     |      setTop(self, int)
     |  
     |  setTopLeft(...)
     |      setTopLeft(self, QPoint)
     |  
     |  setTopRight(...)
     |      setTopRight(self, QPoint)
     |  
     |  setWidth(...)
     |      setWidth(self, int)
     |  
     |  setX(...)
     |      setX(self, int)
     |  
     |  setY(...)
     |      setY(self, int)
     |  
     |  size(...)
     |      size(self) -> QSize
     |  
     |  top(...)
     |      top(self) -> int
     |  
     |  topLeft(...)
     |      topLeft(self) -> QPoint
     |  
     |  topRight(...)
     |      topRight(self) -> QPoint
     |  
     |  translate(...)
     |      translate(self, int, int)
     |      translate(self, QPoint)
     |  
     |  translated(...)
     |      translated(self, int, int) -> QRect
     |      translated(self, QPoint) -> QRect
     |  
     |  transposed(...)
     |      transposed(self) -> QRect
     |  
     |  united(...)
     |      united(self, QRect) -> QRect
     |  
     |  width(...)
     |      width(self) -> int
     |  
     |  x(...)
     |      x(self) -> int
     |  
     |  y(...)
     |      y(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QRectF(sip.simplewrapper)
     |  QRectF()
     |  QRectF(Union[QPointF, QPoint], QSizeF)
     |  QRectF(Union[QPointF, QPoint], Union[QPointF, QPoint])
     |  QRectF(float, float, float, float)
     |  QRectF(QRect)
     |  QRectF(QRectF)
     |  
     |  Method resolution order:
     |      QRectF
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __and__(self, value, /)
     |      Return self&value.
     |  
     |  __bool__(self, /)
     |      self != 0
     |  
     |  __contains__(self, key, /)
     |      Return key in self.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __iadd__(self, value, /)
     |      Return self+=value.
     |  
     |  __iand__(self, value, /)
     |      Return self&=value.
     |  
     |  __ior__(self, value, /)
     |      Return self|=value.
     |  
     |  __isub__(self, value, /)
     |      Return self-=value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __or__(self, value, /)
     |      Return self|value.
     |  
     |  __radd__(self, value, /)
     |      Return value+self.
     |  
     |  __rand__(self, value, /)
     |      Return value&self.
     |  
     |  __reduce__ = _pickle_type(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __ror__(self, value, /)
     |      Return value|self.
     |  
     |  __rsub__(self, value, /)
     |      Return value-self.
     |  
     |  __sub__(self, value, /)
     |      Return self-value.
     |  
     |  adjust(...)
     |      adjust(self, float, float, float, float)
     |  
     |  adjusted(...)
     |      adjusted(self, float, float, float, float) -> QRectF
     |  
     |  bottom(...)
     |      bottom(self) -> float
     |  
     |  bottomLeft(...)
     |      bottomLeft(self) -> QPointF
     |  
     |  bottomRight(...)
     |      bottomRight(self) -> QPointF
     |  
     |  center(...)
     |      center(self) -> QPointF
     |  
     |  contains(...)
     |      contains(self, Union[QPointF, QPoint]) -> bool
     |      contains(self, QRectF) -> bool
     |      contains(self, float, float) -> bool
     |  
     |  getCoords(...)
     |      getCoords(self) -> Tuple[float, float, float, float]
     |  
     |  getRect(...)
     |      getRect(self) -> Tuple[float, float, float, float]
     |  
     |  height(...)
     |      height(self) -> float
     |  
     |  intersected(...)
     |      intersected(self, QRectF) -> QRectF
     |  
     |  intersects(...)
     |      intersects(self, QRectF) -> bool
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  left(...)
     |      left(self) -> float
     |  
     |  marginsAdded(...)
     |      marginsAdded(self, QMarginsF) -> QRectF
     |  
     |  marginsRemoved(...)
     |      marginsRemoved(self, QMarginsF) -> QRectF
     |  
     |  moveBottom(...)
     |      moveBottom(self, float)
     |  
     |  moveBottomLeft(...)
     |      moveBottomLeft(self, Union[QPointF, QPoint])
     |  
     |  moveBottomRight(...)
     |      moveBottomRight(self, Union[QPointF, QPoint])
     |  
     |  moveCenter(...)
     |      moveCenter(self, Union[QPointF, QPoint])
     |  
     |  moveLeft(...)
     |      moveLeft(self, float)
     |  
     |  moveRight(...)
     |      moveRight(self, float)
     |  
     |  moveTo(...)
     |      moveTo(self, float, float)
     |      moveTo(self, Union[QPointF, QPoint])
     |  
     |  moveTop(...)
     |      moveTop(self, float)
     |  
     |  moveTopLeft(...)
     |      moveTopLeft(self, Union[QPointF, QPoint])
     |  
     |  moveTopRight(...)
     |      moveTopRight(self, Union[QPointF, QPoint])
     |  
     |  normalized(...)
     |      normalized(self) -> QRectF
     |  
     |  right(...)
     |      right(self) -> float
     |  
     |  setBottom(...)
     |      setBottom(self, float)
     |  
     |  setBottomLeft(...)
     |      setBottomLeft(self, Union[QPointF, QPoint])
     |  
     |  setBottomRight(...)
     |      setBottomRight(self, Union[QPointF, QPoint])
     |  
     |  setCoords(...)
     |      setCoords(self, float, float, float, float)
     |  
     |  setHeight(...)
     |      setHeight(self, float)
     |  
     |  setLeft(...)
     |      setLeft(self, float)
     |  
     |  setRect(...)
     |      setRect(self, float, float, float, float)
     |  
     |  setRight(...)
     |      setRight(self, float)
     |  
     |  setSize(...)
     |      setSize(self, QSizeF)
     |  
     |  setTop(...)
     |      setTop(self, float)
     |  
     |  setTopLeft(...)
     |      setTopLeft(self, Union[QPointF, QPoint])
     |  
     |  setTopRight(...)
     |      setTopRight(self, Union[QPointF, QPoint])
     |  
     |  setWidth(...)
     |      setWidth(self, float)
     |  
     |  setX(...)
     |      setX(self, float)
     |  
     |  setY(...)
     |      setY(self, float)
     |  
     |  size(...)
     |      size(self) -> QSizeF
     |  
     |  toAlignedRect(...)
     |      toAlignedRect(self) -> QRect
     |  
     |  toRect(...)
     |      toRect(self) -> QRect
     |  
     |  top(...)
     |      top(self) -> float
     |  
     |  topLeft(...)
     |      topLeft(self) -> QPointF
     |  
     |  topRight(...)
     |      topRight(self) -> QPointF
     |  
     |  translate(...)
     |      translate(self, float, float)
     |      translate(self, Union[QPointF, QPoint])
     |  
     |  translated(...)
     |      translated(self, float, float) -> QRectF
     |      translated(self, Union[QPointF, QPoint]) -> QRectF
     |  
     |  transposed(...)
     |      transposed(self) -> QRectF
     |  
     |  united(...)
     |      united(self, QRectF) -> QRectF
     |  
     |  width(...)
     |      width(self) -> float
     |  
     |  x(...)
     |      x(self) -> float
     |  
     |  y(...)
     |      y(self) -> float
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QRegExp(sip.simplewrapper)
     |  QRegExp()
     |  QRegExp(str, cs: Qt.CaseSensitivity = Qt.CaseSensitive, syntax: QRegExp.PatternSyntax = QRegExp.RegExp)
     |  QRegExp(QRegExp)
     |  
     |  Method resolution order:
     |      QRegExp
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  cap(...)
     |      cap(self, nth: int = 0) -> str
     |  
     |  captureCount(...)
     |      captureCount(self) -> int
     |  
     |  capturedTexts(...)
     |      capturedTexts(self) -> List[str]
     |  
     |  caseSensitivity(...)
     |      caseSensitivity(self) -> Qt.CaseSensitivity
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  escape(...)
     |      escape(str) -> str
     |  
     |  exactMatch(...)
     |      exactMatch(self, str) -> bool
     |  
     |  indexIn(...)
     |      indexIn(self, str, offset: int = 0, caretMode: QRegExp.CaretMode = QRegExp.CaretAtZero) -> int
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  isMinimal(...)
     |      isMinimal(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  lastIndexIn(...)
     |      lastIndexIn(self, str, offset: int = -1, caretMode: QRegExp.CaretMode = QRegExp.CaretAtZero) -> int
     |  
     |  matchedLength(...)
     |      matchedLength(self) -> int
     |  
     |  pattern(...)
     |      pattern(self) -> str
     |  
     |  patternSyntax(...)
     |      patternSyntax(self) -> QRegExp.PatternSyntax
     |  
     |  pos(...)
     |      pos(self, nth: int = 0) -> int
     |  
     |  setCaseSensitivity(...)
     |      setCaseSensitivity(self, Qt.CaseSensitivity)
     |  
     |  setMinimal(...)
     |      setMinimal(self, bool)
     |  
     |  setPattern(...)
     |      setPattern(self, str)
     |  
     |  setPatternSyntax(...)
     |      setPatternSyntax(self, QRegExp.PatternSyntax)
     |  
     |  swap(...)
     |      swap(self, QRegExp)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  CaretAtOffset = 1
     |  
     |  CaretAtZero = 0
     |  
     |  CaretMode = <class 'PyQt5.QtCore.QRegExp.CaretMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  CaretWontMatch = 2
     |  
     |  FixedString = 2
     |  
     |  PatternSyntax = <class 'PyQt5.QtCore.QRegExp.PatternSyntax'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  RegExp = 0
     |  
     |  RegExp2 = 3
     |  
     |  W3CXmlSchema11 = 5
     |  
     |  Wildcard = 1
     |  
     |  WildcardUnix = 4
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QRegularExpression(sip.simplewrapper)
     |  QRegularExpression()
     |  QRegularExpression(str, options: Union[QRegularExpression.PatternOptions, QRegularExpression.PatternOption] = QRegularExpression.NoPatternOption)
     |  QRegularExpression(QRegularExpression)
     |  
     |  Method resolution order:
     |      QRegularExpression
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  captureCount(...)
     |      captureCount(self) -> int
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  escape(...)
     |      escape(str) -> str
     |  
     |  globalMatch(...)
     |      globalMatch(self, str, offset: int = 0, matchType: QRegularExpression.MatchType = QRegularExpression.NormalMatch, matchOptions: Union[QRegularExpression.MatchOptions, QRegularExpression.MatchOption] = QRegularExpression.NoMatchOption) -> QRegularExpressionMatchIterator
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  match(...)
     |      match(self, str, offset: int = 0, matchType: QRegularExpression.MatchType = QRegularExpression.NormalMatch, matchOptions: Union[QRegularExpression.MatchOptions, QRegularExpression.MatchOption] = QRegularExpression.NoMatchOption) -> QRegularExpressionMatch
     |  
     |  namedCaptureGroups(...)
     |      namedCaptureGroups(self) -> List[str]
     |  
     |  optimize(...)
     |      optimize(self)
     |  
     |  pattern(...)
     |      pattern(self) -> str
     |  
     |  patternErrorOffset(...)
     |      patternErrorOffset(self) -> int
     |  
     |  patternOptions(...)
     |      patternOptions(self) -> QRegularExpression.PatternOptions
     |  
     |  setPattern(...)
     |      setPattern(self, str)
     |  
     |  setPatternOptions(...)
     |      setPatternOptions(self, Union[QRegularExpression.PatternOptions, QRegularExpression.PatternOption])
     |  
     |  swap(...)
     |      swap(self, QRegularExpression)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AnchoredMatchOption = 1
     |  
     |  CaseInsensitiveOption = 1
     |  
     |  DontAutomaticallyOptimizeOption = 256
     |  
     |  DontCaptureOption = 32
     |  
     |  DontCheckSubjectStringMatchOption = 2
     |  
     |  DotMatchesEverythingOption = 2
     |  
     |  ExtendedPatternSyntaxOption = 8
     |  
     |  InvertedGreedinessOption = 16
     |  
     |  MatchOption = <class 'PyQt5.QtCore.QRegularExpression.MatchOption'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  MatchOptions = <class 'PyQt5.QtCore.QRegularExpression.MatchOptions'>
     |      QRegularExpression.MatchOptions()
     |      QRegularExpression.MatchOptions(Union[QRegularExpression.MatchOptions, QRegularExpression.MatchOption])
     |      QRegularExpression.MatchOptions(QRegularExpression.MatchOptions)
     |  
     |  MatchType = <class 'PyQt5.QtCore.QRegularExpression.MatchType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  MultilineOption = 4
     |  
     |  NoMatch = 3
     |  
     |  NoMatchOption = 0
     |  
     |  NoPatternOption = 0
     |  
     |  NormalMatch = 0
     |  
     |  OptimizeOnFirstUsageOption = 128
     |  
     |  PartialPreferCompleteMatch = 1
     |  
     |  PartialPreferFirstMatch = 2
     |  
     |  PatternOption = <class 'PyQt5.QtCore.QRegularExpression.PatternOption'...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  PatternOptions = <class 'PyQt5.QtCore.QRegularExpression.PatternOption...
     |      QRegularExpression.PatternOptions()
     |      QRegularExpression.PatternOptions(Union[QRegularExpression.PatternOptions, QRegularExpression.PatternOption])
     |      QRegularExpression.PatternOptions(QRegularExpression.PatternOptions)
     |  
     |  UseUnicodePropertiesOption = 64
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QRegularExpressionMatch(sip.simplewrapper)
     |  QRegularExpressionMatch()
     |  QRegularExpressionMatch(QRegularExpressionMatch)
     |  
     |  Method resolution order:
     |      QRegularExpressionMatch
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  captured(...)
     |      captured(self, nth: int = 0) -> str
     |      captured(self, str) -> str
     |  
     |  capturedEnd(...)
     |      capturedEnd(self, nth: int = 0) -> int
     |      capturedEnd(self, str) -> int
     |  
     |  capturedLength(...)
     |      capturedLength(self, nth: int = 0) -> int
     |      capturedLength(self, str) -> int
     |  
     |  capturedStart(...)
     |      capturedStart(self, nth: int = 0) -> int
     |      capturedStart(self, str) -> int
     |  
     |  capturedTexts(...)
     |      capturedTexts(self) -> List[str]
     |  
     |  hasMatch(...)
     |      hasMatch(self) -> bool
     |  
     |  hasPartialMatch(...)
     |      hasPartialMatch(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  lastCapturedIndex(...)
     |      lastCapturedIndex(self) -> int
     |  
     |  matchOptions(...)
     |      matchOptions(self) -> QRegularExpression.MatchOptions
     |  
     |  matchType(...)
     |      matchType(self) -> QRegularExpression.MatchType
     |  
     |  regularExpression(...)
     |      regularExpression(self) -> QRegularExpression
     |  
     |  swap(...)
     |      swap(self, QRegularExpressionMatch)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QRegularExpressionMatchIterator(sip.simplewrapper)
     |  QRegularExpressionMatchIterator()
     |  QRegularExpressionMatchIterator(QRegularExpressionMatchIterator)
     |  
     |  Method resolution order:
     |      QRegularExpressionMatchIterator
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  hasNext(...)
     |      hasNext(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  matchOptions(...)
     |      matchOptions(self) -> QRegularExpression.MatchOptions
     |  
     |  matchType(...)
     |      matchType(self) -> QRegularExpression.MatchType
     |  
     |  next(...)
     |      next(self) -> QRegularExpressionMatch
     |  
     |  peekNext(...)
     |      peekNext(self) -> QRegularExpressionMatch
     |  
     |  regularExpression(...)
     |      regularExpression(self) -> QRegularExpression
     |  
     |  swap(...)
     |      swap(self, QRegularExpressionMatchIterator)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QResource(sip.simplewrapper)
     |  QResource(fileName: str = '', locale: QLocale = QLocale())
     |  
     |  Method resolution order:
     |      QResource
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  absoluteFilePath(...)
     |      absoluteFilePath(self) -> str
     |  
     |  children(...)
     |      children(self) -> List[str]
     |  
     |  data(...)
     |      data(self) -> bytes
     |  
     |  fileName(...)
     |      fileName(self) -> str
     |  
     |  isCompressed(...)
     |      isCompressed(self) -> bool
     |  
     |  isDir(...)
     |      isDir(self) -> bool
     |  
     |  isFile(...)
     |      isFile(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  lastModified(...)
     |      lastModified(self) -> QDateTime
     |  
     |  locale(...)
     |      locale(self) -> QLocale
     |  
     |  registerResource(...)
     |      registerResource(str, mapRoot: str = '') -> bool
     |  
     |  registerResourceData(...)
     |      registerResourceData(bytes, mapRoot: str = '') -> bool
     |  
     |  setFileName(...)
     |      setFileName(self, str)
     |  
     |  setLocale(...)
     |      setLocale(self, QLocale)
     |  
     |  size(...)
     |      size(self) -> int
     |  
     |  unregisterResource(...)
     |      unregisterResource(str, mapRoot: str = '') -> bool
     |  
     |  unregisterResourceData(...)
     |      unregisterResourceData(bytes, mapRoot: str = '') -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QRunnable(sip.wrapper)
     |  QRunnable()
     |  QRunnable(QRunnable)
     |  
     |  Method resolution order:
     |      QRunnable
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  autoDelete(...)
     |      autoDelete(self) -> bool
     |  
     |  run(...)
     |      run(self)
     |  
     |  setAutoDelete(...)
     |      setAutoDelete(self, bool)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSaveFile(QFileDevice)
     |  QSaveFile(str)
     |  QSaveFile(parent: QObject = None)
     |  QSaveFile(str, QObject)
     |  
     |  Method resolution order:
     |      QSaveFile
     |      QFileDevice
     |      QIODevice
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  cancelWriting(...)
     |      cancelWriting(self)
     |  
     |  close(...)
     |  
     |  commit(...)
     |      commit(self) -> bool
     |  
     |  directWriteFallback(...)
     |      directWriteFallback(self) -> bool
     |  
     |  fileName(...)
     |      fileName(self) -> str
     |  
     |  open(...)
     |      open(self, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag]) -> bool
     |  
     |  setDirectWriteFallback(...)
     |      setDirectWriteFallback(self, bool)
     |  
     |  setFileName(...)
     |      setFileName(self, str)
     |  
     |  writeData(...)
     |      writeData(self, bytes) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QFileDevice:
     |  
     |  atEnd(...)
     |      atEnd(self) -> bool
     |  
     |  error(...)
     |      error(self) -> QFileDevice.FileError
     |  
     |  fileTime(...)
     |      fileTime(self, QFileDevice.FileTime) -> QDateTime
     |  
     |  flush(...)
     |      flush(self) -> bool
     |  
     |  handle(...)
     |      handle(self) -> int
     |  
     |  isSequential(...)
     |      isSequential(self) -> bool
     |  
     |  map(...)
     |      map(self, int, int, flags: QFileDevice.MemoryMapFlags = QFileDevice.NoOptions) -> sip.voidptr
     |  
     |  permissions(...)
     |      permissions(self) -> QFileDevice.Permissions
     |  
     |  pos(...)
     |      pos(self) -> int
     |  
     |  readData(...)
     |      readData(self, int) -> bytes
     |  
     |  readLineData(...)
     |      readLineData(self, int) -> bytes
     |  
     |  resize(...)
     |      resize(self, int) -> bool
     |  
     |  seek(...)
     |      seek(self, int) -> bool
     |  
     |  setFileTime(...)
     |      setFileTime(self, Union[QDateTime, datetime.datetime], QFileDevice.FileTime) -> bool
     |  
     |  setPermissions(...)
     |      setPermissions(self, Union[QFileDevice.Permissions, QFileDevice.Permission]) -> bool
     |  
     |  size(...)
     |      size(self) -> int
     |  
     |  unmap(...)
     |      unmap(self, sip.voidptr) -> bool
     |  
     |  unsetError(...)
     |      unsetError(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QFileDevice:
     |  
     |  AbortError = 6
     |  
     |  AutoCloseHandle = 1
     |  
     |  CopyError = 14
     |  
     |  DontCloseHandle = 0
     |  
     |  ExeGroup = 16
     |  
     |  ExeOther = 1
     |  
     |  ExeOwner = 4096
     |  
     |  ExeUser = 256
     |  
     |  FatalError = 3
     |  
     |  FileAccessTime = 0
     |  
     |  FileBirthTime = 1
     |  
     |  FileError = <class 'PyQt5.QtCore.QFileDevice.FileError'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FileHandleFlag = <class 'PyQt5.QtCore.QFileDevice.FileHandleFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FileHandleFlags = <class 'PyQt5.QtCore.QFileDevice.FileHandleFlags'>
     |      QFileDevice.FileHandleFlags()
     |      QFileDevice.FileHandleFlags(Union[QFileDevice.FileHandleFlags, QFileDevice.FileHandleFlag])
     |      QFileDevice.FileHandleFlags(QFileDevice.FileHandleFlags)
     |  
     |  FileMetadataChangeTime = 2
     |  
     |  FileModificationTime = 3
     |  
     |  FileTime = <class 'PyQt5.QtCore.QFileDevice.FileTime'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  MapPrivateOption = 1
     |  
     |  MemoryMapFlags = <class 'PyQt5.QtCore.QFileDevice.MemoryMapFlags'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NoError = 0
     |  
     |  NoOptions = 0
     |  
     |  OpenError = 5
     |  
     |  Permission = <class 'PyQt5.QtCore.QFileDevice.Permission'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Permissions = <class 'PyQt5.QtCore.QFileDevice.Permissions'>
     |      QFileDevice.Permissions()
     |      QFileDevice.Permissions(Union[QFileDevice.Permissions, QFileDevice.Permission])
     |      QFileDevice.Permissions(QFileDevice.Permissions)
     |  
     |  PermissionsError = 13
     |  
     |  PositionError = 11
     |  
     |  ReadError = 1
     |  
     |  ReadGroup = 64
     |  
     |  ReadOther = 4
     |  
     |  ReadOwner = 16384
     |  
     |  ReadUser = 1024
     |  
     |  RemoveError = 9
     |  
     |  RenameError = 10
     |  
     |  ResizeError = 12
     |  
     |  ResourceError = 4
     |  
     |  TimeOutError = 7
     |  
     |  UnspecifiedError = 8
     |  
     |  WriteError = 2
     |  
     |  WriteGroup = 32
     |  
     |  WriteOther = 2
     |  
     |  WriteOwner = 8192
     |  
     |  WriteUser = 512
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QIODevice:
     |  
     |  aboutToClose = <unbound PYQT_SIGNAL aboutToClose()>
     |  bytesAvailable(...)
     |      bytesAvailable(self) -> int
     |  
     |  bytesToWrite(...)
     |      bytesToWrite(self) -> int
     |  
     |  bytesWritten = <unbound PYQT_SIGNAL bytesWritten(qint64)>
     |  canReadLine(...)
     |      canReadLine(self) -> bool
     |  
     |  channelBytesWritten = <unbound PYQT_SIGNAL channelBytesWritten(int,qint64)>
     |  channelReadyRead = <unbound PYQT_SIGNAL channelReadyRead(int)>
     |  commitTransaction(...)
     |      commitTransaction(self)
     |  
     |  currentReadChannel(...)
     |      currentReadChannel(self) -> int
     |  
     |  currentWriteChannel(...)
     |      currentWriteChannel(self) -> int
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  getChar(...)
     |      getChar(self) -> Tuple[bool, str]
     |  
     |  isOpen(...)
     |      isOpen(self) -> bool
     |  
     |  isReadable(...)
     |      isReadable(self) -> bool
     |  
     |  isTextModeEnabled(...)
     |      isTextModeEnabled(self) -> bool
     |  
     |  isTransactionStarted(...)
     |      isTransactionStarted(self) -> bool
     |  
     |  isWritable(...)
     |      isWritable(self) -> bool
     |  
     |  openMode(...)
     |      openMode(self) -> QIODevice.OpenMode
     |  
     |  peek(...)
     |      peek(self, int) -> QByteArray
     |  
     |  putChar(...)
     |      putChar(self, str) -> bool
     |  
     |  read(...)
     |      read(self, int) -> bytes
     |  
     |  readAll(...)
     |      readAll(self) -> QByteArray
     |  
     |  readChannelCount(...)
     |      readChannelCount(self) -> int
     |  
     |  readChannelFinished = <unbound PYQT_SIGNAL readChannelFinished()>
     |  readLine(...)
     |      readLine(self, maxlen: int = 0) -> bytes
     |  
     |  readyRead = <unbound PYQT_SIGNAL readyRead()>
     |  reset(...)
     |      reset(self) -> bool
     |  
     |  rollbackTransaction(...)
     |      rollbackTransaction(self)
     |  
     |  setCurrentReadChannel(...)
     |      setCurrentReadChannel(self, int)
     |  
     |  setCurrentWriteChannel(...)
     |      setCurrentWriteChannel(self, int)
     |  
     |  setErrorString(...)
     |      setErrorString(self, str)
     |  
     |  setOpenMode(...)
     |      setOpenMode(self, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |  
     |  setTextModeEnabled(...)
     |      setTextModeEnabled(self, bool)
     |  
     |  skip(...)
     |      skip(self, int) -> int
     |  
     |  startTransaction(...)
     |      startTransaction(self)
     |  
     |  ungetChar(...)
     |      ungetChar(self, str)
     |  
     |  waitForBytesWritten(...)
     |      waitForBytesWritten(self, int) -> bool
     |  
     |  waitForReadyRead(...)
     |      waitForReadyRead(self, int) -> bool
     |  
     |  write(...)
     |      write(self, Union[QByteArray, bytes, bytearray]) -> int
     |  
     |  writeChannelCount(...)
     |      writeChannelCount(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QIODevice:
     |  
     |  Append = 4
     |  
     |  ExistingOnly = 128
     |  
     |  NewOnly = 64
     |  
     |  NotOpen = 0
     |  
     |  OpenMode = <class 'PyQt5.QtCore.QIODevice.OpenMode'>
     |      QIODevice.OpenMode()
     |      QIODevice.OpenMode(Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |      QIODevice.OpenMode(QIODevice.OpenMode)
     |  
     |  OpenModeFlag = <class 'PyQt5.QtCore.QIODevice.OpenModeFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ReadOnly = 1
     |  
     |  ReadWrite = 3
     |  
     |  Text = 16
     |  
     |  Truncate = 8
     |  
     |  Unbuffered = 32
     |  
     |  WriteOnly = 2
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSemaphore(sip.simplewrapper)
     |  QSemaphore(n: int = 0)
     |  
     |  Method resolution order:
     |      QSemaphore
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  acquire(...)
     |      acquire(self, n: int = 1)
     |  
     |  available(...)
     |      available(self) -> int
     |  
     |  release(...)
     |      release(self, n: int = 1)
     |  
     |  tryAcquire(...)
     |      tryAcquire(self, n: int = 1) -> bool
     |      tryAcquire(self, int, int) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSemaphoreReleaser(sip.simplewrapper)
     |  QSemaphoreReleaser()
     |  QSemaphoreReleaser(QSemaphore, n: int = 1)
     |  
     |  Method resolution order:
     |      QSemaphoreReleaser
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  cancel(...)
     |      cancel(self) -> QSemaphore
     |  
     |  semaphore(...)
     |      semaphore(self) -> QSemaphore
     |  
     |  swap(...)
     |      swap(self, QSemaphoreReleaser)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSequentialAnimationGroup(QAnimationGroup)
     |  QSequentialAnimationGroup(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QSequentialAnimationGroup
     |      QAnimationGroup
     |      QAbstractAnimation
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  addPause(...)
     |      addPause(self, int) -> QPauseAnimation
     |  
     |  currentAnimation(...)
     |      currentAnimation(self) -> QAbstractAnimation
     |  
     |  currentAnimationChanged = <unbound PYQT_SIGNAL currentAnimationChanged(QAbstractAnimation*)>
     |  duration(...)
     |      duration(self) -> int
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  insertPause(...)
     |      insertPause(self, int, int) -> QPauseAnimation
     |  
     |  updateCurrentTime(...)
     |      updateCurrentTime(self, int)
     |  
     |  updateDirection(...)
     |      updateDirection(self, QAbstractAnimation.Direction)
     |  
     |  updateState(...)
     |      updateState(self, QAbstractAnimation.State, QAbstractAnimation.State)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAnimationGroup:
     |  
     |  addAnimation(...)
     |      addAnimation(self, QAbstractAnimation)
     |  
     |  animationAt(...)
     |      animationAt(self, int) -> QAbstractAnimation
     |  
     |  animationCount(...)
     |      animationCount(self) -> int
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  indexOfAnimation(...)
     |      indexOfAnimation(self, QAbstractAnimation) -> int
     |  
     |  insertAnimation(...)
     |      insertAnimation(self, int, QAbstractAnimation)
     |  
     |  removeAnimation(...)
     |      removeAnimation(self, QAbstractAnimation)
     |  
     |  takeAnimation(...)
     |      takeAnimation(self, int) -> QAbstractAnimation
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractAnimation:
     |  
     |  currentLoop(...)
     |      currentLoop(self) -> int
     |  
     |  currentLoopChanged = <unbound PYQT_SIGNAL currentLoopChanged(int)>
     |  currentLoopTime(...)
     |      currentLoopTime(self) -> int
     |  
     |  currentTime(...)
     |      currentTime(self) -> int
     |  
     |  direction(...)
     |      direction(self) -> QAbstractAnimation.Direction
     |  
     |  directionChanged = <unbound PYQT_SIGNAL directionChanged(QAbstractAnimation::Direction)>
     |  finished = <unbound PYQT_SIGNAL finished()>
     |  group(...)
     |      group(self) -> QAnimationGroup
     |  
     |  loopCount(...)
     |      loopCount(self) -> int
     |  
     |  pause(...)
     |      pause(self)
     |  
     |  resume(...)
     |      resume(self)
     |  
     |  setCurrentTime(...)
     |      setCurrentTime(self, int)
     |  
     |  setDirection(...)
     |      setDirection(self, QAbstractAnimation.Direction)
     |  
     |  setLoopCount(...)
     |      setLoopCount(self, int)
     |  
     |  setPaused(...)
     |      setPaused(self, bool)
     |  
     |  start(...)
     |      start(self, policy: QAbstractAnimation.DeletionPolicy = QAbstractAnimation.KeepWhenStopped)
     |  
     |  state(...)
     |      state(self) -> QAbstractAnimation.State
     |  
     |  stateChanged = <unbound PYQT_SIGNAL stateChanged(QAbstractAnimation::State,QAbstractAnimation::State)>
     |  stop(...)
     |      stop(self)
     |  
     |  totalDuration(...)
     |      totalDuration(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QAbstractAnimation:
     |  
     |  Backward = 1
     |  
     |  DeleteWhenStopped = 1
     |  
     |  DeletionPolicy = <class 'PyQt5.QtCore.QAbstractAnimation.DeletionPolic...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Direction = <class 'PyQt5.QtCore.QAbstractAnimation.Direction'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Forward = 0
     |  
     |  KeepWhenStopped = 0
     |  
     |  Paused = 1
     |  
     |  Running = 2
     |  
     |  State = <class 'PyQt5.QtCore.QAbstractAnimation.State'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Stopped = 0
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSettings(QObject)
     |  QSettings(str, application: str = '', parent: QObject = None)
     |  QSettings(QSettings.Scope, str, application: str = '', parent: QObject = None)
     |  QSettings(QSettings.Format, QSettings.Scope, str, application: str = '', parent: QObject = None)
     |  QSettings(str, QSettings.Format, parent: QObject = None)
     |  QSettings(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QSettings
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  allKeys(...)
     |      allKeys(self) -> List[str]
     |  
     |  applicationName(...)
     |      applicationName(self) -> str
     |  
     |  beginGroup(...)
     |      beginGroup(self, str)
     |  
     |  beginReadArray(...)
     |      beginReadArray(self, str) -> int
     |  
     |  beginWriteArray(...)
     |      beginWriteArray(self, str, size: int = -1)
     |  
     |  childGroups(...)
     |      childGroups(self) -> List[str]
     |  
     |  childKeys(...)
     |      childKeys(self) -> List[str]
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  contains(...)
     |      contains(self, str) -> bool
     |  
     |  defaultFormat(...)
     |      defaultFormat() -> QSettings.Format
     |  
     |  endArray(...)
     |      endArray(self)
     |  
     |  endGroup(...)
     |      endGroup(self)
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  fallbacksEnabled(...)
     |      fallbacksEnabled(self) -> bool
     |  
     |  fileName(...)
     |      fileName(self) -> str
     |  
     |  format(...)
     |      format(self) -> QSettings.Format
     |  
     |  group(...)
     |      group(self) -> str
     |  
     |  iniCodec(...)
     |      iniCodec(self) -> QTextCodec
     |  
     |  isAtomicSyncRequired(...)
     |      isAtomicSyncRequired(self) -> bool
     |  
     |  isWritable(...)
     |      isWritable(self) -> bool
     |  
     |  organizationName(...)
     |      organizationName(self) -> str
     |  
     |  remove(...)
     |      remove(self, str)
     |  
     |  scope(...)
     |      scope(self) -> QSettings.Scope
     |  
     |  setArrayIndex(...)
     |      setArrayIndex(self, int)
     |  
     |  setAtomicSyncRequired(...)
     |      setAtomicSyncRequired(self, bool)
     |  
     |  setDefaultFormat(...)
     |      setDefaultFormat(QSettings.Format)
     |  
     |  setFallbacksEnabled(...)
     |      setFallbacksEnabled(self, bool)
     |  
     |  setIniCodec(...)
     |      setIniCodec(self, QTextCodec)
     |      setIniCodec(self, str)
     |  
     |  setPath(...)
     |      setPath(QSettings.Format, QSettings.Scope, str)
     |  
     |  setValue(...)
     |      setValue(self, str, Any)
     |  
     |  status(...)
     |      status(self) -> QSettings.Status
     |  
     |  sync(...)
     |      sync(self)
     |  
     |  value(...)
     |      value(self, str, defaultValue: Any = None, type: type = None) -> object
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AccessError = 1
     |  
     |  Format = <class 'PyQt5.QtCore.QSettings.Format'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FormatError = 2
     |  
     |  IniFormat = 1
     |  
     |  InvalidFormat = 16
     |  
     |  NativeFormat = 0
     |  
     |  NoError = 0
     |  
     |  Scope = <class 'PyQt5.QtCore.QSettings.Scope'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Status = <class 'PyQt5.QtCore.QSettings.Status'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  SystemScope = 1
     |  
     |  UserScope = 0
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSharedMemory(QObject)
     |  QSharedMemory(parent: QObject = None)
     |  QSharedMemory(str, parent: QObject = None)
     |  
     |  Method resolution order:
     |      QSharedMemory
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  attach(...)
     |      attach(self, mode: QSharedMemory.AccessMode = QSharedMemory.ReadWrite) -> bool
     |  
     |  constData(...)
     |      constData(self) -> sip.voidptr
     |  
     |  create(...)
     |      create(self, int, mode: QSharedMemory.AccessMode = QSharedMemory.ReadWrite) -> bool
     |  
     |  data(...)
     |      data(self) -> sip.voidptr
     |  
     |  detach(...)
     |      detach(self) -> bool
     |  
     |  error(...)
     |      error(self) -> QSharedMemory.SharedMemoryError
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  isAttached(...)
     |      isAttached(self) -> bool
     |  
     |  key(...)
     |      key(self) -> str
     |  
     |  lock(...)
     |      lock(self) -> bool
     |  
     |  nativeKey(...)
     |      nativeKey(self) -> str
     |  
     |  setKey(...)
     |      setKey(self, str)
     |  
     |  setNativeKey(...)
     |      setNativeKey(self, str)
     |  
     |  size(...)
     |      size(self) -> int
     |  
     |  unlock(...)
     |      unlock(self) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AccessMode = <class 'PyQt5.QtCore.QSharedMemory.AccessMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  AlreadyExists = 4
     |  
     |  InvalidSize = 2
     |  
     |  KeyError = 3
     |  
     |  LockError = 6
     |  
     |  NoError = 0
     |  
     |  NotFound = 5
     |  
     |  OutOfResources = 7
     |  
     |  PermissionDenied = 1
     |  
     |  ReadOnly = 0
     |  
     |  ReadWrite = 1
     |  
     |  SharedMemoryError = <class 'PyQt5.QtCore.QSharedMemory.SharedMemoryErr...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  UnknownError = 8
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSignalBlocker(sip.simplewrapper)
     |  QSignalBlocker(QObject)
     |  
     |  Method resolution order:
     |      QSignalBlocker
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __enter__(...)
     |      __enter__(self) -> object
     |  
     |  __exit__(...)
     |      __exit__(self, object, object, object)
     |  
     |  reblock(...)
     |      reblock(self)
     |  
     |  unblock(...)
     |      unblock(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSignalMapper(QObject)
     |  QSignalMapper(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QSignalMapper
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  map(...)
     |      map(self)
     |      map(self, QObject)
     |  
     |  mapped = <unbound PYQT_SIGNAL mapped(int)>
     |  mapping(...)
     |      mapping(self, int) -> QObject
     |      mapping(self, str) -> QObject
     |      mapping(self, QWidget) -> QObject
     |      mapping(self, QObject) -> QObject
     |  
     |  removeMappings(...)
     |      removeMappings(self, QObject)
     |  
     |  setMapping(...)
     |      setMapping(self, QObject, int)
     |      setMapping(self, QObject, str)
     |      setMapping(self, QObject, QWidget)
     |      setMapping(self, QObject, QObject)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSignalTransition(QAbstractTransition)
     |  QSignalTransition(sourceState: QState = None)
     |  QSignalTransition(pyqtBoundSignal, sourceState: QState = None)
     |  
     |  Method resolution order:
     |      QSignalTransition
     |      QAbstractTransition
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventTest(...)
     |      eventTest(self, QEvent) -> bool
     |  
     |  onTransition(...)
     |      onTransition(self, QEvent)
     |  
     |  senderObject(...)
     |      senderObject(self) -> QObject
     |  
     |  senderObjectChanged = <unbound PYQT_SIGNAL senderObjectChanged()>
     |  setSenderObject(...)
     |      setSenderObject(self, QObject)
     |  
     |  setSignal(...)
     |      setSignal(self, Union[QByteArray, bytes, bytearray])
     |  
     |  signal(...)
     |      signal(self) -> QByteArray
     |  
     |  signalChanged = <unbound PYQT_SIGNAL signalChanged()>
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractTransition:
     |  
     |  addAnimation(...)
     |      addAnimation(self, QAbstractAnimation)
     |  
     |  animations(...)
     |      animations(self) -> List[QAbstractAnimation]
     |  
     |  machine(...)
     |      machine(self) -> QStateMachine
     |  
     |  removeAnimation(...)
     |      removeAnimation(self, QAbstractAnimation)
     |  
     |  setTargetState(...)
     |      setTargetState(self, QAbstractState)
     |  
     |  setTargetStates(...)
     |      setTargetStates(self, Iterable[QAbstractState])
     |  
     |  setTransitionType(...)
     |      setTransitionType(self, QAbstractTransition.TransitionType)
     |  
     |  sourceState(...)
     |      sourceState(self) -> QState
     |  
     |  targetState(...)
     |      targetState(self) -> QAbstractState
     |  
     |  targetStateChanged = <unbound PYQT_SIGNAL targetStateChanged()>
     |  targetStates(...)
     |      targetStates(self) -> List[QAbstractState]
     |  
     |  targetStatesChanged = <unbound PYQT_SIGNAL targetStatesChanged()>
     |  transitionType(...)
     |      transitionType(self) -> QAbstractTransition.TransitionType
     |  
     |  triggered = <unbound PYQT_SIGNAL triggered()>
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QAbstractTransition:
     |  
     |  ExternalTransition = 0
     |  
     |  InternalTransition = 1
     |  
     |  TransitionType = <class 'PyQt5.QtCore.QAbstractTransition.TransitionTy...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSize(sip.simplewrapper)
     |  QSize()
     |  QSize(int, int)
     |  QSize(QSize)
     |  
     |  Method resolution order:
     |      QSize
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __bool__(self, /)
     |      self != 0
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __iadd__(self, value, /)
     |      Return self+=value.
     |  
     |  __imul__(self, value, /)
     |      Return self*=value.
     |  
     |  __isub__(self, value, /)
     |      Return self-=value.
     |  
     |  __itruediv__(self, value, /)
     |      Return self/=value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __radd__(self, value, /)
     |      Return value+self.
     |  
     |  __reduce__ = _pickle_type(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __rmul__(self, value, /)
     |      Return value*self.
     |  
     |  __rsub__(self, value, /)
     |      Return value-self.
     |  
     |  __rtruediv__(self, value, /)
     |      Return value/self.
     |  
     |  __sub__(self, value, /)
     |      Return self-value.
     |  
     |  __truediv__(self, value, /)
     |      Return self/value.
     |  
     |  boundedTo(...)
     |      boundedTo(self, QSize) -> QSize
     |  
     |  expandedTo(...)
     |      expandedTo(self, QSize) -> QSize
     |  
     |  height(...)
     |      height(self) -> int
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  scale(...)
     |      scale(self, QSize, Qt.AspectRatioMode)
     |      scale(self, int, int, Qt.AspectRatioMode)
     |  
     |  scaled(...)
     |      scaled(self, QSize, Qt.AspectRatioMode) -> QSize
     |      scaled(self, int, int, Qt.AspectRatioMode) -> QSize
     |  
     |  setHeight(...)
     |      setHeight(self, int)
     |  
     |  setWidth(...)
     |      setWidth(self, int)
     |  
     |  transpose(...)
     |      transpose(self)
     |  
     |  transposed(...)
     |      transposed(self) -> QSize
     |  
     |  width(...)
     |      width(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSizeF(sip.simplewrapper)
     |  QSizeF()
     |  QSizeF(QSize)
     |  QSizeF(float, float)
     |  QSizeF(QSizeF)
     |  
     |  Method resolution order:
     |      QSizeF
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __bool__(self, /)
     |      self != 0
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __iadd__(self, value, /)
     |      Return self+=value.
     |  
     |  __imul__(self, value, /)
     |      Return self*=value.
     |  
     |  __isub__(self, value, /)
     |      Return self-=value.
     |  
     |  __itruediv__(self, value, /)
     |      Return self/=value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __radd__(self, value, /)
     |      Return value+self.
     |  
     |  __reduce__ = _pickle_type(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __rmul__(self, value, /)
     |      Return value*self.
     |  
     |  __rsub__(self, value, /)
     |      Return value-self.
     |  
     |  __rtruediv__(self, value, /)
     |      Return value/self.
     |  
     |  __sub__(self, value, /)
     |      Return self-value.
     |  
     |  __truediv__(self, value, /)
     |      Return self/value.
     |  
     |  boundedTo(...)
     |      boundedTo(self, QSizeF) -> QSizeF
     |  
     |  expandedTo(...)
     |      expandedTo(self, QSizeF) -> QSizeF
     |  
     |  height(...)
     |      height(self) -> float
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  scale(...)
     |      scale(self, QSizeF, Qt.AspectRatioMode)
     |      scale(self, float, float, Qt.AspectRatioMode)
     |  
     |  scaled(...)
     |      scaled(self, QSizeF, Qt.AspectRatioMode) -> QSizeF
     |      scaled(self, float, float, Qt.AspectRatioMode) -> QSizeF
     |  
     |  setHeight(...)
     |      setHeight(self, float)
     |  
     |  setWidth(...)
     |      setWidth(self, float)
     |  
     |  toSize(...)
     |      toSize(self) -> QSize
     |  
     |  transpose(...)
     |      transpose(self)
     |  
     |  transposed(...)
     |      transposed(self) -> QSizeF
     |  
     |  width(...)
     |      width(self) -> float
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSocketNotifier(QObject)
     |  QSocketNotifier(sip.voidptr, QSocketNotifier.Type, parent: QObject = None)
     |  
     |  Method resolution order:
     |      QSocketNotifier
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  activated = <unbound PYQT_SIGNAL activated(int)>
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  isEnabled(...)
     |      isEnabled(self) -> bool
     |  
     |  setEnabled(...)
     |      setEnabled(self, bool)
     |  
     |  socket(...)
     |      socket(self) -> sip.voidptr
     |  
     |  type(...)
     |      type(self) -> QSocketNotifier.Type
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Exception = 2
     |  
     |  Read = 0
     |  
     |  Type = <class 'PyQt5.QtCore.QSocketNotifier.Type'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Write = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSortFilterProxyModel(QAbstractProxyModel)
     |  QSortFilterProxyModel(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QSortFilterProxyModel
     |      QAbstractProxyModel
     |      QAbstractItemModel
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  buddy(...)
     |      buddy(self, QModelIndex) -> QModelIndex
     |  
     |  canFetchMore(...)
     |      canFetchMore(self, QModelIndex) -> bool
     |  
     |  columnCount(...)
     |      columnCount(self, parent: QModelIndex = QModelIndex()) -> int
     |  
     |  data(...)
     |      data(self, QModelIndex, role: int = Qt.DisplayRole) -> Any
     |  
     |  dropMimeData(...)
     |      dropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool
     |  
     |  dynamicSortFilter(...)
     |      dynamicSortFilter(self) -> bool
     |  
     |  fetchMore(...)
     |      fetchMore(self, QModelIndex)
     |  
     |  filterAcceptsColumn(...)
     |      filterAcceptsColumn(self, int, QModelIndex) -> bool
     |  
     |  filterAcceptsRow(...)
     |      filterAcceptsRow(self, int, QModelIndex) -> bool
     |  
     |  filterCaseSensitivity(...)
     |      filterCaseSensitivity(self) -> Qt.CaseSensitivity
     |  
     |  filterKeyColumn(...)
     |      filterKeyColumn(self) -> int
     |  
     |  filterRegExp(...)
     |      filterRegExp(self) -> QRegExp
     |  
     |  filterRole(...)
     |      filterRole(self) -> int
     |  
     |  flags(...)
     |      flags(self, QModelIndex) -> Qt.ItemFlags
     |  
     |  hasChildren(...)
     |      hasChildren(self, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  headerData(...)
     |      headerData(self, int, Qt.Orientation, role: int = Qt.DisplayRole) -> Any
     |  
     |  index(...)
     |      index(self, int, int, parent: QModelIndex = QModelIndex()) -> QModelIndex
     |  
     |  insertColumns(...)
     |      insertColumns(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertRows(...)
     |      insertRows(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  invalidate(...)
     |      invalidate(self)
     |  
     |  invalidateFilter(...)
     |      invalidateFilter(self)
     |  
     |  isRecursiveFilteringEnabled(...)
     |      isRecursiveFilteringEnabled(self) -> bool
     |  
     |  isSortLocaleAware(...)
     |      isSortLocaleAware(self) -> bool
     |  
     |  lessThan(...)
     |      lessThan(self, QModelIndex, QModelIndex) -> bool
     |  
     |  mapFromSource(...)
     |      mapFromSource(self, QModelIndex) -> QModelIndex
     |  
     |  mapSelectionFromSource(...)
     |      mapSelectionFromSource(self, QItemSelection) -> QItemSelection
     |  
     |  mapSelectionToSource(...)
     |      mapSelectionToSource(self, QItemSelection) -> QItemSelection
     |  
     |  mapToSource(...)
     |      mapToSource(self, QModelIndex) -> QModelIndex
     |  
     |  match(...)
     |      match(self, QModelIndex, int, Any, hits: int = 1, flags: Union[Qt.MatchFlags, Qt.MatchFlag] = Qt.MatchStartsWith|Qt.MatchWrap) -> List[QModelIndex]
     |  
     |  mimeData(...)
     |      mimeData(self, Iterable[QModelIndex]) -> QMimeData
     |  
     |  mimeTypes(...)
     |      mimeTypes(self) -> List[str]
     |  
     |  parent(...)
     |      parent(self, QModelIndex) -> QModelIndex
     |      parent(self) -> QObject
     |  
     |  removeColumns(...)
     |      removeColumns(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeRows(...)
     |      removeRows(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  rowCount(...)
     |      rowCount(self, parent: QModelIndex = QModelIndex()) -> int
     |  
     |  setData(...)
     |      setData(self, QModelIndex, Any, role: int = Qt.EditRole) -> bool
     |  
     |  setDynamicSortFilter(...)
     |      setDynamicSortFilter(self, bool)
     |  
     |  setFilterCaseSensitivity(...)
     |      setFilterCaseSensitivity(self, Qt.CaseSensitivity)
     |  
     |  setFilterFixedString(...)
     |      setFilterFixedString(self, str)
     |  
     |  setFilterKeyColumn(...)
     |      setFilterKeyColumn(self, int)
     |  
     |  setFilterRegExp(...)
     |      setFilterRegExp(self, QRegExp)
     |      setFilterRegExp(self, str)
     |  
     |  setFilterRole(...)
     |      setFilterRole(self, int)
     |  
     |  setFilterWildcard(...)
     |      setFilterWildcard(self, str)
     |  
     |  setHeaderData(...)
     |      setHeaderData(self, int, Qt.Orientation, Any, role: int = Qt.EditRole) -> bool
     |  
     |  setRecursiveFilteringEnabled(...)
     |      setRecursiveFilteringEnabled(self, bool)
     |  
     |  setSortCaseSensitivity(...)
     |      setSortCaseSensitivity(self, Qt.CaseSensitivity)
     |  
     |  setSortLocaleAware(...)
     |      setSortLocaleAware(self, bool)
     |  
     |  setSortRole(...)
     |      setSortRole(self, int)
     |  
     |  setSourceModel(...)
     |      setSourceModel(self, QAbstractItemModel)
     |  
     |  sibling(...)
     |      sibling(self, int, int, QModelIndex) -> QModelIndex
     |  
     |  sort(...)
     |      sort(self, int, order: Qt.SortOrder = Qt.AscendingOrder)
     |  
     |  sortCaseSensitivity(...)
     |      sortCaseSensitivity(self) -> Qt.CaseSensitivity
     |  
     |  sortColumn(...)
     |      sortColumn(self) -> int
     |  
     |  sortOrder(...)
     |      sortOrder(self) -> Qt.SortOrder
     |  
     |  sortRole(...)
     |      sortRole(self) -> int
     |  
     |  span(...)
     |      span(self, QModelIndex) -> QSize
     |  
     |  supportedDropActions(...)
     |      supportedDropActions(self) -> Qt.DropActions
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractProxyModel:
     |  
     |  canDropMimeData(...)
     |      canDropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool
     |  
     |  itemData(...)
     |      itemData(self, QModelIndex) -> Dict[int, Any]
     |  
     |  resetInternalData(...)
     |      resetInternalData(self)
     |  
     |  revert(...)
     |      revert(self)
     |  
     |  setItemData(...)
     |      setItemData(self, QModelIndex, Dict[int, Any]) -> bool
     |  
     |  sourceModel(...)
     |      sourceModel(self) -> QAbstractItemModel
     |  
     |  sourceModelChanged = <unbound PYQT_SIGNAL sourceModelChanged()>
     |  submit(...)
     |      submit(self) -> bool
     |  
     |  supportedDragActions(...)
     |      supportedDragActions(self) -> Qt.DropActions
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractItemModel:
     |  
     |  beginInsertColumns(...)
     |      beginInsertColumns(self, QModelIndex, int, int)
     |  
     |  beginInsertRows(...)
     |      beginInsertRows(self, QModelIndex, int, int)
     |  
     |  beginMoveColumns(...)
     |      beginMoveColumns(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  beginMoveRows(...)
     |      beginMoveRows(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  beginRemoveColumns(...)
     |      beginRemoveColumns(self, QModelIndex, int, int)
     |  
     |  beginRemoveRows(...)
     |      beginRemoveRows(self, QModelIndex, int, int)
     |  
     |  beginResetModel(...)
     |      beginResetModel(self)
     |  
     |  changePersistentIndex(...)
     |      changePersistentIndex(self, QModelIndex, QModelIndex)
     |  
     |  changePersistentIndexList(...)
     |      changePersistentIndexList(self, Iterable[QModelIndex], Iterable[QModelIndex])
     |  
     |  checkIndex(...)
     |      checkIndex(self, QModelIndex, options: Union[QAbstractItemModel.CheckIndexOptions, QAbstractItemModel.CheckIndexOption] = QAbstractItemModel.CheckIndexOption.NoOption) -> bool
     |  
     |  columnsAboutToBeInserted = <unbound PYQT_SIGNAL columnsAboutToBeInserted(QModelIndex,int,int)>
     |  columnsAboutToBeMoved = <unbound PYQT_SIGNAL columnsAboutToBeMoved(QModelIndex,int,int,QModelIndex,int)>
     |  columnsAboutToBeRemoved = <unbound PYQT_SIGNAL columnsAboutToBeRemoved(QModelIndex,int,int)>
     |  columnsInserted = <unbound PYQT_SIGNAL columnsInserted(QModelIndex,int,int)>
     |  columnsMoved = <unbound PYQT_SIGNAL columnsMoved(QModelIndex,int,int,QModelIndex,int)>
     |  columnsRemoved = <unbound PYQT_SIGNAL columnsRemoved(QModelIndex,int,int)>
     |  createIndex(...)
     |      createIndex(self, int, int, object: object = 0) -> QModelIndex
     |  
     |  dataChanged = <unbound PYQT_SIGNAL dataChanged(QModelIndex,QModelIndex,QVector<int>)>
     |  decodeData(...)
     |      decodeData(self, int, int, QModelIndex, QDataStream) -> bool
     |  
     |  encodeData(...)
     |      encodeData(self, Iterable[QModelIndex], QDataStream)
     |  
     |  endInsertColumns(...)
     |      endInsertColumns(self)
     |  
     |  endInsertRows(...)
     |      endInsertRows(self)
     |  
     |  endMoveColumns(...)
     |      endMoveColumns(self)
     |  
     |  endMoveRows(...)
     |      endMoveRows(self)
     |  
     |  endRemoveColumns(...)
     |      endRemoveColumns(self)
     |  
     |  endRemoveRows(...)
     |      endRemoveRows(self)
     |  
     |  endResetModel(...)
     |      endResetModel(self)
     |  
     |  hasIndex(...)
     |      hasIndex(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  headerDataChanged = <unbound PYQT_SIGNAL headerDataChanged(Qt::Orientation,int,int)>
     |  insertColumn(...)
     |      insertColumn(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertRow(...)
     |      insertRow(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  layoutAboutToBeChanged = <unbound PYQT_SIGNAL layoutAboutToBeChanged(QLis...odelIndex>,QAbstractItemModel::LayoutChangeHint)>
     |  layoutChanged = <unbound PYQT_SIGNAL layoutChanged(QList<QPersis...odelIndex>,QAbstractItemModel::LayoutChangeHint)>
     |  modelAboutToBeReset = <unbound PYQT_SIGNAL modelAboutToBeReset()>
     |  modelReset = <unbound PYQT_SIGNAL modelReset()>
     |  moveColumn(...)
     |      moveColumn(self, QModelIndex, int, QModelIndex, int) -> bool
     |  
     |  moveColumns(...)
     |      moveColumns(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  moveRow(...)
     |      moveRow(self, QModelIndex, int, QModelIndex, int) -> bool
     |  
     |  moveRows(...)
     |      moveRows(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  persistentIndexList(...)
     |      persistentIndexList(self) -> List[QModelIndex]
     |  
     |  removeColumn(...)
     |      removeColumn(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeRow(...)
     |      removeRow(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  roleNames(...)
     |      roleNames(self) -> Dict[int, QByteArray]
     |  
     |  rowsAboutToBeInserted = <unbound PYQT_SIGNAL rowsAboutToBeInserted(QModelIndex,int,int)>
     |  rowsAboutToBeMoved = <unbound PYQT_SIGNAL rowsAboutToBeMoved(QModelIndex,int,int,QModelIndex,int)>
     |  rowsAboutToBeRemoved = <unbound PYQT_SIGNAL rowsAboutToBeRemoved(QModelIndex,int,int)>
     |  rowsInserted = <unbound PYQT_SIGNAL rowsInserted(QModelIndex,int,int)>
     |  rowsMoved = <unbound PYQT_SIGNAL rowsMoved(QModelIndex,int,int,QModelIndex,int)>
     |  rowsRemoved = <unbound PYQT_SIGNAL rowsRemoved(QModelIndex,int,int)>
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QAbstractItemModel:
     |  
     |  CheckIndexOption = <enum 'CheckIndexOption'>
     |      An enumeration.
     |  
     |  CheckIndexOptions = <class 'PyQt5.QtCore.QAbstractItemModel.CheckIndex...
     |      QAbstractItemModel.CheckIndexOptions()
     |      QAbstractItemModel.CheckIndexOptions(Union[QAbstractItemModel.CheckIndexOptions, QAbstractItemModel.CheckIndexOption])
     |      QAbstractItemModel.CheckIndexOptions(QAbstractItemModel.CheckIndexOptions)
     |  
     |  HorizontalSortHint = 2
     |  
     |  LayoutChangeHint = <class 'PyQt5.QtCore.QAbstractItemModel.LayoutChang...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NoLayoutChangeHint = 0
     |  
     |  VerticalSortHint = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QStandardPaths(sip.simplewrapper)
     |  QStandardPaths(QStandardPaths)
     |  
     |  Method resolution order:
     |      QStandardPaths
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  displayName(...)
     |      displayName(QStandardPaths.StandardLocation) -> str
     |  
     |  enableTestMode(...)
     |      enableTestMode(bool)
     |  
     |  findExecutable(...)
     |      findExecutable(str, paths: Iterable[str] = []) -> str
     |  
     |  locate(...)
     |      locate(QStandardPaths.StandardLocation, str, options: QStandardPaths.LocateOptions = QStandardPaths.LocateFile) -> str
     |  
     |  locateAll(...)
     |      locateAll(QStandardPaths.StandardLocation, str, options: QStandardPaths.LocateOptions = QStandardPaths.LocateFile) -> List[str]
     |  
     |  setTestModeEnabled(...)
     |      setTestModeEnabled(bool)
     |  
     |  standardLocations(...)
     |      standardLocations(QStandardPaths.StandardLocation) -> List[str]
     |  
     |  writableLocation(...)
     |      writableLocation(QStandardPaths.StandardLocation) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AppConfigLocation = 18
     |  
     |  AppDataLocation = 17
     |  
     |  AppLocalDataLocation = 9
     |  
     |  ApplicationsLocation = 3
     |  
     |  CacheLocation = 10
     |  
     |  ConfigLocation = 13
     |  
     |  DataLocation = 9
     |  
     |  DesktopLocation = 0
     |  
     |  DocumentsLocation = 1
     |  
     |  DownloadLocation = 14
     |  
     |  FontsLocation = 2
     |  
     |  GenericCacheLocation = 15
     |  
     |  GenericConfigLocation = 16
     |  
     |  GenericDataLocation = 11
     |  
     |  HomeLocation = 8
     |  
     |  LocateDirectory = 1
     |  
     |  LocateFile = 0
     |  
     |  LocateOption = <class 'PyQt5.QtCore.QStandardPaths.LocateOption'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  LocateOptions = <class 'PyQt5.QtCore.QStandardPaths.LocateOptions'>
     |      QStandardPaths.LocateOptions()
     |      QStandardPaths.LocateOptions(Union[QStandardPaths.LocateOptions, QStandardPaths.LocateOption])
     |      QStandardPaths.LocateOptions(QStandardPaths.LocateOptions)
     |  
     |  MoviesLocation = 5
     |  
     |  MusicLocation = 4
     |  
     |  PicturesLocation = 6
     |  
     |  RuntimeLocation = 12
     |  
     |  StandardLocation = <class 'PyQt5.QtCore.QStandardPaths.StandardLocatio...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TempLocation = 7
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QState(QAbstractState)
     |  QState(parent: QState = None)
     |  QState(QState.ChildMode, parent: QState = None)
     |  
     |  Method resolution order:
     |      QState
     |      QAbstractState
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  addTransition(...)
     |      addTransition(self, QAbstractTransition)
     |      addTransition(self, pyqtBoundSignal, QAbstractState) -> QSignalTransition
     |      addTransition(self, QAbstractState) -> QAbstractTransition
     |  
     |  assignProperty(...)
     |      assignProperty(self, QObject, str, Any)
     |  
     |  childMode(...)
     |      childMode(self) -> QState.ChildMode
     |  
     |  childModeChanged = <unbound PYQT_SIGNAL childModeChanged()>
     |  errorState(...)
     |      errorState(self) -> QAbstractState
     |  
     |  errorStateChanged = <unbound PYQT_SIGNAL errorStateChanged()>
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  finished = <unbound PYQT_SIGNAL finished()>
     |  initialState(...)
     |      initialState(self) -> QAbstractState
     |  
     |  initialStateChanged = <unbound PYQT_SIGNAL initialStateChanged()>
     |  onEntry(...)
     |      onEntry(self, QEvent)
     |  
     |  onExit(...)
     |      onExit(self, QEvent)
     |  
     |  propertiesAssigned = <unbound PYQT_SIGNAL propertiesAssigned()>
     |  removeTransition(...)
     |      removeTransition(self, QAbstractTransition)
     |  
     |  setChildMode(...)
     |      setChildMode(self, QState.ChildMode)
     |  
     |  setErrorState(...)
     |      setErrorState(self, QAbstractState)
     |  
     |  setInitialState(...)
     |      setInitialState(self, QAbstractState)
     |  
     |  transitions(...)
     |      transitions(self) -> List[QAbstractTransition]
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ChildMode = <class 'PyQt5.QtCore.QState.ChildMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  DontRestoreProperties = 0
     |  
     |  ExclusiveStates = 0
     |  
     |  ParallelStates = 1
     |  
     |  RestorePolicy = <class 'PyQt5.QtCore.QState.RestorePolicy'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  RestoreProperties = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractState:
     |  
     |  active(...)
     |      active(self) -> bool
     |  
     |  activeChanged = <unbound PYQT_SIGNAL activeChanged(bool)>
     |  entered = <unbound PYQT_SIGNAL entered()>
     |  exited = <unbound PYQT_SIGNAL exited()>
     |  machine(...)
     |      machine(self) -> QStateMachine
     |  
     |  parentState(...)
     |      parentState(self) -> QState
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QStateMachine(QState)
     |  QStateMachine(parent: QObject = None)
     |  QStateMachine(QState.ChildMode, parent: QObject = None)
     |  
     |  Method resolution order:
     |      QStateMachine
     |      QState
     |      QAbstractState
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  addDefaultAnimation(...)
     |      addDefaultAnimation(self, QAbstractAnimation)
     |  
     |  addState(...)
     |      addState(self, QAbstractState)
     |  
     |  cancelDelayedEvent(...)
     |      cancelDelayedEvent(self, int) -> bool
     |  
     |  clearError(...)
     |      clearError(self)
     |  
     |  configuration(...)
     |      configuration(self) -> Set[QAbstractState]
     |  
     |  defaultAnimations(...)
     |      defaultAnimations(self) -> List[QAbstractAnimation]
     |  
     |  error(...)
     |      error(self) -> QStateMachine.Error
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  globalRestorePolicy(...)
     |      globalRestorePolicy(self) -> QState.RestorePolicy
     |  
     |  isAnimated(...)
     |      isAnimated(self) -> bool
     |  
     |  isRunning(...)
     |      isRunning(self) -> bool
     |  
     |  onEntry(...)
     |      onEntry(self, QEvent)
     |  
     |  onExit(...)
     |      onExit(self, QEvent)
     |  
     |  postDelayedEvent(...)
     |      postDelayedEvent(self, QEvent, int) -> int
     |  
     |  postEvent(...)
     |      postEvent(self, QEvent, priority: QStateMachine.EventPriority = QStateMachine.NormalPriority)
     |  
     |  removeDefaultAnimation(...)
     |      removeDefaultAnimation(self, QAbstractAnimation)
     |  
     |  removeState(...)
     |      removeState(self, QAbstractState)
     |  
     |  runningChanged = <unbound PYQT_SIGNAL runningChanged(bool)>
     |  setAnimated(...)
     |      setAnimated(self, bool)
     |  
     |  setGlobalRestorePolicy(...)
     |      setGlobalRestorePolicy(self, QState.RestorePolicy)
     |  
     |  setRunning(...)
     |      setRunning(self, bool)
     |  
     |  start(...)
     |      start(self)
     |  
     |  started = <unbound PYQT_SIGNAL started()>
     |  stop(...)
     |      stop(self)
     |  
     |  stopped = <unbound PYQT_SIGNAL stopped()>
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Error = <class 'PyQt5.QtCore.QStateMachine.Error'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  EventPriority = <class 'PyQt5.QtCore.QStateMachine.EventPriority'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  HighPriority = 1
     |  
     |  NoCommonAncestorForTransitionError = 3
     |  
     |  NoDefaultStateInHistoryStateError = 2
     |  
     |  NoError = 0
     |  
     |  NoInitialStateError = 1
     |  
     |  NormalPriority = 0
     |  
     |  SignalEvent = <class 'PyQt5.QtCore.QStateMachine.SignalEvent'>
     |      QEvent(QEvent.Type)
     |      QEvent(QEvent)
     |  
     |  WrappedEvent = <class 'PyQt5.QtCore.QStateMachine.WrappedEvent'>
     |      QEvent(QEvent.Type)
     |      QEvent(QEvent)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QState:
     |  
     |  addTransition(...)
     |      addTransition(self, QAbstractTransition)
     |      addTransition(self, pyqtBoundSignal, QAbstractState) -> QSignalTransition
     |      addTransition(self, QAbstractState) -> QAbstractTransition
     |  
     |  assignProperty(...)
     |      assignProperty(self, QObject, str, Any)
     |  
     |  childMode(...)
     |      childMode(self) -> QState.ChildMode
     |  
     |  childModeChanged = <unbound PYQT_SIGNAL childModeChanged()>
     |  errorState(...)
     |      errorState(self) -> QAbstractState
     |  
     |  errorStateChanged = <unbound PYQT_SIGNAL errorStateChanged()>
     |  finished = <unbound PYQT_SIGNAL finished()>
     |  initialState(...)
     |      initialState(self) -> QAbstractState
     |  
     |  initialStateChanged = <unbound PYQT_SIGNAL initialStateChanged()>
     |  propertiesAssigned = <unbound PYQT_SIGNAL propertiesAssigned()>
     |  removeTransition(...)
     |      removeTransition(self, QAbstractTransition)
     |  
     |  setChildMode(...)
     |      setChildMode(self, QState.ChildMode)
     |  
     |  setErrorState(...)
     |      setErrorState(self, QAbstractState)
     |  
     |  setInitialState(...)
     |      setInitialState(self, QAbstractState)
     |  
     |  transitions(...)
     |      transitions(self) -> List[QAbstractTransition]
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QState:
     |  
     |  ChildMode = <class 'PyQt5.QtCore.QState.ChildMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  DontRestoreProperties = 0
     |  
     |  ExclusiveStates = 0
     |  
     |  ParallelStates = 1
     |  
     |  RestorePolicy = <class 'PyQt5.QtCore.QState.RestorePolicy'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  RestoreProperties = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractState:
     |  
     |  active(...)
     |      active(self) -> bool
     |  
     |  activeChanged = <unbound PYQT_SIGNAL activeChanged(bool)>
     |  entered = <unbound PYQT_SIGNAL entered()>
     |  exited = <unbound PYQT_SIGNAL exited()>
     |  machine(...)
     |      machine(self) -> QStateMachine
     |  
     |  parentState(...)
     |      parentState(self) -> QState
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QStorageInfo(sip.simplewrapper)
     |  QStorageInfo()
     |  QStorageInfo(str)
     |  QStorageInfo(QDir)
     |  QStorageInfo(QStorageInfo)
     |  
     |  Method resolution order:
     |      QStorageInfo
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  blockSize(...)
     |      blockSize(self) -> int
     |  
     |  bytesAvailable(...)
     |      bytesAvailable(self) -> int
     |  
     |  bytesFree(...)
     |      bytesFree(self) -> int
     |  
     |  bytesTotal(...)
     |      bytesTotal(self) -> int
     |  
     |  device(...)
     |      device(self) -> QByteArray
     |  
     |  displayName(...)
     |      displayName(self) -> str
     |  
     |  fileSystemType(...)
     |      fileSystemType(self) -> QByteArray
     |  
     |  isReadOnly(...)
     |      isReadOnly(self) -> bool
     |  
     |  isReady(...)
     |      isReady(self) -> bool
     |  
     |  isRoot(...)
     |      isRoot(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  mountedVolumes(...)
     |      mountedVolumes() -> List[QStorageInfo]
     |  
     |  name(...)
     |      name(self) -> str
     |  
     |  refresh(...)
     |      refresh(self)
     |  
     |  root(...)
     |      root() -> QStorageInfo
     |  
     |  rootPath(...)
     |      rootPath(self) -> str
     |  
     |  setPath(...)
     |      setPath(self, str)
     |  
     |  subvolume(...)
     |      subvolume(self) -> QByteArray
     |  
     |  swap(...)
     |      swap(self, QStorageInfo)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QStringListModel(QAbstractListModel)
     |  QStringListModel(parent: QObject = None)
     |  QStringListModel(Iterable[str], parent: QObject = None)
     |  
     |  Method resolution order:
     |      QStringListModel
     |      QAbstractListModel
     |      QAbstractItemModel
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  data(...)
     |      data(self, QModelIndex, int) -> Any
     |  
     |  flags(...)
     |      flags(self, QModelIndex) -> Qt.ItemFlags
     |  
     |  insertRows(...)
     |      insertRows(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeRows(...)
     |      removeRows(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  rowCount(...)
     |      rowCount(self, parent: QModelIndex = QModelIndex()) -> int
     |  
     |  setData(...)
     |      setData(self, QModelIndex, Any, role: int = Qt.EditRole) -> bool
     |  
     |  setStringList(...)
     |      setStringList(self, Iterable[str])
     |  
     |  sibling(...)
     |      sibling(self, int, int, QModelIndex) -> QModelIndex
     |  
     |  sort(...)
     |      sort(self, int, order: Qt.SortOrder = Qt.AscendingOrder)
     |  
     |  stringList(...)
     |      stringList(self) -> List[str]
     |  
     |  supportedDropActions(...)
     |      supportedDropActions(self) -> Qt.DropActions
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractListModel:
     |  
     |  columnCount(...)
     |  
     |  dropMimeData(...)
     |      dropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool
     |  
     |  hasChildren(...)
     |  
     |  index(...)
     |      index(self, int, column: int = 0, parent: QModelIndex = QModelIndex()) -> QModelIndex
     |  
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractItemModel:
     |  
     |  beginInsertColumns(...)
     |      beginInsertColumns(self, QModelIndex, int, int)
     |  
     |  beginInsertRows(...)
     |      beginInsertRows(self, QModelIndex, int, int)
     |  
     |  beginMoveColumns(...)
     |      beginMoveColumns(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  beginMoveRows(...)
     |      beginMoveRows(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  beginRemoveColumns(...)
     |      beginRemoveColumns(self, QModelIndex, int, int)
     |  
     |  beginRemoveRows(...)
     |      beginRemoveRows(self, QModelIndex, int, int)
     |  
     |  beginResetModel(...)
     |      beginResetModel(self)
     |  
     |  buddy(...)
     |      buddy(self, QModelIndex) -> QModelIndex
     |  
     |  canDropMimeData(...)
     |      canDropMimeData(self, QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool
     |  
     |  canFetchMore(...)
     |      canFetchMore(self, QModelIndex) -> bool
     |  
     |  changePersistentIndex(...)
     |      changePersistentIndex(self, QModelIndex, QModelIndex)
     |  
     |  changePersistentIndexList(...)
     |      changePersistentIndexList(self, Iterable[QModelIndex], Iterable[QModelIndex])
     |  
     |  checkIndex(...)
     |      checkIndex(self, QModelIndex, options: Union[QAbstractItemModel.CheckIndexOptions, QAbstractItemModel.CheckIndexOption] = QAbstractItemModel.CheckIndexOption.NoOption) -> bool
     |  
     |  columnsAboutToBeInserted = <unbound PYQT_SIGNAL columnsAboutToBeInserted(QModelIndex,int,int)>
     |  columnsAboutToBeMoved = <unbound PYQT_SIGNAL columnsAboutToBeMoved(QModelIndex,int,int,QModelIndex,int)>
     |  columnsAboutToBeRemoved = <unbound PYQT_SIGNAL columnsAboutToBeRemoved(QModelIndex,int,int)>
     |  columnsInserted = <unbound PYQT_SIGNAL columnsInserted(QModelIndex,int,int)>
     |  columnsMoved = <unbound PYQT_SIGNAL columnsMoved(QModelIndex,int,int,QModelIndex,int)>
     |  columnsRemoved = <unbound PYQT_SIGNAL columnsRemoved(QModelIndex,int,int)>
     |  createIndex(...)
     |      createIndex(self, int, int, object: object = 0) -> QModelIndex
     |  
     |  dataChanged = <unbound PYQT_SIGNAL dataChanged(QModelIndex,QModelIndex,QVector<int>)>
     |  decodeData(...)
     |      decodeData(self, int, int, QModelIndex, QDataStream) -> bool
     |  
     |  encodeData(...)
     |      encodeData(self, Iterable[QModelIndex], QDataStream)
     |  
     |  endInsertColumns(...)
     |      endInsertColumns(self)
     |  
     |  endInsertRows(...)
     |      endInsertRows(self)
     |  
     |  endMoveColumns(...)
     |      endMoveColumns(self)
     |  
     |  endMoveRows(...)
     |      endMoveRows(self)
     |  
     |  endRemoveColumns(...)
     |      endRemoveColumns(self)
     |  
     |  endRemoveRows(...)
     |      endRemoveRows(self)
     |  
     |  endResetModel(...)
     |      endResetModel(self)
     |  
     |  fetchMore(...)
     |      fetchMore(self, QModelIndex)
     |  
     |  hasIndex(...)
     |      hasIndex(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  headerData(...)
     |      headerData(self, int, Qt.Orientation, role: int = Qt.DisplayRole) -> Any
     |  
     |  headerDataChanged = <unbound PYQT_SIGNAL headerDataChanged(Qt::Orientation,int,int)>
     |  insertColumn(...)
     |      insertColumn(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertColumns(...)
     |      insertColumns(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  insertRow(...)
     |      insertRow(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  itemData(...)
     |      itemData(self, QModelIndex) -> Dict[int, Any]
     |  
     |  layoutAboutToBeChanged = <unbound PYQT_SIGNAL layoutAboutToBeChanged(QLis...odelIndex>,QAbstractItemModel::LayoutChangeHint)>
     |  layoutChanged = <unbound PYQT_SIGNAL layoutChanged(QList<QPersis...odelIndex>,QAbstractItemModel::LayoutChangeHint)>
     |  match(...)
     |      match(self, QModelIndex, int, Any, hits: int = 1, flags: Union[Qt.MatchFlags, Qt.MatchFlag] = Qt.MatchStartsWith|Qt.MatchWrap) -> List[QModelIndex]
     |  
     |  mimeData(...)
     |      mimeData(self, Iterable[QModelIndex]) -> QMimeData
     |  
     |  mimeTypes(...)
     |      mimeTypes(self) -> List[str]
     |  
     |  modelAboutToBeReset = <unbound PYQT_SIGNAL modelAboutToBeReset()>
     |  modelReset = <unbound PYQT_SIGNAL modelReset()>
     |  moveColumn(...)
     |      moveColumn(self, QModelIndex, int, QModelIndex, int) -> bool
     |  
     |  moveColumns(...)
     |      moveColumns(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  moveRow(...)
     |      moveRow(self, QModelIndex, int, QModelIndex, int) -> bool
     |  
     |  moveRows(...)
     |      moveRows(self, QModelIndex, int, int, QModelIndex, int) -> bool
     |  
     |  persistentIndexList(...)
     |      persistentIndexList(self) -> List[QModelIndex]
     |  
     |  removeColumn(...)
     |      removeColumn(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeColumns(...)
     |      removeColumns(self, int, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  removeRow(...)
     |      removeRow(self, int, parent: QModelIndex = QModelIndex()) -> bool
     |  
     |  resetInternalData(...)
     |      resetInternalData(self)
     |  
     |  revert(...)
     |      revert(self)
     |  
     |  roleNames(...)
     |      roleNames(self) -> Dict[int, QByteArray]
     |  
     |  rowsAboutToBeInserted = <unbound PYQT_SIGNAL rowsAboutToBeInserted(QModelIndex,int,int)>
     |  rowsAboutToBeMoved = <unbound PYQT_SIGNAL rowsAboutToBeMoved(QModelIndex,int,int,QModelIndex,int)>
     |  rowsAboutToBeRemoved = <unbound PYQT_SIGNAL rowsAboutToBeRemoved(QModelIndex,int,int)>
     |  rowsInserted = <unbound PYQT_SIGNAL rowsInserted(QModelIndex,int,int)>
     |  rowsMoved = <unbound PYQT_SIGNAL rowsMoved(QModelIndex,int,int,QModelIndex,int)>
     |  rowsRemoved = <unbound PYQT_SIGNAL rowsRemoved(QModelIndex,int,int)>
     |  setHeaderData(...)
     |      setHeaderData(self, int, Qt.Orientation, Any, role: int = Qt.EditRole) -> bool
     |  
     |  setItemData(...)
     |      setItemData(self, QModelIndex, Dict[int, Any]) -> bool
     |  
     |  span(...)
     |      span(self, QModelIndex) -> QSize
     |  
     |  submit(...)
     |      submit(self) -> bool
     |  
     |  supportedDragActions(...)
     |      supportedDragActions(self) -> Qt.DropActions
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QAbstractItemModel:
     |  
     |  CheckIndexOption = <enum 'CheckIndexOption'>
     |      An enumeration.
     |  
     |  CheckIndexOptions = <class 'PyQt5.QtCore.QAbstractItemModel.CheckIndex...
     |      QAbstractItemModel.CheckIndexOptions()
     |      QAbstractItemModel.CheckIndexOptions(Union[QAbstractItemModel.CheckIndexOptions, QAbstractItemModel.CheckIndexOption])
     |      QAbstractItemModel.CheckIndexOptions(QAbstractItemModel.CheckIndexOptions)
     |  
     |  HorizontalSortHint = 2
     |  
     |  LayoutChangeHint = <class 'PyQt5.QtCore.QAbstractItemModel.LayoutChang...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NoLayoutChangeHint = 0
     |  
     |  VerticalSortHint = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSysInfo(sip.simplewrapper)
     |  QSysInfo()
     |  QSysInfo(QSysInfo)
     |  
     |  Method resolution order:
     |      QSysInfo
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  buildAbi(...)
     |      buildAbi() -> str
     |  
     |  buildCpuArchitecture(...)
     |      buildCpuArchitecture() -> str
     |  
     |  currentCpuArchitecture(...)
     |      currentCpuArchitecture() -> str
     |  
     |  kernelType(...)
     |      kernelType() -> str
     |  
     |  kernelVersion(...)
     |      kernelVersion() -> str
     |  
     |  machineHostName(...)
     |      machineHostName() -> str
     |  
     |  prettyProductName(...)
     |      prettyProductName() -> str
     |  
     |  productType(...)
     |      productType() -> str
     |  
     |  productVersion(...)
     |      productVersion() -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  BigEndian = 0
     |  
     |  ByteOrder = 1
     |  
     |  Endian = <class 'PyQt5.QtCore.QSysInfo.Endian'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  LittleEndian = 1
     |  
     |  Sizes = <class 'PyQt5.QtCore.QSysInfo.Sizes'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  WordSize = 64
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QSystemSemaphore(sip.simplewrapper)
     |  QSystemSemaphore(str, initialValue: int = 0, mode: QSystemSemaphore.AccessMode = QSystemSemaphore.Open)
     |  
     |  Method resolution order:
     |      QSystemSemaphore
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  acquire(...)
     |      acquire(self) -> bool
     |  
     |  error(...)
     |      error(self) -> QSystemSemaphore.SystemSemaphoreError
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  key(...)
     |      key(self) -> str
     |  
     |  release(...)
     |      release(self, n: int = 1) -> bool
     |  
     |  setKey(...)
     |      setKey(self, str, initialValue: int = 0, mode: QSystemSemaphore.AccessMode = QSystemSemaphore.Open)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AccessMode = <class 'PyQt5.QtCore.QSystemSemaphore.AccessMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  AlreadyExists = 3
     |  
     |  Create = 1
     |  
     |  KeyError = 2
     |  
     |  NoError = 0
     |  
     |  NotFound = 4
     |  
     |  Open = 0
     |  
     |  OutOfResources = 5
     |  
     |  PermissionDenied = 1
     |  
     |  SystemSemaphoreError = <class 'PyQt5.QtCore.QSystemSemaphore.SystemSem...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  UnknownError = 6
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QTemporaryDir(sip.simplewrapper)
     |  QTemporaryDir()
     |  QTemporaryDir(str)
     |  
     |  Method resolution order:
     |      QTemporaryDir
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  autoRemove(...)
     |      autoRemove(self) -> bool
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  filePath(...)
     |      filePath(self, str) -> str
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  path(...)
     |      path(self) -> str
     |  
     |  remove(...)
     |      remove(self) -> bool
     |  
     |  setAutoRemove(...)
     |      setAutoRemove(self, bool)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QTemporaryFile(QFile)
     |  QTemporaryFile()
     |  QTemporaryFile(str)
     |  QTemporaryFile(QObject)
     |  QTemporaryFile(str, QObject)
     |  
     |  Method resolution order:
     |      QTemporaryFile
     |      QFile
     |      QFileDevice
     |      QIODevice
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  autoRemove(...)
     |      autoRemove(self) -> bool
     |  
     |  createNativeFile(...)
     |      createNativeFile(str) -> QTemporaryFile
     |      createNativeFile(QFile) -> QTemporaryFile
     |  
     |  fileName(...)
     |      fileName(self) -> str
     |  
     |  fileTemplate(...)
     |      fileTemplate(self) -> str
     |  
     |  open(...)
     |      open(self) -> bool
     |      open(self, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag]) -> bool
     |  
     |  rename(...)
     |      rename(self, str) -> bool
     |  
     |  setAutoRemove(...)
     |      setAutoRemove(self, bool)
     |  
     |  setFileTemplate(...)
     |      setFileTemplate(self, str)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QFile:
     |  
     |  copy(...)
     |      copy(self, str) -> bool
     |      copy(str, str) -> bool
     |  
     |  decodeName(...)
     |      decodeName(Union[QByteArray, bytes, bytearray]) -> str
     |      decodeName(str) -> str
     |  
     |  encodeName(...)
     |      encodeName(str) -> QByteArray
     |  
     |  exists(...)
     |      exists(self) -> bool
     |      exists(str) -> bool
     |  
     |  link(...)
     |      link(self, str) -> bool
     |      link(str, str) -> bool
     |  
     |  permissions(...)
     |      permissions(self) -> QFileDevice.Permissions
     |      permissions(str) -> QFileDevice.Permissions
     |  
     |  remove(...)
     |      remove(self) -> bool
     |      remove(str) -> bool
     |  
     |  resize(...)
     |      resize(self, int) -> bool
     |      resize(str, int) -> bool
     |  
     |  setFileName(...)
     |      setFileName(self, str)
     |  
     |  setPermissions(...)
     |      setPermissions(self, Union[QFileDevice.Permissions, QFileDevice.Permission]) -> bool
     |      setPermissions(str, Union[QFileDevice.Permissions, QFileDevice.Permission]) -> bool
     |  
     |  size(...)
     |      size(self) -> int
     |  
     |  symLinkTarget(...)
     |      symLinkTarget(self) -> str
     |      symLinkTarget(str) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QFileDevice:
     |  
     |  atEnd(...)
     |      atEnd(self) -> bool
     |  
     |  close(...)
     |      close(self)
     |  
     |  error(...)
     |      error(self) -> QFileDevice.FileError
     |  
     |  fileTime(...)
     |      fileTime(self, QFileDevice.FileTime) -> QDateTime
     |  
     |  flush(...)
     |      flush(self) -> bool
     |  
     |  handle(...)
     |      handle(self) -> int
     |  
     |  isSequential(...)
     |      isSequential(self) -> bool
     |  
     |  map(...)
     |      map(self, int, int, flags: QFileDevice.MemoryMapFlags = QFileDevice.NoOptions) -> sip.voidptr
     |  
     |  pos(...)
     |      pos(self) -> int
     |  
     |  readData(...)
     |      readData(self, int) -> bytes
     |  
     |  readLineData(...)
     |      readLineData(self, int) -> bytes
     |  
     |  seek(...)
     |      seek(self, int) -> bool
     |  
     |  setFileTime(...)
     |      setFileTime(self, Union[QDateTime, datetime.datetime], QFileDevice.FileTime) -> bool
     |  
     |  unmap(...)
     |      unmap(self, sip.voidptr) -> bool
     |  
     |  unsetError(...)
     |      unsetError(self)
     |  
     |  writeData(...)
     |      writeData(self, bytes) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QFileDevice:
     |  
     |  AbortError = 6
     |  
     |  AutoCloseHandle = 1
     |  
     |  CopyError = 14
     |  
     |  DontCloseHandle = 0
     |  
     |  ExeGroup = 16
     |  
     |  ExeOther = 1
     |  
     |  ExeOwner = 4096
     |  
     |  ExeUser = 256
     |  
     |  FatalError = 3
     |  
     |  FileAccessTime = 0
     |  
     |  FileBirthTime = 1
     |  
     |  FileError = <class 'PyQt5.QtCore.QFileDevice.FileError'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FileHandleFlag = <class 'PyQt5.QtCore.QFileDevice.FileHandleFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FileHandleFlags = <class 'PyQt5.QtCore.QFileDevice.FileHandleFlags'>
     |      QFileDevice.FileHandleFlags()
     |      QFileDevice.FileHandleFlags(Union[QFileDevice.FileHandleFlags, QFileDevice.FileHandleFlag])
     |      QFileDevice.FileHandleFlags(QFileDevice.FileHandleFlags)
     |  
     |  FileMetadataChangeTime = 2
     |  
     |  FileModificationTime = 3
     |  
     |  FileTime = <class 'PyQt5.QtCore.QFileDevice.FileTime'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  MapPrivateOption = 1
     |  
     |  MemoryMapFlags = <class 'PyQt5.QtCore.QFileDevice.MemoryMapFlags'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NoError = 0
     |  
     |  NoOptions = 0
     |  
     |  OpenError = 5
     |  
     |  Permission = <class 'PyQt5.QtCore.QFileDevice.Permission'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Permissions = <class 'PyQt5.QtCore.QFileDevice.Permissions'>
     |      QFileDevice.Permissions()
     |      QFileDevice.Permissions(Union[QFileDevice.Permissions, QFileDevice.Permission])
     |      QFileDevice.Permissions(QFileDevice.Permissions)
     |  
     |  PermissionsError = 13
     |  
     |  PositionError = 11
     |  
     |  ReadError = 1
     |  
     |  ReadGroup = 64
     |  
     |  ReadOther = 4
     |  
     |  ReadOwner = 16384
     |  
     |  ReadUser = 1024
     |  
     |  RemoveError = 9
     |  
     |  RenameError = 10
     |  
     |  ResizeError = 12
     |  
     |  ResourceError = 4
     |  
     |  TimeOutError = 7
     |  
     |  UnspecifiedError = 8
     |  
     |  WriteError = 2
     |  
     |  WriteGroup = 32
     |  
     |  WriteOther = 2
     |  
     |  WriteOwner = 8192
     |  
     |  WriteUser = 512
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QIODevice:
     |  
     |  aboutToClose = <unbound PYQT_SIGNAL aboutToClose()>
     |  bytesAvailable(...)
     |      bytesAvailable(self) -> int
     |  
     |  bytesToWrite(...)
     |      bytesToWrite(self) -> int
     |  
     |  bytesWritten = <unbound PYQT_SIGNAL bytesWritten(qint64)>
     |  canReadLine(...)
     |      canReadLine(self) -> bool
     |  
     |  channelBytesWritten = <unbound PYQT_SIGNAL channelBytesWritten(int,qint64)>
     |  channelReadyRead = <unbound PYQT_SIGNAL channelReadyRead(int)>
     |  commitTransaction(...)
     |      commitTransaction(self)
     |  
     |  currentReadChannel(...)
     |      currentReadChannel(self) -> int
     |  
     |  currentWriteChannel(...)
     |      currentWriteChannel(self) -> int
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  getChar(...)
     |      getChar(self) -> Tuple[bool, str]
     |  
     |  isOpen(...)
     |      isOpen(self) -> bool
     |  
     |  isReadable(...)
     |      isReadable(self) -> bool
     |  
     |  isTextModeEnabled(...)
     |      isTextModeEnabled(self) -> bool
     |  
     |  isTransactionStarted(...)
     |      isTransactionStarted(self) -> bool
     |  
     |  isWritable(...)
     |      isWritable(self) -> bool
     |  
     |  openMode(...)
     |      openMode(self) -> QIODevice.OpenMode
     |  
     |  peek(...)
     |      peek(self, int) -> QByteArray
     |  
     |  putChar(...)
     |      putChar(self, str) -> bool
     |  
     |  read(...)
     |      read(self, int) -> bytes
     |  
     |  readAll(...)
     |      readAll(self) -> QByteArray
     |  
     |  readChannelCount(...)
     |      readChannelCount(self) -> int
     |  
     |  readChannelFinished = <unbound PYQT_SIGNAL readChannelFinished()>
     |  readLine(...)
     |      readLine(self, maxlen: int = 0) -> bytes
     |  
     |  readyRead = <unbound PYQT_SIGNAL readyRead()>
     |  reset(...)
     |      reset(self) -> bool
     |  
     |  rollbackTransaction(...)
     |      rollbackTransaction(self)
     |  
     |  setCurrentReadChannel(...)
     |      setCurrentReadChannel(self, int)
     |  
     |  setCurrentWriteChannel(...)
     |      setCurrentWriteChannel(self, int)
     |  
     |  setErrorString(...)
     |      setErrorString(self, str)
     |  
     |  setOpenMode(...)
     |      setOpenMode(self, Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |  
     |  setTextModeEnabled(...)
     |      setTextModeEnabled(self, bool)
     |  
     |  skip(...)
     |      skip(self, int) -> int
     |  
     |  startTransaction(...)
     |      startTransaction(self)
     |  
     |  ungetChar(...)
     |      ungetChar(self, str)
     |  
     |  waitForBytesWritten(...)
     |      waitForBytesWritten(self, int) -> bool
     |  
     |  waitForReadyRead(...)
     |      waitForReadyRead(self, int) -> bool
     |  
     |  write(...)
     |      write(self, Union[QByteArray, bytes, bytearray]) -> int
     |  
     |  writeChannelCount(...)
     |      writeChannelCount(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QIODevice:
     |  
     |  Append = 4
     |  
     |  ExistingOnly = 128
     |  
     |  NewOnly = 64
     |  
     |  NotOpen = 0
     |  
     |  OpenMode = <class 'PyQt5.QtCore.QIODevice.OpenMode'>
     |      QIODevice.OpenMode()
     |      QIODevice.OpenMode(Union[QIODevice.OpenMode, QIODevice.OpenModeFlag])
     |      QIODevice.OpenMode(QIODevice.OpenMode)
     |  
     |  OpenModeFlag = <class 'PyQt5.QtCore.QIODevice.OpenModeFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ReadOnly = 1
     |  
     |  ReadWrite = 3
     |  
     |  Text = 16
     |  
     |  Truncate = 8
     |  
     |  Unbuffered = 32
     |  
     |  WriteOnly = 2
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QTextBoundaryFinder(sip.simplewrapper)
     |  QTextBoundaryFinder()
     |  QTextBoundaryFinder(QTextBoundaryFinder)
     |  QTextBoundaryFinder(QTextBoundaryFinder.BoundaryType, str)
     |  
     |  Method resolution order:
     |      QTextBoundaryFinder
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  boundaryReasons(...)
     |      boundaryReasons(self) -> QTextBoundaryFinder.BoundaryReasons
     |  
     |  isAtBoundary(...)
     |      isAtBoundary(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  position(...)
     |      position(self) -> int
     |  
     |  setPosition(...)
     |      setPosition(self, int)
     |  
     |  string(...)
     |      string(self) -> str
     |  
     |  toEnd(...)
     |      toEnd(self)
     |  
     |  toNextBoundary(...)
     |      toNextBoundary(self) -> int
     |  
     |  toPreviousBoundary(...)
     |      toPreviousBoundary(self) -> int
     |  
     |  toStart(...)
     |      toStart(self)
     |  
     |  type(...)
     |      type(self) -> QTextBoundaryFinder.BoundaryType
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  BoundaryReason = <class 'PyQt5.QtCore.QTextBoundaryFinder.BoundaryReas...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  BoundaryReasons = <class 'PyQt5.QtCore.QTextBoundaryFinder.BoundaryRea...
     |      QTextBoundaryFinder.BoundaryReasons()
     |      QTextBoundaryFinder.BoundaryReasons(Union[QTextBoundaryFinder.BoundaryReasons, QTextBoundaryFinder.BoundaryReason])
     |      QTextBoundaryFinder.BoundaryReasons(QTextBoundaryFinder.BoundaryReasons)
     |  
     |  BoundaryType = <class 'PyQt5.QtCore.QTextBoundaryFinder.BoundaryType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  BreakOpportunity = 31
     |  
     |  EndOfItem = 64
     |  
     |  Grapheme = 0
     |  
     |  Line = 3
     |  
     |  MandatoryBreak = 128
     |  
     |  NotAtBoundary = 0
     |  
     |  Sentence = 2
     |  
     |  SoftHyphen = 256
     |  
     |  StartOfItem = 32
     |  
     |  Word = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QTextCodec(sip.wrapper)
     |  Method resolution order:
     |      QTextCodec
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  aliases(...)
     |      aliases(self) -> List[QByteArray]
     |  
     |  availableCodecs(...)
     |      availableCodecs() -> List[QByteArray]
     |  
     |  availableMibs(...)
     |      availableMibs() -> List[int]
     |  
     |  canEncode(...)
     |      canEncode(self, str) -> bool
     |  
     |  codecForHtml(...)
     |      codecForHtml(Union[QByteArray, bytes, bytearray]) -> QTextCodec
     |      codecForHtml(Union[QByteArray, bytes, bytearray], QTextCodec) -> QTextCodec
     |  
     |  codecForLocale(...)
     |      codecForLocale() -> QTextCodec
     |  
     |  codecForMib(...)
     |      codecForMib(int) -> QTextCodec
     |  
     |  codecForName(...)
     |      codecForName(Union[QByteArray, bytes, bytearray]) -> QTextCodec
     |      codecForName(str) -> QTextCodec
     |  
     |  codecForUtfText(...)
     |      codecForUtfText(Union[QByteArray, bytes, bytearray]) -> QTextCodec
     |      codecForUtfText(Union[QByteArray, bytes, bytearray], QTextCodec) -> QTextCodec
     |  
     |  convertToUnicode(...)
     |      convertToUnicode(self, bytes, QTextCodec.ConverterState) -> str
     |  
     |  fromUnicode(...)
     |      fromUnicode(self, str) -> QByteArray
     |  
     |  makeDecoder(...)
     |      makeDecoder(self, flags: Union[QTextCodec.ConversionFlags, QTextCodec.ConversionFlag] = QTextCodec.DefaultConversion) -> QTextDecoder
     |  
     |  makeEncoder(...)
     |      makeEncoder(self, flags: Union[QTextCodec.ConversionFlags, QTextCodec.ConversionFlag] = QTextCodec.DefaultConversion) -> QTextEncoder
     |  
     |  mibEnum(...)
     |      mibEnum(self) -> int
     |  
     |  name(...)
     |      name(self) -> QByteArray
     |  
     |  setCodecForLocale(...)
     |      setCodecForLocale(QTextCodec)
     |  
     |  toUnicode(...)
     |      toUnicode(self, Union[QByteArray, bytes, bytearray]) -> str
     |      toUnicode(self, str) -> str
     |      toUnicode(self, bytes, state: QTextCodec.ConverterState = None) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ConversionFlag = <class 'PyQt5.QtCore.QTextCodec.ConversionFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ConversionFlags = <class 'PyQt5.QtCore.QTextCodec.ConversionFlags'>
     |      QTextCodec.ConversionFlags()
     |      QTextCodec.ConversionFlags(Union[QTextCodec.ConversionFlags, QTextCodec.ConversionFlag])
     |      QTextCodec.ConversionFlags(QTextCodec.ConversionFlags)
     |  
     |  ConvertInvalidToNull = -2147483648
     |  
     |  ConverterState = <class 'PyQt5.QtCore.QTextCodec.ConverterState'>
     |      QTextCodec.ConverterState(flags: Union[QTextCodec.ConversionFlags, QTextCodec.ConversionFlag] = QTextCodec.DefaultConversion)
     |  
     |  DefaultConversion = 0
     |  
     |  IgnoreHeader = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QTextDecoder(sip.wrapper)
     |  QTextDecoder(QTextCodec)
     |  QTextDecoder(QTextCodec, Union[QTextCodec.ConversionFlags, QTextCodec.ConversionFlag])
     |  
     |  Method resolution order:
     |      QTextDecoder
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  toUnicode(...)
     |      toUnicode(self, bytes) -> str
     |      toUnicode(self, Union[QByteArray, bytes, bytearray]) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QTextEncoder(sip.wrapper)
     |  QTextEncoder(QTextCodec)
     |  QTextEncoder(QTextCodec, Union[QTextCodec.ConversionFlags, QTextCodec.ConversionFlag])
     |  
     |  Method resolution order:
     |      QTextEncoder
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  fromUnicode(...)
     |      fromUnicode(self, str) -> QByteArray
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QTextStream(sip.simplewrapper)
     |  QTextStream()
     |  QTextStream(QIODevice)
     |  QTextStream(QByteArray, mode: Union[QIODevice.OpenMode, QIODevice.OpenModeFlag] = QIODevice.ReadWrite)
     |  
     |  Method resolution order:
     |      QTextStream
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __lshift__(self, value, /)
     |      Return self<<value.
     |  
     |  __rlshift__(self, value, /)
     |      Return value<<self.
     |  
     |  __rrshift__(self, value, /)
     |      Return value>>self.
     |  
     |  __rshift__(self, value, /)
     |      Return self>>value.
     |  
     |  atEnd(...)
     |      atEnd(self) -> bool
     |  
     |  autoDetectUnicode(...)
     |      autoDetectUnicode(self) -> bool
     |  
     |  codec(...)
     |      codec(self) -> QTextCodec
     |  
     |  device(...)
     |      device(self) -> QIODevice
     |  
     |  fieldAlignment(...)
     |      fieldAlignment(self) -> QTextStream.FieldAlignment
     |  
     |  fieldWidth(...)
     |      fieldWidth(self) -> int
     |  
     |  flush(...)
     |      flush(self)
     |  
     |  generateByteOrderMark(...)
     |      generateByteOrderMark(self) -> bool
     |  
     |  integerBase(...)
     |      integerBase(self) -> int
     |  
     |  locale(...)
     |      locale(self) -> QLocale
     |  
     |  numberFlags(...)
     |      numberFlags(self) -> QTextStream.NumberFlags
     |  
     |  padChar(...)
     |      padChar(self) -> str
     |  
     |  pos(...)
     |      pos(self) -> int
     |  
     |  read(...)
     |      read(self, int) -> str
     |  
     |  readAll(...)
     |      readAll(self) -> str
     |  
     |  readLine(...)
     |      readLine(self, maxLength: int = 0) -> str
     |  
     |  realNumberNotation(...)
     |      realNumberNotation(self) -> QTextStream.RealNumberNotation
     |  
     |  realNumberPrecision(...)
     |      realNumberPrecision(self) -> int
     |  
     |  reset(...)
     |      reset(self)
     |  
     |  resetStatus(...)
     |      resetStatus(self)
     |  
     |  seek(...)
     |      seek(self, int) -> bool
     |  
     |  setAutoDetectUnicode(...)
     |      setAutoDetectUnicode(self, bool)
     |  
     |  setCodec(...)
     |      setCodec(self, QTextCodec)
     |      setCodec(self, str)
     |  
     |  setDevice(...)
     |      setDevice(self, QIODevice)
     |  
     |  setFieldAlignment(...)
     |      setFieldAlignment(self, QTextStream.FieldAlignment)
     |  
     |  setFieldWidth(...)
     |      setFieldWidth(self, int)
     |  
     |  setGenerateByteOrderMark(...)
     |      setGenerateByteOrderMark(self, bool)
     |  
     |  setIntegerBase(...)
     |      setIntegerBase(self, int)
     |  
     |  setLocale(...)
     |      setLocale(self, QLocale)
     |  
     |  setNumberFlags(...)
     |      setNumberFlags(self, Union[QTextStream.NumberFlags, QTextStream.NumberFlag])
     |  
     |  setPadChar(...)
     |      setPadChar(self, str)
     |  
     |  setRealNumberNotation(...)
     |      setRealNumberNotation(self, QTextStream.RealNumberNotation)
     |  
     |  setRealNumberPrecision(...)
     |      setRealNumberPrecision(self, int)
     |  
     |  setStatus(...)
     |      setStatus(self, QTextStream.Status)
     |  
     |  skipWhiteSpace(...)
     |      skipWhiteSpace(self)
     |  
     |  status(...)
     |      status(self) -> QTextStream.Status
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AlignAccountingStyle = 3
     |  
     |  AlignCenter = 2
     |  
     |  AlignLeft = 0
     |  
     |  AlignRight = 1
     |  
     |  FieldAlignment = <class 'PyQt5.QtCore.QTextStream.FieldAlignment'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FixedNotation = 1
     |  
     |  ForcePoint = 2
     |  
     |  ForceSign = 4
     |  
     |  NumberFlag = <class 'PyQt5.QtCore.QTextStream.NumberFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NumberFlags = <class 'PyQt5.QtCore.QTextStream.NumberFlags'>
     |      QTextStream.NumberFlags()
     |      QTextStream.NumberFlags(Union[QTextStream.NumberFlags, QTextStream.NumberFlag])
     |      QTextStream.NumberFlags(QTextStream.NumberFlags)
     |  
     |  Ok = 0
     |  
     |  ReadCorruptData = 2
     |  
     |  ReadPastEnd = 1
     |  
     |  RealNumberNotation = <class 'PyQt5.QtCore.QTextStream.RealNumberNotati...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ScientificNotation = 2
     |  
     |  ShowBase = 1
     |  
     |  SmartNotation = 0
     |  
     |  Status = <class 'PyQt5.QtCore.QTextStream.Status'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  UppercaseBase = 8
     |  
     |  UppercaseDigits = 16
     |  
     |  WriteFailed = 3
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QTextStreamManipulator(sip.simplewrapper)
     |  Method resolution order:
     |      QTextStreamManipulator
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QThread(QObject)
     |  QThread(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QThread
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  currentThread(...)
     |      currentThread() -> QThread
     |  
     |  currentThreadId(...)
     |      currentThreadId() -> sip.voidptr
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventDispatcher(...)
     |      eventDispatcher(self) -> QAbstractEventDispatcher
     |  
     |  exec(...)
     |      exec(self) -> int
     |  
     |  exec_(...)
     |      exec_(self) -> int
     |  
     |  exit(...)
     |      exit(self, returnCode: int = 0)
     |  
     |  finished = <unbound PYQT_SIGNAL finished()>
     |  idealThreadCount(...)
     |      idealThreadCount() -> int
     |  
     |  isFinished(...)
     |      isFinished(self) -> bool
     |  
     |  isInterruptionRequested(...)
     |      isInterruptionRequested(self) -> bool
     |  
     |  isRunning(...)
     |      isRunning(self) -> bool
     |  
     |  loopLevel(...)
     |      loopLevel(self) -> int
     |  
     |  msleep(...)
     |      msleep(int)
     |  
     |  priority(...)
     |      priority(self) -> QThread.Priority
     |  
     |  quit(...)
     |      quit(self)
     |  
     |  requestInterruption(...)
     |      requestInterruption(self)
     |  
     |  run(...)
     |      run(self)
     |  
     |  setEventDispatcher(...)
     |      setEventDispatcher(self, QAbstractEventDispatcher)
     |  
     |  setPriority(...)
     |      setPriority(self, QThread.Priority)
     |  
     |  setStackSize(...)
     |      setStackSize(self, int)
     |  
     |  setTerminationEnabled(...)
     |      setTerminationEnabled(enabled: bool = True)
     |  
     |  sleep(...)
     |      sleep(int)
     |  
     |  stackSize(...)
     |      stackSize(self) -> int
     |  
     |  start(...)
     |      start(self, priority: QThread.Priority = QThread.InheritPriority)
     |  
     |  started = <unbound PYQT_SIGNAL started()>
     |  terminate(...)
     |      terminate(self)
     |  
     |  usleep(...)
     |      usleep(int)
     |  
     |  wait(...)
     |      wait(self, msecs: int = ULONG_MAX) -> bool
     |  
     |  yieldCurrentThread(...)
     |      yieldCurrentThread()
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  HighPriority = 4
     |  
     |  HighestPriority = 5
     |  
     |  IdlePriority = 0
     |  
     |  InheritPriority = 7
     |  
     |  LowPriority = 2
     |  
     |  LowestPriority = 1
     |  
     |  NormalPriority = 3
     |  
     |  Priority = <class 'PyQt5.QtCore.QThread.Priority'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TimeCriticalPriority = 6
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QThreadPool(QObject)
     |  QThreadPool(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QThreadPool
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  activeThreadCount(...)
     |      activeThreadCount(self) -> int
     |  
     |  cancel(...)
     |      cancel(self, QRunnable)
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  expiryTimeout(...)
     |      expiryTimeout(self) -> int
     |  
     |  globalInstance(...)
     |      globalInstance() -> QThreadPool
     |  
     |  maxThreadCount(...)
     |      maxThreadCount(self) -> int
     |  
     |  releaseThread(...)
     |      releaseThread(self)
     |  
     |  reserveThread(...)
     |      reserveThread(self)
     |  
     |  setExpiryTimeout(...)
     |      setExpiryTimeout(self, int)
     |  
     |  setMaxThreadCount(...)
     |      setMaxThreadCount(self, int)
     |  
     |  setStackSize(...)
     |      setStackSize(self, int)
     |  
     |  stackSize(...)
     |      stackSize(self) -> int
     |  
     |  start(...)
     |      start(self, QRunnable, priority: int = 0)
     |  
     |  tryStart(...)
     |      tryStart(self, QRunnable) -> bool
     |  
     |  tryTake(...)
     |      tryTake(self, QRunnable) -> bool
     |  
     |  waitForDone(...)
     |      waitForDone(self, msecs: int = -1) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QTime(sip.simplewrapper)
     |  QTime()
     |  QTime(int, int, second: int = 0, msec: int = 0)
     |  QTime(QTime)
     |  
     |  Method resolution order:
     |      QTime
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __bool__(self, /)
     |      self != 0
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __reduce__ = _pickle_type(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  addMSecs(...)
     |      addMSecs(self, int) -> QTime
     |  
     |  addSecs(...)
     |      addSecs(self, int) -> QTime
     |  
     |  currentTime(...)
     |      currentTime() -> QTime
     |  
     |  elapsed(...)
     |      elapsed(self) -> int
     |  
     |  fromMSecsSinceStartOfDay(...)
     |      fromMSecsSinceStartOfDay(int) -> QTime
     |  
     |  fromString(...)
     |      fromString(str, format: Qt.DateFormat = Qt.TextDate) -> QTime
     |      fromString(str, str) -> QTime
     |  
     |  hour(...)
     |      hour(self) -> int
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |      isValid(int, int, int, msec: int = 0) -> bool
     |  
     |  minute(...)
     |      minute(self) -> int
     |  
     |  msec(...)
     |      msec(self) -> int
     |  
     |  msecsSinceStartOfDay(...)
     |      msecsSinceStartOfDay(self) -> int
     |  
     |  msecsTo(...)
     |      msecsTo(self, Union[QTime, datetime.time]) -> int
     |  
     |  restart(...)
     |      restart(self) -> int
     |  
     |  second(...)
     |      second(self) -> int
     |  
     |  secsTo(...)
     |      secsTo(self, Union[QTime, datetime.time]) -> int
     |  
     |  setHMS(...)
     |      setHMS(self, int, int, int, msec: int = 0) -> bool
     |  
     |  start(...)
     |      start(self)
     |  
     |  toPyTime(...)
     |      toPyTime(self) -> datetime.time
     |  
     |  toString(...)
     |      toString(self, format: Qt.DateFormat = Qt.TextDate) -> str
     |      toString(self, str) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QTimeLine(QObject)
     |  QTimeLine(duration: int = 1000, parent: QObject = None)
     |  
     |  Method resolution order:
     |      QTimeLine
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  currentFrame(...)
     |      currentFrame(self) -> int
     |  
     |  currentTime(...)
     |      currentTime(self) -> int
     |  
     |  currentValue(...)
     |      currentValue(self) -> float
     |  
     |  curveShape(...)
     |      curveShape(self) -> QTimeLine.CurveShape
     |  
     |  direction(...)
     |      direction(self) -> QTimeLine.Direction
     |  
     |  duration(...)
     |      duration(self) -> int
     |  
     |  easingCurve(...)
     |      easingCurve(self) -> QEasingCurve
     |  
     |  endFrame(...)
     |      endFrame(self) -> int
     |  
     |  finished = <unbound PYQT_SIGNAL finished()>
     |  frameChanged = <unbound PYQT_SIGNAL frameChanged(int)>
     |  frameForTime(...)
     |      frameForTime(self, int) -> int
     |  
     |  loopCount(...)
     |      loopCount(self) -> int
     |  
     |  resume(...)
     |      resume(self)
     |  
     |  setCurrentTime(...)
     |      setCurrentTime(self, int)
     |  
     |  setCurveShape(...)
     |      setCurveShape(self, QTimeLine.CurveShape)
     |  
     |  setDirection(...)
     |      setDirection(self, QTimeLine.Direction)
     |  
     |  setDuration(...)
     |      setDuration(self, int)
     |  
     |  setEasingCurve(...)
     |      setEasingCurve(self, Union[QEasingCurve, QEasingCurve.Type])
     |  
     |  setEndFrame(...)
     |      setEndFrame(self, int)
     |  
     |  setFrameRange(...)
     |      setFrameRange(self, int, int)
     |  
     |  setLoopCount(...)
     |      setLoopCount(self, int)
     |  
     |  setPaused(...)
     |      setPaused(self, bool)
     |  
     |  setStartFrame(...)
     |      setStartFrame(self, int)
     |  
     |  setUpdateInterval(...)
     |      setUpdateInterval(self, int)
     |  
     |  start(...)
     |      start(self)
     |  
     |  startFrame(...)
     |      startFrame(self) -> int
     |  
     |  state(...)
     |      state(self) -> QTimeLine.State
     |  
     |  stateChanged = <unbound PYQT_SIGNAL stateChanged(QTimeLine::State)>
     |  stop(...)
     |      stop(self)
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  toggleDirection(...)
     |      toggleDirection(self)
     |  
     |  updateInterval(...)
     |      updateInterval(self) -> int
     |  
     |  valueChanged = <unbound PYQT_SIGNAL valueChanged(qreal)>
     |  valueForTime(...)
     |      valueForTime(self, int) -> float
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Backward = 1
     |  
     |  CosineCurve = 5
     |  
     |  CurveShape = <class 'PyQt5.QtCore.QTimeLine.CurveShape'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Direction = <class 'PyQt5.QtCore.QTimeLine.Direction'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  EaseInCurve = 0
     |  
     |  EaseInOutCurve = 2
     |  
     |  EaseOutCurve = 1
     |  
     |  Forward = 0
     |  
     |  LinearCurve = 3
     |  
     |  NotRunning = 0
     |  
     |  Paused = 1
     |  
     |  Running = 2
     |  
     |  SineCurve = 4
     |  
     |  State = <class 'PyQt5.QtCore.QTimeLine.State'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QTimeZone(sip.simplewrapper)
     |  QTimeZone()
     |  QTimeZone(Union[QByteArray, bytes, bytearray])
     |  QTimeZone(int)
     |  QTimeZone(Union[QByteArray, bytes, bytearray], int, str, str, country: QLocale.Country = QLocale.AnyCountry, comment: str = '')
     |  QTimeZone(QTimeZone)
     |  
     |  Method resolution order:
     |      QTimeZone
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  abbreviation(...)
     |      abbreviation(self, Union[QDateTime, datetime.datetime]) -> str
     |  
     |  availableTimeZoneIds(...)
     |      availableTimeZoneIds() -> List[QByteArray]
     |      availableTimeZoneIds(QLocale.Country) -> List[QByteArray]
     |      availableTimeZoneIds(int) -> List[QByteArray]
     |  
     |  comment(...)
     |      comment(self) -> str
     |  
     |  country(...)
     |      country(self) -> QLocale.Country
     |  
     |  daylightTimeOffset(...)
     |      daylightTimeOffset(self, Union[QDateTime, datetime.datetime]) -> int
     |  
     |  displayName(...)
     |      displayName(self, Union[QDateTime, datetime.datetime], nameType: QTimeZone.NameType = QTimeZone.DefaultName, locale: QLocale = QLocale()) -> str
     |      displayName(self, QTimeZone.TimeType, nameType: QTimeZone.NameType = QTimeZone.DefaultName, locale: QLocale = QLocale()) -> str
     |  
     |  hasDaylightTime(...)
     |      hasDaylightTime(self) -> bool
     |  
     |  hasTransitions(...)
     |      hasTransitions(self) -> bool
     |  
     |  ianaIdToWindowsId(...)
     |      ianaIdToWindowsId(Union[QByteArray, bytes, bytearray]) -> QByteArray
     |  
     |  id(...)
     |      id(self) -> QByteArray
     |  
     |  isDaylightTime(...)
     |      isDaylightTime(self, Union[QDateTime, datetime.datetime]) -> bool
     |  
     |  isTimeZoneIdAvailable(...)
     |      isTimeZoneIdAvailable(Union[QByteArray, bytes, bytearray]) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  nextTransition(...)
     |      nextTransition(self, Union[QDateTime, datetime.datetime]) -> QTimeZone.OffsetData
     |  
     |  offsetData(...)
     |      offsetData(self, Union[QDateTime, datetime.datetime]) -> QTimeZone.OffsetData
     |  
     |  offsetFromUtc(...)
     |      offsetFromUtc(self, Union[QDateTime, datetime.datetime]) -> int
     |  
     |  previousTransition(...)
     |      previousTransition(self, Union[QDateTime, datetime.datetime]) -> QTimeZone.OffsetData
     |  
     |  standardTimeOffset(...)
     |      standardTimeOffset(self, Union[QDateTime, datetime.datetime]) -> int
     |  
     |  swap(...)
     |      swap(self, QTimeZone)
     |  
     |  systemTimeZone(...)
     |      systemTimeZone() -> QTimeZone
     |  
     |  systemTimeZoneId(...)
     |      systemTimeZoneId() -> QByteArray
     |  
     |  transitions(...)
     |      transitions(self, Union[QDateTime, datetime.datetime], Union[QDateTime, datetime.datetime]) -> List[QTimeZone.OffsetData]
     |  
     |  utc(...)
     |      utc() -> QTimeZone
     |  
     |  windowsIdToDefaultIanaId(...)
     |      windowsIdToDefaultIanaId(Union[QByteArray, bytes, bytearray]) -> QByteArray
     |      windowsIdToDefaultIanaId(Union[QByteArray, bytes, bytearray], QLocale.Country) -> QByteArray
     |  
     |  windowsIdToIanaIds(...)
     |      windowsIdToIanaIds(Union[QByteArray, bytes, bytearray]) -> List[QByteArray]
     |      windowsIdToIanaIds(Union[QByteArray, bytes, bytearray], QLocale.Country) -> List[QByteArray]
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  DaylightTime = 1
     |  
     |  DefaultName = 0
     |  
     |  GenericTime = 2
     |  
     |  LongName = 1
     |  
     |  NameType = <class 'PyQt5.QtCore.QTimeZone.NameType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  OffsetData = <class 'PyQt5.QtCore.QTimeZone.OffsetData'>
     |      QTimeZone.OffsetData()
     |      QTimeZone.OffsetData(QTimeZone.OffsetData)
     |  
     |  OffsetName = 3
     |  
     |  ShortName = 2
     |  
     |  StandardTime = 0
     |  
     |  TimeType = <class 'PyQt5.QtCore.QTimeZone.TimeType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QTimer(QObject)
     |  QTimer(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QTimer
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  interval(...)
     |      interval(self) -> int
     |  
     |  isActive(...)
     |      isActive(self) -> bool
     |  
     |  isSingleShot(...)
     |      isSingleShot(self) -> bool
     |  
     |  remainingTime(...)
     |      remainingTime(self) -> int
     |  
     |  setInterval(...)
     |      setInterval(self, int)
     |  
     |  setSingleShot(...)
     |      setSingleShot(self, bool)
     |  
     |  setTimerType(...)
     |      setTimerType(self, Qt.TimerType)
     |  
     |  singleShot(...)
     |      singleShot(int, PYQT_SLOT)
     |      singleShot(int, Qt.TimerType, PYQT_SLOT)
     |  
     |  start(...)
     |      start(self, int)
     |      start(self)
     |  
     |  stop(...)
     |      stop(self)
     |  
     |  timeout = <unbound PYQT_SIGNAL timeout()>
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  timerId(...)
     |      timerId(self) -> int
     |  
     |  timerType(...)
     |      timerType(self) -> Qt.TimerType
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QTimerEvent(QEvent)
     |  QTimerEvent(int)
     |  QTimerEvent(QTimerEvent)
     |  
     |  Method resolution order:
     |      QTimerEvent
     |      QEvent
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  timerId(...)
     |      timerId(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QEvent:
     |  
     |  accept(...)
     |      accept(self)
     |  
     |  ignore(...)
     |      ignore(self)
     |  
     |  isAccepted(...)
     |      isAccepted(self) -> bool
     |  
     |  registerEventType(...)
     |      registerEventType(hint: int = -1) -> int
     |  
     |  setAccepted(...)
     |      setAccepted(self, bool)
     |  
     |  spontaneous(...)
     |      spontaneous(self) -> bool
     |  
     |  type(...)
     |      type(self) -> QEvent.Type
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QEvent:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QEvent:
     |  
     |  ActionAdded = 114
     |  
     |  ActionChanged = 113
     |  
     |  ActionRemoved = 115
     |  
     |  ActivationChange = 99
     |  
     |  ApplicationActivate = 121
     |  
     |  ApplicationActivated = 121
     |  
     |  ApplicationDeactivate = 122
     |  
     |  ApplicationDeactivated = 122
     |  
     |  ApplicationFontChange = 36
     |  
     |  ApplicationLayoutDirectionChange = 37
     |  
     |  ApplicationPaletteChange = 38
     |  
     |  ApplicationStateChange = 214
     |  
     |  ApplicationWindowIconChange = 35
     |  
     |  ChildAdded = 68
     |  
     |  ChildPolished = 69
     |  
     |  ChildRemoved = 71
     |  
     |  Clipboard = 40
     |  
     |  Close = 19
     |  
     |  CloseSoftwareInputPanel = 200
     |  
     |  ContentsRectChange = 178
     |  
     |  ContextMenu = 82
     |  
     |  CursorChange = 183
     |  
     |  DeferredDelete = 52
     |  
     |  DragEnter = 60
     |  
     |  DragLeave = 62
     |  
     |  DragMove = 61
     |  
     |  Drop = 63
     |  
     |  DynamicPropertyChange = 170
     |  
     |  EnabledChange = 98
     |  
     |  Enter = 10
     |  
     |  EnterWhatsThisMode = 124
     |  
     |  Expose = 206
     |  
     |  FileOpen = 116
     |  
     |  FocusAboutToChange = 23
     |  
     |  FocusIn = 8
     |  
     |  FocusOut = 9
     |  
     |  FontChange = 97
     |  
     |  Gesture = 198
     |  
     |  GestureOverride = 202
     |  
     |  GrabKeyboard = 188
     |  
     |  GrabMouse = 186
     |  
     |  GraphicsSceneContextMenu = 159
     |  
     |  GraphicsSceneDragEnter = 164
     |  
     |  GraphicsSceneDragLeave = 166
     |  
     |  GraphicsSceneDragMove = 165
     |  
     |  GraphicsSceneDrop = 167
     |  
     |  GraphicsSceneHelp = 163
     |  
     |  GraphicsSceneHoverEnter = 160
     |  
     |  GraphicsSceneHoverLeave = 162
     |  
     |  GraphicsSceneHoverMove = 161
     |  
     |  GraphicsSceneMouseDoubleClick = 158
     |  
     |  GraphicsSceneMouseMove = 155
     |  
     |  GraphicsSceneMousePress = 156
     |  
     |  GraphicsSceneMouseRelease = 157
     |  
     |  GraphicsSceneMove = 182
     |  
     |  GraphicsSceneResize = 181
     |  
     |  GraphicsSceneWheel = 168
     |  
     |  Hide = 18
     |  
     |  HideToParent = 27
     |  
     |  HoverEnter = 127
     |  
     |  HoverLeave = 128
     |  
     |  HoverMove = 129
     |  
     |  IconDrag = 96
     |  
     |  IconTextChange = 101
     |  
     |  InputMethod = 83
     |  
     |  InputMethodQuery = 207
     |  
     |  KeyPress = 6
     |  
     |  KeyRelease = 7
     |  
     |  KeyboardLayoutChange = 169
     |  
     |  LanguageChange = 89
     |  
     |  LayoutDirectionChange = 90
     |  
     |  LayoutRequest = 76
     |  
     |  Leave = 11
     |  
     |  LeaveWhatsThisMode = 125
     |  
     |  LocaleChange = 88
     |  
     |  MacSizeChange = 177
     |  
     |  MaxUser = 65535
     |  
     |  MetaCall = 43
     |  
     |  ModifiedChange = 102
     |  
     |  MouseButtonDblClick = 4
     |  
     |  MouseButtonPress = 2
     |  
     |  MouseButtonRelease = 3
     |  
     |  MouseMove = 5
     |  
     |  MouseTrackingChange = 109
     |  
     |  Move = 13
     |  
     |  NonClientAreaMouseButtonDblClick = 176
     |  
     |  NonClientAreaMouseButtonPress = 174
     |  
     |  NonClientAreaMouseButtonRelease = 175
     |  
     |  NonClientAreaMouseMove = 173
     |  
     |  None_ = 0
     |  
     |  OkRequest = 94
     |  
     |  OrientationChange = 208
     |  
     |  Paint = 12
     |  
     |  PaletteChange = 39
     |  
     |  ParentAboutToChange = 131
     |  
     |  ParentChange = 21
     |  
     |  PlatformPanel = 212
     |  
     |  PlatformSurface = 217
     |  
     |  Polish = 75
     |  
     |  PolishRequest = 74
     |  
     |  QueryWhatsThis = 123
     |  
     |  ReadOnlyChange = 106
     |  
     |  RequestSoftwareInputPanel = 199
     |  
     |  Resize = 14
     |  
     |  Scroll = 205
     |  
     |  ScrollPrepare = 204
     |  
     |  Shortcut = 117
     |  
     |  ShortcutOverride = 51
     |  
     |  Show = 17
     |  
     |  ShowToParent = 26
     |  
     |  SockAct = 50
     |  
     |  StateMachineSignal = 192
     |  
     |  StateMachineWrapped = 193
     |  
     |  StatusTip = 112
     |  
     |  StyleChange = 100
     |  
     |  TabletEnterProximity = 171
     |  
     |  TabletLeaveProximity = 172
     |  
     |  TabletMove = 87
     |  
     |  TabletPress = 92
     |  
     |  TabletRelease = 93
     |  
     |  TabletTrackingChange = 219
     |  
     |  ThreadChange = 22
     |  
     |  Timer = 1
     |  
     |  ToolBarChange = 120
     |  
     |  ToolTip = 110
     |  
     |  ToolTipChange = 184
     |  
     |  TouchBegin = 194
     |  
     |  TouchCancel = 209
     |  
     |  TouchEnd = 196
     |  
     |  TouchUpdate = 195
     |  
     |  Type = <class 'PyQt5.QtCore.QEvent.Type'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  UngrabKeyboard = 189
     |  
     |  UngrabMouse = 187
     |  
     |  UpdateLater = 78
     |  
     |  UpdateRequest = 77
     |  
     |  User = 1000
     |  
     |  WhatsThis = 111
     |  
     |  WhatsThisClicked = 118
     |  
     |  Wheel = 31
     |  
     |  WinEventAct = 132
     |  
     |  WinIdChange = 203
     |  
     |  WindowActivate = 24
     |  
     |  WindowBlocked = 103
     |  
     |  WindowDeactivate = 25
     |  
     |  WindowIconChange = 34
     |  
     |  WindowStateChange = 105
     |  
     |  WindowTitleChange = 33
     |  
     |  WindowUnblocked = 104
     |  
     |  ZOrderChange = 126
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QTranslator(QObject)
     |  QTranslator(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QTranslator
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  load(...)
     |      load(self, str, directory: str = '', searchDelimiters: str = '', suffix: str = '') -> bool
     |      load(self, QLocale, str, prefix: str = '', directory: str = '', suffix: str = '') -> bool
     |  
     |  loadFromData(...)
     |      loadFromData(self, bytes, directory: str = '') -> bool
     |  
     |  translate(...)
     |      translate(self, str, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QUrl(sip.simplewrapper)
     |  QUrl()
     |  QUrl(str, mode: QUrl.ParsingMode = QUrl.TolerantMode)
     |  QUrl(QUrl)
     |  
     |  Method resolution order:
     |      QUrl
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  adjusted(...)
     |      adjusted(self, QUrl.FormattingOptions) -> QUrl
     |  
     |  authority(...)
     |      authority(self, options: Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.PrettyDecoded) -> str
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  detach(...)
     |      detach(self)
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  fileName(...)
     |      fileName(self, options: Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.FullyDecoded) -> str
     |  
     |  fragment(...)
     |      fragment(self, options: Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.PrettyDecoded) -> str
     |  
     |  fromAce(...)
     |      fromAce(Union[QByteArray, bytes, bytearray]) -> str
     |  
     |  fromEncoded(...)
     |      fromEncoded(Union[QByteArray, bytes, bytearray], mode: QUrl.ParsingMode = QUrl.TolerantMode) -> QUrl
     |  
     |  fromLocalFile(...)
     |      fromLocalFile(str) -> QUrl
     |  
     |  fromPercentEncoding(...)
     |      fromPercentEncoding(Union[QByteArray, bytes, bytearray]) -> str
     |  
     |  fromStringList(...)
     |      fromStringList(Iterable[str], mode: QUrl.ParsingMode = QUrl.TolerantMode) -> List[QUrl]
     |  
     |  fromUserInput(...)
     |      fromUserInput(str) -> QUrl
     |      fromUserInput(str, str, options: Union[QUrl.UserInputResolutionOptions, QUrl.UserInputResolutionOption] = QUrl.DefaultResolution) -> QUrl
     |  
     |  hasFragment(...)
     |      hasFragment(self) -> bool
     |  
     |  hasQuery(...)
     |      hasQuery(self) -> bool
     |  
     |  host(...)
     |      host(self, Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.FullyDecoded) -> str
     |  
     |  idnWhitelist(...)
     |      idnWhitelist() -> List[str]
     |  
     |  isDetached(...)
     |      isDetached(self) -> bool
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  isLocalFile(...)
     |      isLocalFile(self) -> bool
     |  
     |  isParentOf(...)
     |      isParentOf(self, QUrl) -> bool
     |  
     |  isRelative(...)
     |      isRelative(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  matches(...)
     |      matches(self, QUrl, QUrl.FormattingOptions) -> bool
     |  
     |  password(...)
     |      password(self, options: Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.FullyDecoded) -> str
     |  
     |  path(...)
     |      path(self, options: Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.FullyDecoded) -> str
     |  
     |  port(...)
     |      port(self, defaultPort: int = -1) -> int
     |  
     |  query(...)
     |      query(self, options: Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.PrettyDecoded) -> str
     |  
     |  resolved(...)
     |      resolved(self, QUrl) -> QUrl
     |  
     |  scheme(...)
     |      scheme(self) -> str
     |  
     |  setAuthority(...)
     |      setAuthority(self, str, mode: QUrl.ParsingMode = QUrl.TolerantMode)
     |  
     |  setFragment(...)
     |      setFragment(self, str, mode: QUrl.ParsingMode = QUrl.TolerantMode)
     |  
     |  setHost(...)
     |      setHost(self, str, mode: QUrl.ParsingMode = QUrl.DecodedMode)
     |  
     |  setIdnWhitelist(...)
     |      setIdnWhitelist(Iterable[str])
     |  
     |  setPassword(...)
     |      setPassword(self, str, mode: QUrl.ParsingMode = QUrl.DecodedMode)
     |  
     |  setPath(...)
     |      setPath(self, str, mode: QUrl.ParsingMode = QUrl.DecodedMode)
     |  
     |  setPort(...)
     |      setPort(self, int)
     |  
     |  setQuery(...)
     |      setQuery(self, str, mode: QUrl.ParsingMode = QUrl.TolerantMode)
     |      setQuery(self, QUrlQuery)
     |  
     |  setScheme(...)
     |      setScheme(self, str)
     |  
     |  setUrl(...)
     |      setUrl(self, str, mode: QUrl.ParsingMode = QUrl.TolerantMode)
     |  
     |  setUserInfo(...)
     |      setUserInfo(self, str, mode: QUrl.ParsingMode = QUrl.TolerantMode)
     |  
     |  setUserName(...)
     |      setUserName(self, str, mode: QUrl.ParsingMode = QUrl.DecodedMode)
     |  
     |  swap(...)
     |      swap(self, QUrl)
     |  
     |  toAce(...)
     |      toAce(str) -> QByteArray
     |  
     |  toDisplayString(...)
     |      toDisplayString(self, options: QUrl.FormattingOptions = QUrl.PrettyDecoded) -> str
     |  
     |  toEncoded(...)
     |      toEncoded(self, options: QUrl.FormattingOptions = QUrl.FullyEncoded) -> QByteArray
     |  
     |  toLocalFile(...)
     |      toLocalFile(self) -> str
     |  
     |  toPercentEncoding(...)
     |      toPercentEncoding(str, exclude: Union[QByteArray, bytes, bytearray] = QByteArray(), include: Union[QByteArray, bytes, bytearray] = QByteArray()) -> QByteArray
     |  
     |  toString(...)
     |      toString(self, options: QUrl.FormattingOptions = QUrl.PrettyDecoded) -> str
     |  
     |  toStringList(...)
     |      toStringList(Iterable[QUrl], options: QUrl.FormattingOptions = QUrl.PrettyDecoded) -> List[str]
     |  
     |  topLevelDomain(...)
     |      topLevelDomain(self, options: Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.FullyDecoded) -> str
     |  
     |  url(...)
     |      url(self, options: QUrl.FormattingOptions = QUrl.PrettyDecoded) -> str
     |  
     |  userInfo(...)
     |      userInfo(self, options: Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.PrettyDecoded) -> str
     |  
     |  userName(...)
     |      userName(self, options: Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.FullyDecoded) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AssumeLocalFile = 1
     |  
     |  ComponentFormattingOption = <class 'PyQt5.QtCore.QUrl.ComponentFormatt...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ComponentFormattingOptions = <class 'PyQt5.QtCore.QUrl.ComponentFormat...
     |      QUrl.ComponentFormattingOptions()
     |      QUrl.ComponentFormattingOptions(Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption])
     |      QUrl.ComponentFormattingOptions(QUrl.ComponentFormattingOptions)
     |  
     |  DecodeReserved = 33554432
     |  
     |  DecodedMode = 2
     |  
     |  DefaultResolution = 0
     |  
     |  EncodeDelimiters = 12582912
     |  
     |  EncodeReserved = 16777216
     |  
     |  EncodeSpaces = 1048576
     |  
     |  EncodeUnicode = 2097152
     |  
     |  FormattingOptions = <class 'PyQt5.QtCore.QUrl.FormattingOptions'>
     |      QUrl.FormattingOptions(QUrl.FormattingOptions)
     |  
     |  FullyDecoded = 133169152
     |  
     |  FullyEncoded = 32505856
     |  
     |  None_ = 0
     |  
     |  NormalizePathSegments = 4096
     |  
     |  ParsingMode = <class 'PyQt5.QtCore.QUrl.ParsingMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  PreferLocalFile = 512
     |  
     |  PrettyDecoded = 0
     |  
     |  RemoveAuthority = 30
     |  
     |  RemoveFilename = 2048
     |  
     |  RemoveFragment = 128
     |  
     |  RemovePassword = 2
     |  
     |  RemovePath = 32
     |  
     |  RemovePort = 8
     |  
     |  RemoveQuery = 64
     |  
     |  RemoveScheme = 1
     |  
     |  RemoveUserInfo = 6
     |  
     |  StrictMode = 1
     |  
     |  StripTrailingSlash = 1024
     |  
     |  TolerantMode = 0
     |  
     |  UrlFormattingOption = <class 'PyQt5.QtCore.QUrl.UrlFormattingOption'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  UserInputResolutionOption = <class 'PyQt5.QtCore.QUrl.UserInputResolut...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  UserInputResolutionOptions = <class 'PyQt5.QtCore.QUrl.UserInputResolu...
     |      QUrl.UserInputResolutionOptions()
     |      QUrl.UserInputResolutionOptions(Union[QUrl.UserInputResolutionOptions, QUrl.UserInputResolutionOption])
     |      QUrl.UserInputResolutionOptions(QUrl.UserInputResolutionOptions)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QUrlQuery(sip.simplewrapper)
     |  QUrlQuery()
     |  QUrlQuery(QUrl)
     |  QUrlQuery(str)
     |  QUrlQuery(QUrlQuery)
     |  
     |  Method resolution order:
     |      QUrlQuery
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  addQueryItem(...)
     |      addQueryItem(self, str, str)
     |  
     |  allQueryItemValues(...)
     |      allQueryItemValues(self, str, options: Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.PrettyDecoded) -> List[str]
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  defaultQueryPairDelimiter(...)
     |      defaultQueryPairDelimiter() -> str
     |  
     |  defaultQueryValueDelimiter(...)
     |      defaultQueryValueDelimiter() -> str
     |  
     |  hasQueryItem(...)
     |      hasQueryItem(self, str) -> bool
     |  
     |  isDetached(...)
     |      isDetached(self) -> bool
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  query(...)
     |      query(self, options: Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.PrettyDecoded) -> str
     |  
     |  queryItemValue(...)
     |      queryItemValue(self, str, options: Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.PrettyDecoded) -> str
     |  
     |  queryItems(...)
     |      queryItems(self, options: Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.PrettyDecoded) -> List[Tuple[str, str]]
     |  
     |  queryPairDelimiter(...)
     |      queryPairDelimiter(self) -> str
     |  
     |  queryValueDelimiter(...)
     |      queryValueDelimiter(self) -> str
     |  
     |  removeAllQueryItems(...)
     |      removeAllQueryItems(self, str)
     |  
     |  removeQueryItem(...)
     |      removeQueryItem(self, str)
     |  
     |  setQuery(...)
     |      setQuery(self, str)
     |  
     |  setQueryDelimiters(...)
     |      setQueryDelimiters(self, str, str)
     |  
     |  setQueryItems(...)
     |      setQueryItems(self, Iterable[Tuple[str, str]])
     |  
     |  swap(...)
     |      swap(self, QUrlQuery)
     |  
     |  toString(...)
     |      toString(self, options: Union[QUrl.ComponentFormattingOptions, QUrl.ComponentFormattingOption] = QUrl.PrettyDecoded) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QUuid(sip.simplewrapper)
     |  QUuid()
     |  QUuid(int, int, int, int, int, int, int, int, int, int, int)
     |  QUuid(str)
     |  QUuid(Union[QByteArray, bytes, bytearray])
     |  QUuid(QUuid)
     |  
     |  Method resolution order:
     |      QUuid
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  createUuid(...)
     |      createUuid() -> QUuid
     |  
     |  createUuidV3(...)
     |      createUuidV3(QUuid, Union[QByteArray, bytes, bytearray]) -> QUuid
     |      createUuidV3(QUuid, str) -> QUuid
     |  
     |  createUuidV5(...)
     |      createUuidV5(QUuid, Union[QByteArray, bytes, bytearray]) -> QUuid
     |      createUuidV5(QUuid, str) -> QUuid
     |  
     |  fromRfc4122(...)
     |      fromRfc4122(Union[QByteArray, bytes, bytearray]) -> QUuid
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  toByteArray(...)
     |      toByteArray(self) -> QByteArray
     |      toByteArray(self, QUuid.StringFormat) -> QByteArray
     |  
     |  toRfc4122(...)
     |      toRfc4122(self) -> QByteArray
     |  
     |  toString(...)
     |      toString(self) -> str
     |      toString(self, QUuid.StringFormat) -> str
     |  
     |  variant(...)
     |      variant(self) -> QUuid.Variant
     |  
     |  version(...)
     |      version(self) -> QUuid.Version
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  DCE = 2
     |  
     |  EmbeddedPOSIX = 2
     |  
     |  Id128 = 3
     |  
     |  Md5 = 3
     |  
     |  Microsoft = 6
     |  
     |  NCS = 0
     |  
     |  Name = 3
     |  
     |  Random = 4
     |  
     |  Reserved = 7
     |  
     |  Sha1 = 5
     |  
     |  StringFormat = <class 'PyQt5.QtCore.QUuid.StringFormat'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Time = 1
     |  
     |  VarUnknown = -1
     |  
     |  Variant = <class 'PyQt5.QtCore.QUuid.Variant'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  VerUnknown = -1
     |  
     |  Version = <class 'PyQt5.QtCore.QUuid.Version'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  WithBraces = 0
     |  
     |  WithoutBraces = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QVariant(sip.simplewrapper)
     |  QVariant()
     |  QVariant(QVariant.Type)
     |  QVariant(object)
     |  QVariant(QVariant)
     |  
     |  Method resolution order:
     |      QVariant
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  canConvert(...)
     |      canConvert(self, int) -> bool
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  convert(...)
     |      convert(self, int) -> bool
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  isValid(...)
     |      isValid(self) -> bool
     |  
     |  load(...)
     |      load(self, QDataStream)
     |  
     |  nameToType(...)
     |      nameToType(str) -> QVariant.Type
     |  
     |  save(...)
     |      save(self, QDataStream)
     |  
     |  swap(...)
     |      swap(self, QVariant)
     |  
     |  type(...)
     |      type(self) -> QVariant.Type
     |  
     |  typeName(...)
     |      typeName(self) -> str
     |  
     |  typeToName(...)
     |      typeToName(int) -> str
     |  
     |  userType(...)
     |      userType(self) -> int
     |  
     |  value(...)
     |      value(self) -> object
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  BitArray = 13
     |  
     |  Bitmap = 73
     |  
     |  Bool = 1
     |  
     |  Brush = 66
     |  
     |  ByteArray = 12
     |  
     |  Char = 7
     |  
     |  Color = 67
     |  
     |  Cursor = 74
     |  
     |  Date = 14
     |  
     |  DateTime = 16
     |  
     |  Double = 6
     |  
     |  EasingCurve = 29
     |  
     |  Font = 64
     |  
     |  Hash = 28
     |  
     |  Icon = 69
     |  
     |  Image = 70
     |  
     |  Int = 2
     |  
     |  Invalid = 0
     |  
     |  KeySequence = 75
     |  
     |  Line = 23
     |  
     |  LineF = 24
     |  
     |  List = 9
     |  
     |  Locale = 18
     |  
     |  LongLong = 4
     |  
     |  Map = 8
     |  
     |  Matrix = 79
     |  
     |  Matrix4x4 = 81
     |  
     |  ModelIndex = 42
     |  
     |  Palette = 68
     |  
     |  Pen = 76
     |  
     |  PersistentModelIndex = 50
     |  
     |  Pixmap = 65
     |  
     |  Point = 25
     |  
     |  PointF = 26
     |  
     |  Polygon = 71
     |  
     |  PolygonF = 86
     |  
     |  Quaternion = 85
     |  
     |  Rect = 19
     |  
     |  RectF = 20
     |  
     |  RegExp = 27
     |  
     |  Region = 72
     |  
     |  RegularExpression = 44
     |  
     |  Size = 21
     |  
     |  SizeF = 22
     |  
     |  SizePolicy = 121
     |  
     |  String = 10
     |  
     |  StringList = 11
     |  
     |  TextFormat = 78
     |  
     |  TextLength = 77
     |  
     |  Time = 15
     |  
     |  Transform = 80
     |  
     |  Type = <class 'PyQt5.QtCore.QVariant.Type'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  UInt = 3
     |  
     |  ULongLong = 5
     |  
     |  Url = 17
     |  
     |  UserType = 1024
     |  
     |  Uuid = 30
     |  
     |  Vector2D = 82
     |  
     |  Vector3D = 83
     |  
     |  Vector4D = 84
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QVariantAnimation(QAbstractAnimation)
     |  QVariantAnimation(parent: QObject = None)
     |  
     |  Method resolution order:
     |      QVariantAnimation
     |      QAbstractAnimation
     |      QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  currentValue(...)
     |      currentValue(self) -> Any
     |  
     |  duration(...)
     |      duration(self) -> int
     |  
     |  easingCurve(...)
     |      easingCurve(self) -> QEasingCurve
     |  
     |  endValue(...)
     |      endValue(self) -> Any
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  interpolated(...)
     |      interpolated(self, Any, Any, float) -> Any
     |  
     |  keyValueAt(...)
     |      keyValueAt(self, float) -> Any
     |  
     |  keyValues(...)
     |      keyValues(self) -> List[Tuple[float, Any]]
     |  
     |  setDuration(...)
     |      setDuration(self, int)
     |  
     |  setEasingCurve(...)
     |      setEasingCurve(self, Union[QEasingCurve, QEasingCurve.Type])
     |  
     |  setEndValue(...)
     |      setEndValue(self, Any)
     |  
     |  setKeyValueAt(...)
     |      setKeyValueAt(self, float, Any)
     |  
     |  setKeyValues(...)
     |      setKeyValues(self, Iterable[Tuple[float, Any]])
     |  
     |  setStartValue(...)
     |      setStartValue(self, Any)
     |  
     |  startValue(...)
     |      startValue(self) -> Any
     |  
     |  updateCurrentTime(...)
     |      updateCurrentTime(self, int)
     |  
     |  updateCurrentValue(...)
     |      updateCurrentValue(self, Any)
     |  
     |  updateState(...)
     |      updateState(self, QAbstractAnimation.State, QAbstractAnimation.State)
     |  
     |  valueChanged = <unbound PYQT_SIGNAL valueChanged(QVariant)>
     |  ----------------------------------------------------------------------
     |  Methods inherited from QAbstractAnimation:
     |  
     |  currentLoop(...)
     |      currentLoop(self) -> int
     |  
     |  currentLoopChanged = <unbound PYQT_SIGNAL currentLoopChanged(int)>
     |  currentLoopTime(...)
     |      currentLoopTime(self) -> int
     |  
     |  currentTime(...)
     |      currentTime(self) -> int
     |  
     |  direction(...)
     |      direction(self) -> QAbstractAnimation.Direction
     |  
     |  directionChanged = <unbound PYQT_SIGNAL directionChanged(QAbstractAnimation::Direction)>
     |  finished = <unbound PYQT_SIGNAL finished()>
     |  group(...)
     |      group(self) -> QAnimationGroup
     |  
     |  loopCount(...)
     |      loopCount(self) -> int
     |  
     |  pause(...)
     |      pause(self)
     |  
     |  resume(...)
     |      resume(self)
     |  
     |  setCurrentTime(...)
     |      setCurrentTime(self, int)
     |  
     |  setDirection(...)
     |      setDirection(self, QAbstractAnimation.Direction)
     |  
     |  setLoopCount(...)
     |      setLoopCount(self, int)
     |  
     |  setPaused(...)
     |      setPaused(self, bool)
     |  
     |  start(...)
     |      start(self, policy: QAbstractAnimation.DeletionPolicy = QAbstractAnimation.KeepWhenStopped)
     |  
     |  state(...)
     |      state(self) -> QAbstractAnimation.State
     |  
     |  stateChanged = <unbound PYQT_SIGNAL stateChanged(QAbstractAnimation::State,QAbstractAnimation::State)>
     |  stop(...)
     |      stop(self)
     |  
     |  totalDuration(...)
     |      totalDuration(self) -> int
     |  
     |  updateDirection(...)
     |      updateDirection(self, QAbstractAnimation.Direction)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QAbstractAnimation:
     |  
     |  Backward = 1
     |  
     |  DeleteWhenStopped = 1
     |  
     |  DeletionPolicy = <class 'PyQt5.QtCore.QAbstractAnimation.DeletionPolic...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Direction = <class 'PyQt5.QtCore.QAbstractAnimation.Direction'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Forward = 0
     |  
     |  KeepWhenStopped = 0
     |  
     |  Paused = 1
     |  
     |  Running = 2
     |  
     |  State = <class 'PyQt5.QtCore.QAbstractAnimation.State'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Stopped = 0
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QVersionNumber(sip.simplewrapper)
     |  QVersionNumber()
     |  QVersionNumber(Iterable[int])
     |  QVersionNumber(int)
     |  QVersionNumber(int, int)
     |  QVersionNumber(int, int, int)
     |  QVersionNumber(QVersionNumber)
     |  
     |  Method resolution order:
     |      QVersionNumber
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  commonPrefix(...)
     |      commonPrefix(QVersionNumber, QVersionNumber) -> QVersionNumber
     |  
     |  compare(...)
     |      compare(QVersionNumber, QVersionNumber) -> int
     |  
     |  fromString(...)
     |      fromString(str) -> Tuple[QVersionNumber, int]
     |  
     |  isNormalized(...)
     |      isNormalized(self) -> bool
     |  
     |  isNull(...)
     |      isNull(self) -> bool
     |  
     |  isPrefixOf(...)
     |      isPrefixOf(self, QVersionNumber) -> bool
     |  
     |  majorVersion(...)
     |      majorVersion(self) -> int
     |  
     |  microVersion(...)
     |      microVersion(self) -> int
     |  
     |  minorVersion(...)
     |      minorVersion(self) -> int
     |  
     |  normalized(...)
     |      normalized(self) -> QVersionNumber
     |  
     |  segmentAt(...)
     |      segmentAt(self, int) -> int
     |  
     |  segmentCount(...)
     |      segmentCount(self) -> int
     |  
     |  segments(...)
     |      segments(self) -> List[int]
     |  
     |  toString(...)
     |      toString(self) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QWaitCondition(sip.simplewrapper)
     |  QWaitCondition()
     |  
     |  Method resolution order:
     |      QWaitCondition
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  wait(...)
     |      wait(self, QMutex, msecs: int = ULONG_MAX) -> bool
     |      wait(self, QReadWriteLock, msecs: int = ULONG_MAX) -> bool
     |  
     |  wakeAll(...)
     |      wakeAll(self)
     |  
     |  wakeOne(...)
     |      wakeOne(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QWriteLocker(sip.simplewrapper)
     |  QWriteLocker(QReadWriteLock)
     |  
     |  Method resolution order:
     |      QWriteLocker
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __enter__(...)
     |      __enter__(self) -> object
     |  
     |  __exit__(...)
     |      __exit__(self, object, object, object)
     |  
     |  readWriteLock(...)
     |      readWriteLock(self) -> QReadWriteLock
     |  
     |  relock(...)
     |      relock(self)
     |  
     |  unlock(...)
     |      unlock(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QXmlStreamAttribute(sip.simplewrapper)
     |  QXmlStreamAttribute()
     |  QXmlStreamAttribute(str, str)
     |  QXmlStreamAttribute(str, str, str)
     |  QXmlStreamAttribute(QXmlStreamAttribute)
     |  
     |  Method resolution order:
     |      QXmlStreamAttribute
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  isDefault(...)
     |      isDefault(self) -> bool
     |  
     |  name(...)
     |      name(self) -> str
     |  
     |  namespaceUri(...)
     |      namespaceUri(self) -> str
     |  
     |  prefix(...)
     |      prefix(self) -> str
     |  
     |  qualifiedName(...)
     |      qualifiedName(self) -> str
     |  
     |  value(...)
     |      value(self) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QXmlStreamAttributes(sip.simplewrapper)
     |  QXmlStreamAttributes()
     |  QXmlStreamAttributes(QXmlStreamAttributes)
     |  
     |  Method resolution order:
     |      QXmlStreamAttributes
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __contains__(self, key, /)
     |      Return key in self.
     |  
     |  __delitem__(self, key, /)
     |      Delete self[key].
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __iadd__(self, value, /)
     |      Implement self+=value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __len__(self, /)
     |      Return len(self).
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __setitem__(self, key, value, /)
     |      Set self[key] to value.
     |  
     |  append(...)
     |      append(self, str, str, str)
     |      append(self, str, str)
     |      append(self, QXmlStreamAttribute)
     |  
     |  at(...)
     |      at(self, int) -> QXmlStreamAttribute
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  contains(...)
     |      contains(self, QXmlStreamAttribute) -> bool
     |  
     |  count(...)
     |      count(self, QXmlStreamAttribute) -> int
     |      count(self) -> int
     |  
     |  data(...)
     |      data(self) -> sip.voidptr
     |  
     |  fill(...)
     |      fill(self, QXmlStreamAttribute, size: int = -1)
     |  
     |  first(...)
     |      first(self) -> QXmlStreamAttribute
     |  
     |  hasAttribute(...)
     |      hasAttribute(self, str) -> bool
     |      hasAttribute(self, str, str) -> bool
     |  
     |  indexOf(...)
     |      indexOf(self, QXmlStreamAttribute, from_: int = 0) -> int
     |  
     |  insert(...)
     |      insert(self, int, QXmlStreamAttribute)
     |  
     |  isEmpty(...)
     |      isEmpty(self) -> bool
     |  
     |  last(...)
     |      last(self) -> QXmlStreamAttribute
     |  
     |  lastIndexOf(...)
     |      lastIndexOf(self, QXmlStreamAttribute, from_: int = -1) -> int
     |  
     |  prepend(...)
     |      prepend(self, QXmlStreamAttribute)
     |  
     |  remove(...)
     |      remove(self, int)
     |      remove(self, int, int)
     |  
     |  replace(...)
     |      replace(self, int, QXmlStreamAttribute)
     |  
     |  size(...)
     |      size(self) -> int
     |  
     |  value(...)
     |      value(self, str, str) -> str
     |      value(self, str) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QXmlStreamEntityDeclaration(sip.simplewrapper)
     |  QXmlStreamEntityDeclaration()
     |  QXmlStreamEntityDeclaration(QXmlStreamEntityDeclaration)
     |  
     |  Method resolution order:
     |      QXmlStreamEntityDeclaration
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  name(...)
     |      name(self) -> str
     |  
     |  notationName(...)
     |      notationName(self) -> str
     |  
     |  publicId(...)
     |      publicId(self) -> str
     |  
     |  systemId(...)
     |      systemId(self) -> str
     |  
     |  value(...)
     |      value(self) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QXmlStreamEntityResolver(sip.simplewrapper)
     |  QXmlStreamEntityResolver()
     |  QXmlStreamEntityResolver(QXmlStreamEntityResolver)
     |  
     |  Method resolution order:
     |      QXmlStreamEntityResolver
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  resolveUndeclaredEntity(...)
     |      resolveUndeclaredEntity(self, str) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QXmlStreamNamespaceDeclaration(sip.simplewrapper)
     |  QXmlStreamNamespaceDeclaration()
     |  QXmlStreamNamespaceDeclaration(QXmlStreamNamespaceDeclaration)
     |  QXmlStreamNamespaceDeclaration(str, str)
     |  
     |  Method resolution order:
     |      QXmlStreamNamespaceDeclaration
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  namespaceUri(...)
     |      namespaceUri(self) -> str
     |  
     |  prefix(...)
     |      prefix(self) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QXmlStreamNotationDeclaration(sip.simplewrapper)
     |  QXmlStreamNotationDeclaration()
     |  QXmlStreamNotationDeclaration(QXmlStreamNotationDeclaration)
     |  
     |  Method resolution order:
     |      QXmlStreamNotationDeclaration
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  name(...)
     |      name(self) -> str
     |  
     |  publicId(...)
     |      publicId(self) -> str
     |  
     |  systemId(...)
     |      systemId(self) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __hash__ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QXmlStreamReader(sip.simplewrapper)
     |  QXmlStreamReader()
     |  QXmlStreamReader(QIODevice)
     |  QXmlStreamReader(Union[QByteArray, bytes, bytearray])
     |  QXmlStreamReader(str)
     |  
     |  Method resolution order:
     |      QXmlStreamReader
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  addData(...)
     |      addData(self, Union[QByteArray, bytes, bytearray])
     |      addData(self, str)
     |  
     |  addExtraNamespaceDeclaration(...)
     |      addExtraNamespaceDeclaration(self, QXmlStreamNamespaceDeclaration)
     |  
     |  addExtraNamespaceDeclarations(...)
     |      addExtraNamespaceDeclarations(self, Iterable[QXmlStreamNamespaceDeclaration])
     |  
     |  atEnd(...)
     |      atEnd(self) -> bool
     |  
     |  attributes(...)
     |      attributes(self) -> QXmlStreamAttributes
     |  
     |  characterOffset(...)
     |      characterOffset(self) -> int
     |  
     |  clear(...)
     |      clear(self)
     |  
     |  columnNumber(...)
     |      columnNumber(self) -> int
     |  
     |  device(...)
     |      device(self) -> QIODevice
     |  
     |  documentEncoding(...)
     |      documentEncoding(self) -> str
     |  
     |  documentVersion(...)
     |      documentVersion(self) -> str
     |  
     |  dtdName(...)
     |      dtdName(self) -> str
     |  
     |  dtdPublicId(...)
     |      dtdPublicId(self) -> str
     |  
     |  dtdSystemId(...)
     |      dtdSystemId(self) -> str
     |  
     |  entityDeclarations(...)
     |      entityDeclarations(self) -> List[QXmlStreamEntityDeclaration]
     |  
     |  entityResolver(...)
     |      entityResolver(self) -> QXmlStreamEntityResolver
     |  
     |  error(...)
     |      error(self) -> QXmlStreamReader.Error
     |  
     |  errorString(...)
     |      errorString(self) -> str
     |  
     |  hasError(...)
     |      hasError(self) -> bool
     |  
     |  isCDATA(...)
     |      isCDATA(self) -> bool
     |  
     |  isCharacters(...)
     |      isCharacters(self) -> bool
     |  
     |  isComment(...)
     |      isComment(self) -> bool
     |  
     |  isDTD(...)
     |      isDTD(self) -> bool
     |  
     |  isEndDocument(...)
     |      isEndDocument(self) -> bool
     |  
     |  isEndElement(...)
     |      isEndElement(self) -> bool
     |  
     |  isEntityReference(...)
     |      isEntityReference(self) -> bool
     |  
     |  isProcessingInstruction(...)
     |      isProcessingInstruction(self) -> bool
     |  
     |  isStandaloneDocument(...)
     |      isStandaloneDocument(self) -> bool
     |  
     |  isStartDocument(...)
     |      isStartDocument(self) -> bool
     |  
     |  isStartElement(...)
     |      isStartElement(self) -> bool
     |  
     |  isWhitespace(...)
     |      isWhitespace(self) -> bool
     |  
     |  lineNumber(...)
     |      lineNumber(self) -> int
     |  
     |  name(...)
     |      name(self) -> str
     |  
     |  namespaceDeclarations(...)
     |      namespaceDeclarations(self) -> List[QXmlStreamNamespaceDeclaration]
     |  
     |  namespaceProcessing(...)
     |      namespaceProcessing(self) -> bool
     |  
     |  namespaceUri(...)
     |      namespaceUri(self) -> str
     |  
     |  notationDeclarations(...)
     |      notationDeclarations(self) -> List[QXmlStreamNotationDeclaration]
     |  
     |  prefix(...)
     |      prefix(self) -> str
     |  
     |  processingInstructionData(...)
     |      processingInstructionData(self) -> str
     |  
     |  processingInstructionTarget(...)
     |      processingInstructionTarget(self) -> str
     |  
     |  qualifiedName(...)
     |      qualifiedName(self) -> str
     |  
     |  raiseError(...)
     |      raiseError(self, message: str = '')
     |  
     |  readElementText(...)
     |      readElementText(self, behaviour: QXmlStreamReader.ReadElementTextBehaviour = QXmlStreamReader.ErrorOnUnexpectedElement) -> str
     |  
     |  readNext(...)
     |      readNext(self) -> QXmlStreamReader.TokenType
     |  
     |  readNextStartElement(...)
     |      readNextStartElement(self) -> bool
     |  
     |  setDevice(...)
     |      setDevice(self, QIODevice)
     |  
     |  setEntityResolver(...)
     |      setEntityResolver(self, QXmlStreamEntityResolver)
     |  
     |  setNamespaceProcessing(...)
     |      setNamespaceProcessing(self, bool)
     |  
     |  skipCurrentElement(...)
     |      skipCurrentElement(self)
     |  
     |  text(...)
     |      text(self) -> str
     |  
     |  tokenString(...)
     |      tokenString(self) -> str
     |  
     |  tokenType(...)
     |      tokenType(self) -> QXmlStreamReader.TokenType
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Characters = 6
     |  
     |  Comment = 7
     |  
     |  CustomError = 2
     |  
     |  DTD = 8
     |  
     |  EndDocument = 3
     |  
     |  EndElement = 5
     |  
     |  EntityReference = 9
     |  
     |  Error = <class 'PyQt5.QtCore.QXmlStreamReader.Error'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ErrorOnUnexpectedElement = 0
     |  
     |  IncludeChildElements = 1
     |  
     |  Invalid = 1
     |  
     |  NoError = 0
     |  
     |  NoToken = 0
     |  
     |  NotWellFormedError = 3
     |  
     |  PrematureEndOfDocumentError = 4
     |  
     |  ProcessingInstruction = 10
     |  
     |  ReadElementTextBehaviour = <class 'PyQt5.QtCore.QXmlStreamReader.ReadE...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  SkipChildElements = 2
     |  
     |  StartDocument = 2
     |  
     |  StartElement = 4
     |  
     |  TokenType = <class 'PyQt5.QtCore.QXmlStreamReader.TokenType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  UnexpectedElementError = 1
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QXmlStreamWriter(sip.simplewrapper)
     |  QXmlStreamWriter()
     |  QXmlStreamWriter(QIODevice)
     |  QXmlStreamWriter(Union[QByteArray, bytes, bytearray])
     |  
     |  Method resolution order:
     |      QXmlStreamWriter
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  autoFormatting(...)
     |      autoFormatting(self) -> bool
     |  
     |  autoFormattingIndent(...)
     |      autoFormattingIndent(self) -> int
     |  
     |  codec(...)
     |      codec(self) -> QTextCodec
     |  
     |  device(...)
     |      device(self) -> QIODevice
     |  
     |  hasError(...)
     |      hasError(self) -> bool
     |  
     |  setAutoFormatting(...)
     |      setAutoFormatting(self, bool)
     |  
     |  setAutoFormattingIndent(...)
     |      setAutoFormattingIndent(self, int)
     |  
     |  setCodec(...)
     |      setCodec(self, QTextCodec)
     |      setCodec(self, str)
     |  
     |  setDevice(...)
     |      setDevice(self, QIODevice)
     |  
     |  writeAttribute(...)
     |      writeAttribute(self, str, str)
     |      writeAttribute(self, str, str, str)
     |      writeAttribute(self, QXmlStreamAttribute)
     |  
     |  writeAttributes(...)
     |      writeAttributes(self, QXmlStreamAttributes)
     |  
     |  writeCDATA(...)
     |      writeCDATA(self, str)
     |  
     |  writeCharacters(...)
     |      writeCharacters(self, str)
     |  
     |  writeComment(...)
     |      writeComment(self, str)
     |  
     |  writeCurrentToken(...)
     |      writeCurrentToken(self, QXmlStreamReader)
     |  
     |  writeDTD(...)
     |      writeDTD(self, str)
     |  
     |  writeDefaultNamespace(...)
     |      writeDefaultNamespace(self, str)
     |  
     |  writeEmptyElement(...)
     |      writeEmptyElement(self, str)
     |      writeEmptyElement(self, str, str)
     |  
     |  writeEndDocument(...)
     |      writeEndDocument(self)
     |  
     |  writeEndElement(...)
     |      writeEndElement(self)
     |  
     |  writeEntityReference(...)
     |      writeEntityReference(self, str)
     |  
     |  writeNamespace(...)
     |      writeNamespace(self, str, prefix: str = '')
     |  
     |  writeProcessingInstruction(...)
     |      writeProcessingInstruction(self, str, data: str = '')
     |  
     |  writeStartDocument(...)
     |      writeStartDocument(self)
     |      writeStartDocument(self, str)
     |      writeStartDocument(self, str, bool)
     |  
     |  writeStartElement(...)
     |      writeStartElement(self, str)
     |      writeStartElement(self, str, str)
     |  
     |  writeTextElement(...)
     |      writeTextElement(self, str, str)
     |      writeTextElement(self, str, str, str)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class Qt(sip.simplewrapper)
     |  Method resolution order:
     |      Qt
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AA_CompressHighFrequencyEvents = 25
     |  
     |  AA_CompressTabletEvents = 29
     |  
     |  AA_DisableHighDpiScaling = 21
     |  
     |  AA_DisableShaderDiskCache = 27
     |  
     |  AA_DisableWindowContextHelpButton = 30
     |  
     |  AA_DontCheckOpenGLContextThreadAffinity = 26
     |  
     |  AA_DontCreateNativeWidgetSiblings = 4
     |  
     |  AA_DontShowIconsInMenus = 2
     |  
     |  AA_DontShowShortcutsInContextMenus = 28
     |  
     |  AA_DontUseNativeDialogs = 23
     |  
     |  AA_DontUseNativeMenuBar = 6
     |  
     |  AA_EnableHighDpiScaling = 20
     |  
     |  AA_ForceRasterWidgets = 14
     |  
     |  AA_ImmediateWidgetCreation = 0
     |  
     |  AA_MSWindowsUseDirect3DByDefault = 1
     |  
     |  AA_MacDontSwapCtrlAndMeta = 7
     |  
     |  AA_MacPluginApplication = 5
     |  
     |  AA_NativeWindows = 3
     |  
     |  AA_PluginApplication = 5
     |  
     |  AA_SetPalette = 19
     |  
     |  AA_ShareOpenGLContexts = 18
     |  
     |  AA_SynthesizeMouseForUnhandledTabletEvents = 24
     |  
     |  AA_SynthesizeMouseForUnhandledTouchEvents = 12
     |  
     |  AA_SynthesizeTouchForUnhandledMouseEvents = 11
     |  
     |  AA_Use96Dpi = 8
     |  
     |  AA_UseDesktopOpenGL = 15
     |  
     |  AA_UseHighDpiPixmaps = 13
     |  
     |  AA_UseOpenGLES = 16
     |  
     |  AA_UseSoftwareOpenGL = 17
     |  
     |  AA_UseStyleSheetPropagationInWidgetStyles = 22
     |  
     |  AA_X11InitThreads = 10
     |  
     |  ALT = 134217728
     |  
     |  AbsoluteSize = 0
     |  
     |  AccessibleDescriptionRole = 12
     |  
     |  AccessibleTextRole = 11
     |  
     |  ActionMask = 255
     |  
     |  ActionsContextMenu = 2
     |  
     |  ActiveWindowFocusReason = 3
     |  
     |  AddToSelection = 1
     |  
     |  AlignAbsolute = 16
     |  
     |  AlignBaseline = 256
     |  
     |  AlignBottom = 64
     |  
     |  AlignCenter = 132
     |  
     |  AlignHCenter = 4
     |  
     |  AlignHorizontal_Mask = 31
     |  
     |  AlignJustify = 8
     |  
     |  AlignLeading = 1
     |  
     |  AlignLeft = 1
     |  
     |  AlignRight = 2
     |  
     |  AlignTop = 32
     |  
     |  AlignTrailing = 2
     |  
     |  AlignVCenter = 128
     |  
     |  AlignVertical_Mask = 480
     |  
     |  Alignment = <class 'PyQt5.QtCore.Qt.Alignment'>
     |      Qt.Alignment()
     |      Qt.Alignment(Union[Qt.Alignment, Qt.AlignmentFlag])
     |      Qt.Alignment(Qt.Alignment)
     |  
     |  AlignmentFlag = <class 'PyQt5.QtCore.Qt.AlignmentFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  AllButtons = 134217727
     |  
     |  AllDockWidgetAreas = 15
     |  
     |  AllToolBarAreas = 15
     |  
     |  AltModifier = 134217728
     |  
     |  AnchorBottom = 5
     |  
     |  AnchorHorizontalCenter = 1
     |  
     |  AnchorLeft = 0
     |  
     |  AnchorPoint = <class 'PyQt5.QtCore.Qt.AnchorPoint'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  AnchorRight = 2
     |  
     |  AnchorTop = 3
     |  
     |  AnchorVerticalCenter = 4
     |  
     |  ApplicationActive = 4
     |  
     |  ApplicationAttribute = <class 'PyQt5.QtCore.Qt.ApplicationAttribute'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ApplicationHidden = 1
     |  
     |  ApplicationInactive = 2
     |  
     |  ApplicationModal = 2
     |  
     |  ApplicationShortcut = 2
     |  
     |  ApplicationState = <class 'PyQt5.QtCore.Qt.ApplicationState'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ApplicationStates = <class 'PyQt5.QtCore.Qt.ApplicationStates'>
     |      Qt.ApplicationStates()
     |      Qt.ApplicationStates(Union[Qt.ApplicationStates, Qt.ApplicationState])
     |      Qt.ApplicationStates(Qt.ApplicationStates)
     |  
     |  ApplicationSuspended = 0
     |  
     |  ArrowCursor = 0
     |  
     |  ArrowType = <class 'PyQt5.QtCore.Qt.ArrowType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  AscendingOrder = 0
     |  
     |  AspectRatioMode = <class 'PyQt5.QtCore.Qt.AspectRatioMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  AutoColor = 0
     |  
     |  AutoConnection = 0
     |  
     |  AutoDither = 0
     |  
     |  AutoText = 2
     |  
     |  AvoidDither = 128
     |  
     |  Axis = <class 'PyQt5.QtCore.Qt.Axis'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  BDiagPattern = 12
     |  
     |  BGMode = <class 'PyQt5.QtCore.Qt.BGMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  BackButton = 8
     |  
     |  BackgroundColorRole = 8
     |  
     |  BackgroundRole = 8
     |  
     |  BacktabFocusReason = 2
     |  
     |  BeginNativeGesture = 0
     |  
     |  BevelJoin = 64
     |  
     |  BitmapCursor = 24
     |  
     |  BlankCursor = 10
     |  
     |  BlockingQueuedConnection = 3
     |  
     |  BottomDockWidgetArea = 8
     |  
     |  BottomEdge = 8
     |  
     |  BottomLeftCorner = 2
     |  
     |  BottomLeftSection = 8
     |  
     |  BottomRightCorner = 3
     |  
     |  BottomRightSection = 6
     |  
     |  BottomSection = 7
     |  
     |  BottomToolBarArea = 8
     |  
     |  BrushStyle = <class 'PyQt5.QtCore.Qt.BrushStyle'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  BusyCursor = 16
     |  
     |  BypassGraphicsProxyWidget = 536870912
     |  
     |  BypassWindowManagerHint = 1024
     |  
     |  CTRL = 67108864
     |  
     |  CaseInsensitive = 0
     |  
     |  CaseSensitive = 1
     |  
     |  CaseSensitivity = <class 'PyQt5.QtCore.Qt.CaseSensitivity'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  CheckState = <class 'PyQt5.QtCore.Qt.CheckState'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  CheckStateRole = 10
     |  
     |  Checked = 2
     |  
     |  ChecksumIso3309 = 0
     |  
     |  ChecksumItuV41 = 1
     |  
     |  ChecksumType = <class 'PyQt5.QtCore.Qt.ChecksumType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ClickFocus = 2
     |  
     |  ClipOperation = <class 'PyQt5.QtCore.Qt.ClipOperation'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ClosedHandCursor = 18
     |  
     |  CoarseTimer = 1
     |  
     |  ColorOnly = 3
     |  
     |  ConicalGradientPattern = 17
     |  
     |  ConnectionType = <class 'PyQt5.QtCore.Qt.ConnectionType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ContainsItemBoundingRect = 2
     |  
     |  ContainsItemShape = 0
     |  
     |  ContextMenuPolicy = <class 'PyQt5.QtCore.Qt.ContextMenuPolicy'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ControlModifier = 67108864
     |  
     |  CoordinateSystem = <class 'PyQt5.QtCore.Qt.CoordinateSystem'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  CopyAction = 1
     |  
     |  Corner = <class 'PyQt5.QtCore.Qt.Corner'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  CoverWindow = 65
     |  
     |  CrossCursor = 2
     |  
     |  CrossPattern = 11
     |  
     |  CursorMoveStyle = <class 'PyQt5.QtCore.Qt.CursorMoveStyle'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  CursorShape = <class 'PyQt5.QtCore.Qt.CursorShape'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  CustomContextMenu = 3
     |  
     |  CustomCursor = 25
     |  
     |  CustomDashLine = 6
     |  
     |  CustomGesture = 256
     |  
     |  CustomizeWindowHint = 33554432
     |  
     |  DashDotDotLine = 5
     |  
     |  DashDotLine = 4
     |  
     |  DashLine = 2
     |  
     |  DateFormat = <class 'PyQt5.QtCore.Qt.DateFormat'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  DayOfWeek = <class 'PyQt5.QtCore.Qt.DayOfWeek'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  DecorationRole = 1
     |  
     |  DefaultContextMenu = 1
     |  
     |  DefaultLocaleLongDate = 7
     |  
     |  DefaultLocaleShortDate = 6
     |  
     |  Dense1Pattern = 2
     |  
     |  Dense2Pattern = 3
     |  
     |  Dense3Pattern = 4
     |  
     |  Dense4Pattern = 5
     |  
     |  Dense5Pattern = 6
     |  
     |  Dense6Pattern = 7
     |  
     |  Dense7Pattern = 8
     |  
     |  DescendingOrder = 1
     |  
     |  Desktop = 17
     |  
     |  DeviceCoordinates = 0
     |  
     |  DiagCrossPattern = 14
     |  
     |  Dialog = 3
     |  
     |  DiffuseAlphaDither = 8
     |  
     |  DiffuseDither = 0
     |  
     |  DirectConnection = 1
     |  
     |  DisplayRole = 0
     |  
     |  DockWidgetArea = <class 'PyQt5.QtCore.Qt.DockWidgetArea'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  DockWidgetArea_Mask = 15
     |  
     |  DockWidgetAreas = <class 'PyQt5.QtCore.Qt.DockWidgetAreas'>
     |      Qt.DockWidgetAreas()
     |      Qt.DockWidgetAreas(Union[Qt.DockWidgetAreas, Qt.DockWidgetArea])
     |      Qt.DockWidgetAreas(Qt.DockWidgetAreas)
     |  
     |  DontStartGestureOnChildren = 1
     |  
     |  DotLine = 3
     |  
     |  DownArrow = 2
     |  
     |  DragCopyCursor = 19
     |  
     |  DragLinkCursor = 21
     |  
     |  DragMoveCursor = 20
     |  
     |  Drawer = 7
     |  
     |  DropAction = <class 'PyQt5.QtCore.Qt.DropAction'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  DropActions = <class 'PyQt5.QtCore.Qt.DropActions'>
     |      Qt.DropActions()
     |      Qt.DropActions(Union[Qt.DropActions, Qt.DropAction])
     |      Qt.DropActions(Qt.DropActions)
     |  
     |  Edge = <class 'PyQt5.QtCore.Qt.Edge'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Edges = <class 'PyQt5.QtCore.Qt.Edges'>
     |      Qt.Edges()
     |      Qt.Edges(Union[Qt.Edges, Qt.Edge])
     |      Qt.Edges(Qt.Edges)
     |  
     |  EditRole = 2
     |  
     |  ElideLeft = 0
     |  
     |  ElideMiddle = 2
     |  
     |  ElideNone = 3
     |  
     |  ElideRight = 1
     |  
     |  EndNativeGesture = 1
     |  
     |  EnterKeyDefault = 0
     |  
     |  EnterKeyDone = 2
     |  
     |  EnterKeyGo = 3
     |  
     |  EnterKeyNext = 6
     |  
     |  EnterKeyPrevious = 7
     |  
     |  EnterKeyReturn = 1
     |  
     |  EnterKeySearch = 5
     |  
     |  EnterKeySend = 4
     |  
     |  EnterKeyType = <class 'PyQt5.QtCore.Qt.EnterKeyType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  EventPriority = <class 'PyQt5.QtCore.Qt.EventPriority'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ExactHit = 0
     |  
     |  ExtraButton1 = 8
     |  
     |  ExtraButton10 = 4096
     |  
     |  ExtraButton11 = 8192
     |  
     |  ExtraButton12 = 16384
     |  
     |  ExtraButton13 = 32768
     |  
     |  ExtraButton14 = 65536
     |  
     |  ExtraButton15 = 131072
     |  
     |  ExtraButton16 = 262144
     |  
     |  ExtraButton17 = 524288
     |  
     |  ExtraButton18 = 1048576
     |  
     |  ExtraButton19 = 2097152
     |  
     |  ExtraButton2 = 16
     |  
     |  ExtraButton20 = 4194304
     |  
     |  ExtraButton21 = 8388608
     |  
     |  ExtraButton22 = 16777216
     |  
     |  ExtraButton23 = 33554432
     |  
     |  ExtraButton24 = 67108864
     |  
     |  ExtraButton3 = 32
     |  
     |  ExtraButton4 = 64
     |  
     |  ExtraButton5 = 128
     |  
     |  ExtraButton6 = 256
     |  
     |  ExtraButton7 = 512
     |  
     |  ExtraButton8 = 1024
     |  
     |  ExtraButton9 = 2048
     |  
     |  FDiagPattern = 13
     |  
     |  FastTransformation = 0
     |  
     |  FillRule = <class 'PyQt5.QtCore.Qt.FillRule'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FindChildOption = <class 'PyQt5.QtCore.Qt.FindChildOption'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FindChildOptions = <class 'PyQt5.QtCore.Qt.FindChildOptions'>
     |      Qt.FindChildOptions()
     |      Qt.FindChildOptions(Union[Qt.FindChildOptions, Qt.FindChildOption])
     |      Qt.FindChildOptions(Qt.FindChildOptions)
     |  
     |  FindChildrenRecursively = 1
     |  
     |  FindDirectChildrenOnly = 0
     |  
     |  FlatCap = 0
     |  
     |  FocusPolicy = <class 'PyQt5.QtCore.Qt.FocusPolicy'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FocusReason = <class 'PyQt5.QtCore.Qt.FocusReason'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  FontRole = 6
     |  
     |  ForbiddenCursor = 14
     |  
     |  ForegroundRole = 9
     |  
     |  ForeignWindow = 33
     |  
     |  ForwardButton = 16
     |  
     |  FramelessWindowHint = 2048
     |  
     |  Friday = 5
     |  
     |  FuzzyHit = 1
     |  
     |  GestureCanceled = 4
     |  
     |  GestureFinished = 3
     |  
     |  GestureFlag = <class 'PyQt5.QtCore.Qt.GestureFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  GestureFlags = <class 'PyQt5.QtCore.Qt.GestureFlags'>
     |      Qt.GestureFlags()
     |      Qt.GestureFlags(Union[Qt.GestureFlags, Qt.GestureFlag])
     |      Qt.GestureFlags(Qt.GestureFlags)
     |  
     |  GestureStarted = 1
     |  
     |  GestureState = <class 'PyQt5.QtCore.Qt.GestureState'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  GestureType = <class 'PyQt5.QtCore.Qt.GestureType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  GestureUpdated = 2
     |  
     |  GlobalColor = <class 'PyQt5.QtCore.Qt.GlobalColor'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  GroupSwitchModifier = 1073741824
     |  
     |  HighEventPriority = 1
     |  
     |  HitTestAccuracy = <class 'PyQt5.QtCore.Qt.HitTestAccuracy'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  HorPattern = 9
     |  
     |  Horizontal = 1
     |  
     |  IBeamCursor = 4
     |  
     |  ISODate = 1
     |  
     |  ISODateWithMs = 9
     |  
     |  IgnoreAction = 0
     |  
     |  IgnoreAspectRatio = 0
     |  
     |  IgnoredGesturesPropagateToParent = 4
     |  
     |  ImAbsolutePosition = 1024
     |  
     |  ImAnchorPosition = 128
     |  
     |  ImAnchorRectangle = 16384
     |  
     |  ImCurrentSelection = 32
     |  
     |  ImCursorPosition = 8
     |  
     |  ImCursorRectangle = 2
     |  
     |  ImEnabled = 1
     |  
     |  ImEnterKeyType = 8192
     |  
     |  ImFont = 4
     |  
     |  ImHints = 256
     |  
     |  ImInputItemClipRectangle = 32768
     |  
     |  ImMaximumTextLength = 64
     |  
     |  ImMicroFocus = 2
     |  
     |  ImPlatformData = -2147483648
     |  
     |  ImPreferredLanguage = 512
     |  
     |  ImQueryAll = -1
     |  
     |  ImQueryInput = 16570
     |  
     |  ImSurroundingText = 16
     |  
     |  ImTextAfterCursor = 4096
     |  
     |  ImTextBeforeCursor = 2048
     |  
     |  ImageConversionFlag = <class 'PyQt5.QtCore.Qt.ImageConversionFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ImageConversionFlags = <class 'PyQt5.QtCore.Qt.ImageConversionFlags'>
     |      Qt.ImageConversionFlags()
     |      Qt.ImageConversionFlags(Union[Qt.ImageConversionFlags, Qt.ImageConversionFlag])
     |      Qt.ImageConversionFlags(Qt.ImageConversionFlags)
     |  
     |  ImhDate = 128
     |  
     |  ImhDialableCharactersOnly = 1048576
     |  
     |  ImhDigitsOnly = 65536
     |  
     |  ImhEmailCharactersOnly = 2097152
     |  
     |  ImhExclusiveInputMask = -65536
     |  
     |  ImhFormattedNumbersOnly = 131072
     |  
     |  ImhHiddenText = 1
     |  
     |  ImhLatinOnly = 8388608
     |  
     |  ImhLowercaseOnly = 524288
     |  
     |  ImhMultiLine = 1024
     |  
     |  ImhNoAutoUppercase = 4
     |  
     |  ImhNoEditMenu = 2048
     |  
     |  ImhNoPredictiveText = 64
     |  
     |  ImhNoTextHandles = 4096
     |  
     |  ImhNone = 0
     |  
     |  ImhPreferLatin = 512
     |  
     |  ImhPreferLowercase = 32
     |  
     |  ImhPreferNumbers = 8
     |  
     |  ImhPreferUppercase = 16
     |  
     |  ImhSensitiveData = 2
     |  
     |  ImhTime = 256
     |  
     |  ImhUppercaseOnly = 262144
     |  
     |  ImhUrlCharactersOnly = 4194304
     |  
     |  InitialSortOrderRole = 14
     |  
     |  InputMethodHint = <class 'PyQt5.QtCore.Qt.InputMethodHint'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  InputMethodHints = <class 'PyQt5.QtCore.Qt.InputMethodHints'>
     |      Qt.InputMethodHints()
     |      Qt.InputMethodHints(Union[Qt.InputMethodHints, Qt.InputMethodHint])
     |      Qt.InputMethodHints(Qt.InputMethodHints)
     |  
     |  InputMethodQueries = <class 'PyQt5.QtCore.Qt.InputMethodQueries'>
     |      Qt.InputMethodQueries()
     |      Qt.InputMethodQueries(Union[Qt.InputMethodQueries, Qt.InputMethodQuery])
     |      Qt.InputMethodQueries(Qt.InputMethodQueries)
     |  
     |  InputMethodQuery = <class 'PyQt5.QtCore.Qt.InputMethodQuery'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  IntersectClip = 2
     |  
     |  IntersectsItemBoundingRect = 3
     |  
     |  IntersectsItemShape = 1
     |  
     |  InvertedLandscapeOrientation = 8
     |  
     |  InvertedPortraitOrientation = 4
     |  
     |  ItemDataRole = <class 'PyQt5.QtCore.Qt.ItemDataRole'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ItemFlag = <class 'PyQt5.QtCore.Qt.ItemFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ItemFlags = <class 'PyQt5.QtCore.Qt.ItemFlags'>
     |      Qt.ItemFlags()
     |      Qt.ItemFlags(Union[Qt.ItemFlags, Qt.ItemFlag])
     |      Qt.ItemFlags(Qt.ItemFlags)
     |  
     |  ItemIsAutoTristate = 64
     |  
     |  ItemIsDragEnabled = 4
     |  
     |  ItemIsDropEnabled = 8
     |  
     |  ItemIsEditable = 2
     |  
     |  ItemIsEnabled = 32
     |  
     |  ItemIsSelectable = 1
     |  
     |  ItemIsTristate = 64
     |  
     |  ItemIsUserCheckable = 16
     |  
     |  ItemIsUserTristate = 256
     |  
     |  ItemNeverHasChildren = 128
     |  
     |  ItemSelectionMode = <class 'PyQt5.QtCore.Qt.ItemSelectionMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ItemSelectionOperation = <class 'PyQt5.QtCore.Qt.ItemSelectionOperatio...
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  KeepAspectRatio = 1
     |  
     |  KeepAspectRatioByExpanding = 2
     |  
     |  Key = <class 'PyQt5.QtCore.Qt.Key'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Key_0 = 48
     |  
     |  Key_1 = 49
     |  
     |  Key_2 = 50
     |  
     |  Key_3 = 51
     |  
     |  Key_4 = 52
     |  
     |  Key_5 = 53
     |  
     |  Key_6 = 54
     |  
     |  Key_7 = 55
     |  
     |  Key_8 = 56
     |  
     |  Key_9 = 57
     |  
     |  Key_A = 65
     |  
     |  Key_AE = 198
     |  
     |  Key_Aacute = 193
     |  
     |  Key_Acircumflex = 194
     |  
     |  Key_AddFavorite = 16777408
     |  
     |  Key_Adiaeresis = 196
     |  
     |  Key_Agrave = 192
     |  
     |  Key_Alt = 16777251
     |  
     |  Key_AltGr = 16781571
     |  
     |  Key_Ampersand = 38
     |  
     |  Key_Any = 32
     |  
     |  Key_Apostrophe = 39
     |  
     |  Key_ApplicationLeft = 16777415
     |  
     |  Key_ApplicationRight = 16777416
     |  
     |  Key_Aring = 197
     |  
     |  Key_AsciiCircum = 94
     |  
     |  Key_AsciiTilde = 126
     |  
     |  Key_Asterisk = 42
     |  
     |  Key_At = 64
     |  
     |  Key_Atilde = 195
     |  
     |  Key_AudioCycleTrack = 16777478
     |  
     |  Key_AudioForward = 16777474
     |  
     |  Key_AudioRandomPlay = 16777476
     |  
     |  Key_AudioRepeat = 16777475
     |  
     |  Key_AudioRewind = 16777413
     |  
     |  Key_Away = 16777464
     |  
     |  Key_B = 66
     |  
     |  Key_Back = 16777313
     |  
     |  Key_BackForward = 16777414
     |  
     |  Key_Backslash = 92
     |  
     |  Key_Backspace = 16777219
     |  
     |  Key_Backtab = 16777218
     |  
     |  Key_Bar = 124
     |  
     |  Key_BassBoost = 16777331
     |  
     |  Key_BassDown = 16777333
     |  
     |  Key_BassUp = 16777332
     |  
     |  Key_Battery = 16777470
     |  
     |  Key_Blue = 16777495
     |  
     |  Key_Bluetooth = 16777471
     |  
     |  Key_Book = 16777417
     |  
     |  Key_BraceLeft = 123
     |  
     |  Key_BraceRight = 125
     |  
     |  Key_BracketLeft = 91
     |  
     |  Key_BracketRight = 93
     |  
     |  Key_BrightnessAdjust = 16777410
     |  
     |  Key_C = 67
     |  
     |  Key_CD = 16777418
     |  
     |  Key_Calculator = 16777419
     |  
     |  Key_Calendar = 16777444
     |  
     |  Key_Call = 17825796
     |  
     |  Key_Camera = 17825824
     |  
     |  Key_CameraFocus = 17825825
     |  
     |  Key_Cancel = 16908289
     |  
     |  Key_CapsLock = 16777252
     |  
     |  Key_Ccedilla = 199
     |  
     |  Key_ChannelDown = 16777497
     |  
     |  Key_ChannelUp = 16777496
     |  
     |  Key_Clear = 16777227
     |  
     |  Key_ClearGrab = 16777421
     |  
     |  Key_Close = 16777422
     |  
     |  Key_Codeinput = 16781623
     |  
     |  Key_Colon = 58
     |  
     |  Key_Comma = 44
     |  
     |  Key_Community = 16777412
     |  
     |  Key_Context1 = 17825792
     |  
     |  Key_Context2 = 17825793
     |  
     |  Key_Context3 = 17825794
     |  
     |  Key_Context4 = 17825795
     |  
     |  Key_ContrastAdjust = 16777485
     |  
     |  Key_Control = 16777249
     |  
     |  Key_Copy = 16777423
     |  
     |  Key_Cut = 16777424
     |  
     |  Key_D = 68
     |  
     |  Key_DOS = 16777426
     |  
     |  Key_Dead_A = 16781953
     |  
     |  Key_Dead_Abovecomma = 16781924
     |  
     |  Key_Dead_Abovedot = 16781910
     |  
     |  Key_Dead_Abovereversedcomma = 16781925
     |  
     |  Key_Dead_Abovering = 16781912
     |  
     |  Key_Dead_Aboveverticalline = 16781969
     |  
     |  Key_Dead_Acute = 16781905
     |  
     |  Key_Dead_Belowbreve = 16781931
     |  
     |  Key_Dead_Belowcircumflex = 16781929
     |  
     |  Key_Dead_Belowcomma = 16781934
     |  
     |  Key_Dead_Belowdiaeresis = 16781932
     |  
     |  Key_Dead_Belowdot = 16781920
     |  
     |  Key_Dead_Belowmacron = 16781928
     |  
     |  Key_Dead_Belowring = 16781927
     |  
     |  Key_Dead_Belowtilde = 16781930
     |  
     |  Key_Dead_Belowverticalline = 16781970
     |  
     |  Key_Dead_Breve = 16781909
     |  
     |  Key_Dead_Capital_Schwa = 16781963
     |  
     |  Key_Dead_Caron = 16781914
     |  
     |  Key_Dead_Cedilla = 16781915
     |  
     |  Key_Dead_Circumflex = 16781906
     |  
     |  Key_Dead_Currency = 16781935
     |  
     |  Key_Dead_Diaeresis = 16781911
     |  
     |  Key_Dead_Doubleacute = 16781913
     |  
     |  Key_Dead_Doublegrave = 16781926
     |  
     |  Key_Dead_E = 16781955
     |  
     |  Key_Dead_Grave = 16781904
     |  
     |  Key_Dead_Greek = 16781964
     |  
     |  Key_Dead_Hook = 16781921
     |  
     |  Key_Dead_Horn = 16781922
     |  
     |  Key_Dead_I = 16781957
     |  
     |  Key_Dead_Invertedbreve = 16781933
     |  
     |  Key_Dead_Iota = 16781917
     |  
     |  Key_Dead_Longsolidusoverlay = 16781971
     |  
     |  Key_Dead_Lowline = 16781968
     |  
     |  Key_Dead_Macron = 16781908
     |  
     |  Key_Dead_O = 16781959
     |  
     |  Key_Dead_Ogonek = 16781916
     |  
     |  Key_Dead_Semivoiced_Sound = 16781919
     |  
     |  Key_Dead_Small_Schwa = 16781962
     |  
     |  Key_Dead_Stroke = 16781923
     |  
     |  Key_Dead_Tilde = 16781907
     |  
     |  Key_Dead_U = 16781961
     |  
     |  Key_Dead_Voiced_Sound = 16781918
     |  
     |  Key_Dead_a = 16781952
     |  
     |  Key_Dead_e = 16781954
     |  
     |  Key_Dead_i = 16781956
     |  
     |  Key_Dead_o = 16781958
     |  
     |  Key_Dead_u = 16781960
     |  
     |  Key_Delete = 16777223
     |  
     |  Key_Direction_L = 16777305
     |  
     |  Key_Direction_R = 16777312
     |  
     |  Key_Display = 16777425
     |  
     |  Key_Documents = 16777427
     |  
     |  Key_Dollar = 36
     |  
     |  Key_Down = 16777237
     |  
     |  Key_E = 69
     |  
     |  Key_ETH = 208
     |  
     |  Key_Eacute = 201
     |  
     |  Key_Ecircumflex = 202
     |  
     |  Key_Ediaeresis = 203
     |  
     |  Key_Egrave = 200
     |  
     |  Key_Eisu_Shift = 16781615
     |  
     |  Key_Eisu_toggle = 16781616
     |  
     |  Key_Eject = 16777401
     |  
     |  Key_End = 16777233
     |  
     |  Key_Enter = 16777221
     |  
     |  Key_Equal = 61
     |  
     |  Key_Escape = 16777216
     |  
     |  Key_Excel = 16777428
     |  
     |  Key_Exclam = 33
     |  
     |  Key_Execute = 16908291
     |  
     |  Key_Exit = 16908298
     |  
     |  Key_Explorer = 16777429
     |  
     |  Key_F = 70
     |  
     |  Key_F1 = 16777264
     |  
     |  Key_F10 = 16777273
     |  
     |  Key_F11 = 16777274
     |  
     |  Key_F12 = 16777275
     |  
     |  Key_F13 = 16777276
     |  
     |  Key_F14 = 16777277
     |  
     |  Key_F15 = 16777278
     |  
     |  Key_F16 = 16777279
     |  
     |  Key_F17 = 16777280
     |  
     |  Key_F18 = 16777281
     |  
     |  Key_F19 = 16777282
     |  
     |  Key_F2 = 16777265
     |  
     |  Key_F20 = 16777283
     |  
     |  Key_F21 = 16777284
     |  
     |  Key_F22 = 16777285
     |  
     |  Key_F23 = 16777286
     |  
     |  Key_F24 = 16777287
     |  
     |  Key_F25 = 16777288
     |  
     |  Key_F26 = 16777289
     |  
     |  Key_F27 = 16777290
     |  
     |  Key_F28 = 16777291
     |  
     |  Key_F29 = 16777292
     |  
     |  Key_F3 = 16777266
     |  
     |  Key_F30 = 16777293
     |  
     |  Key_F31 = 16777294
     |  
     |  Key_F32 = 16777295
     |  
     |  Key_F33 = 16777296
     |  
     |  Key_F34 = 16777297
     |  
     |  Key_F35 = 16777298
     |  
     |  Key_F4 = 16777267
     |  
     |  Key_F5 = 16777268
     |  
     |  Key_F6 = 16777269
     |  
     |  Key_F7 = 16777270
     |  
     |  Key_F8 = 16777271
     |  
     |  Key_F9 = 16777272
     |  
     |  Key_Favorites = 16777361
     |  
     |  Key_Finance = 16777411
     |  
     |  Key_Find = 16777506
     |  
     |  Key_Flip = 17825798
     |  
     |  Key_Forward = 16777314
     |  
     |  Key_G = 71
     |  
     |  Key_Game = 16777430
     |  
     |  Key_Go = 16777431
     |  
     |  Key_Greater = 62
     |  
     |  Key_Green = 16777493
     |  
     |  Key_Guide = 16777498
     |  
     |  Key_H = 72
     |  
     |  Key_Hangul = 16781617
     |  
     |  Key_Hangul_Banja = 16781625
     |  
     |  Key_Hangul_End = 16781619
     |  
     |  Key_Hangul_Hanja = 16781620
     |  
     |  Key_Hangul_Jamo = 16781621
     |  
     |  Key_Hangul_Jeonja = 16781624
     |  
     |  Key_Hangul_PostHanja = 16781627
     |  
     |  Key_Hangul_PreHanja = 16781626
     |  
     |  Key_Hangul_Romaja = 16781622
     |  
     |  Key_Hangul_Special = 16781631
     |  
     |  Key_Hangul_Start = 16781618
     |  
     |  Key_Hangup = 17825797
     |  
     |  Key_Hankaku = 16781609
     |  
     |  Key_Help = 16777304
     |  
     |  Key_Henkan = 16781603
     |  
     |  Key_Hibernate = 16777480
     |  
     |  Key_Hiragana = 16781605
     |  
     |  Key_Hiragana_Katakana = 16781607
     |  
     |  Key_History = 16777407
     |  
     |  Key_Home = 16777232
     |  
     |  Key_HomePage = 16777360
     |  
     |  Key_HotLinks = 16777409
     |  
     |  Key_Hyper_L = 16777302
     |  
     |  Key_Hyper_R = 16777303
     |  
     |  Key_I = 73
     |  
     |  Key_Iacute = 205
     |  
     |  Key_Icircumflex = 206
     |  
     |  Key_Idiaeresis = 207
     |  
     |  Key_Igrave = 204
     |  
     |  Key_Info = 16777499
     |  
     |  Key_Insert = 16777222
     |  
     |  Key_J = 74
     |  
     |  Key_K = 75
     |  
     |  Key_Kana_Lock = 16781613
     |  
     |  Key_Kana_Shift = 16781614
     |  
     |  Key_Kanji = 16781601
     |  
     |  Key_Katakana = 16781606
     |  
     |  Key_KeyboardBrightnessDown = 16777398
     |  
     |  Key_KeyboardBrightnessUp = 16777397
     |  
     |  Key_KeyboardLightOnOff = 16777396
     |  
     |  Key_L = 76
     |  
     |  Key_LastNumberRedial = 17825801
     |  
     |  Key_Launch0 = 16777378
     |  
     |  Key_Launch1 = 16777379
     |  
     |  Key_Launch2 = 16777380
     |  
     |  Key_Launch3 = 16777381
     |  
     |  Key_Launch4 = 16777382
     |  
     |  Key_Launch5 = 16777383
     |  
     |  Key_Launch6 = 16777384
     |  
     |  Key_Launch7 = 16777385
     |  
     |  Key_Launch8 = 16777386
     |  
     |  Key_Launch9 = 16777387
     |  
     |  Key_LaunchA = 16777388
     |  
     |  Key_LaunchB = 16777389
     |  
     |  Key_LaunchC = 16777390
     |  
     |  Key_LaunchD = 16777391
     |  
     |  Key_LaunchE = 16777392
     |  
     |  Key_LaunchF = 16777393
     |  
     |  Key_LaunchG = 16777486
     |  
     |  Key_LaunchH = 16777487
     |  
     |  Key_LaunchMail = 16777376
     |  
     |  Key_LaunchMedia = 16777377
     |  
     |  Key_Left = 16777234
     |  
     |  Key_Less = 60
     |  
     |  Key_LightBulb = 16777405
     |  
     |  Key_LogOff = 16777433
     |  
     |  Key_M = 77
     |  
     |  Key_MailForward = 16777467
     |  
     |  Key_Market = 16777434
     |  
     |  Key_Massyo = 16781612
     |  
     |  Key_MediaLast = 16842751
     |  
     |  Key_MediaNext = 16777347
     |  
     |  Key_MediaPause = 16777349
     |  
     |  Key_MediaPlay = 16777344
     |  
     |  Key_MediaPrevious = 16777346
     |  
     |  Key_MediaRecord = 16777348
     |  
     |  Key_MediaStop = 16777345
     |  
     |  Key_MediaTogglePlayPause = 16777350
     |  
     |  Key_Meeting = 16777435
     |  
     |  Key_Memo = 16777404
     |  
     |  Key_Menu = 16777301
     |  
     |  Key_MenuKB = 16777436
     |  
     |  Key_MenuPB = 16777437
     |  
     |  Key_Messenger = 16777465
     |  
     |  Key_Meta = 16777250
     |  
     |  Key_MicMute = 16777491
     |  
     |  Key_MicVolumeDown = 16777502
     |  
     |  Key_MicVolumeUp = 16777501
     |  
     |  Key_Minus = 45
     |  
     |  Key_Mode_switch = 16781694
     |  
     |  Key_MonBrightnessDown = 16777395
     |  
     |  Key_MonBrightnessUp = 16777394
     |  
     |  Key_Muhenkan = 16781602
     |  
     |  Key_Multi_key = 16781600
     |  
     |  Key_MultipleCandidate = 16781629
     |  
     |  Key_Music = 16777469
     |  
     |  Key_MySites = 16777438
     |  
     |  Key_N = 78
     |  
     |  Key_New = 16777504
     |  
     |  Key_News = 16777439
     |  
     |  Key_No = 16842754
     |  
     |  Key_Ntilde = 209
     |  
     |  Key_NumLock = 16777253
     |  
     |  Key_NumberSign = 35
     |  
     |  Key_O = 79
     |  
     |  Key_Oacute = 211
     |  
     |  Key_Ocircumflex = 212
     |  
     |  Key_Odiaeresis = 214
     |  
     |  Key_OfficeHome = 16777440
     |  
     |  Key_Ograve = 210
     |  
     |  Key_Ooblique = 216
     |  
     |  Key_Open = 16777505
     |  
     |  Key_OpenUrl = 16777364
     |  
     |  Key_Option = 16777441
     |  
     |  Key_Otilde = 213
     |  
     |  Key_P = 80
     |  
     |  Key_PageDown = 16777239
     |  
     |  Key_PageUp = 16777238
     |  
     |  Key_ParenLeft = 40
     |  
     |  Key_ParenRight = 41
     |  
     |  Key_Paste = 16777442
     |  
     |  Key_Pause = 16777224
     |  
     |  Key_Percent = 37
     |  
     |  Key_Period = 46
     |  
     |  Key_Phone = 16777443
     |  
     |  Key_Pictures = 16777468
     |  
     |  Key_Play = 16908293
     |  
     |  Key_Plus = 43
     |  
     |  Key_PowerDown = 16777483
     |  
     |  Key_PowerOff = 16777399
     |  
     |  Key_PreviousCandidate = 16781630
     |  
     |  Key_Print = 16777225
     |  
     |  Key_Printer = 16908290
     |  
     |  Key_Q = 81
     |  
     |  Key_Question = 63
     |  
     |  Key_QuoteDbl = 34
     |  
     |  Key_QuoteLeft = 96
     |  
     |  Key_R = 82
     |  
     |  Key_Red = 16777492
     |  
     |  Key_Redo = 16777508
     |  
     |  Key_Refresh = 16777316
     |  
     |  Key_Reload = 16777446
     |  
     |  Key_Reply = 16777445
     |  
     |  Key_Return = 16777220
     |  
     |  Key_Right = 16777236
     |  
     |  Key_Romaji = 16781604
     |  
     |  Key_RotateWindows = 16777447
     |  
     |  Key_RotationKB = 16777449
     |  
     |  Key_RotationPB = 16777448
     |  
     |  Key_S = 83
     |  
     |  Key_Save = 16777450
     |  
     |  Key_ScreenSaver = 16777402
     |  
     |  Key_ScrollLock = 16777254
     |  
     |  Key_Search = 16777362
     |  
     |  Key_Select = 16842752
     |  
     |  Key_Semicolon = 59
     |  
     |  Key_Send = 16777451
     |  
     |  Key_Settings = 16777500
     |  
     |  Key_Shift = 16777248
     |  
     |  Key_Shop = 16777406
     |  
     |  Key_SingleCandidate = 16781628
     |  
     |  Key_Slash = 47
     |  
     |  Key_Sleep = 16908292
     |  
     |  Key_Space = 32
     |  
     |  Key_Spell = 16777452
     |  
     |  Key_SplitScreen = 16777453
     |  
     |  Key_Standby = 16777363
     |  
     |  Key_Stop = 16777315
     |  
     |  Key_Subtitle = 16777477
     |  
     |  Key_Super_L = 16777299
     |  
     |  Key_Super_R = 16777300
     |  
     |  Key_Support = 16777454
     |  
     |  Key_Suspend = 16777484
     |  
     |  Key_SysReq = 16777226
     |  
     |  Key_T = 84
     |  
     |  Key_THORN = 222
     |  
     |  Key_Tab = 16777217
     |  
     |  Key_TaskPane = 16777455
     |  
     |  Key_Terminal = 16777456
     |  
     |  Key_Time = 16777479
     |  
     |  Key_ToDoList = 16777420
     |  
     |  Key_ToggleCallHangup = 17825799
     |  
     |  Key_Tools = 16777457
     |  
     |  Key_TopMenu = 16777482
     |  
     |  Key_TouchpadOff = 16777490
     |  
     |  Key_TouchpadOn = 16777489
     |  
     |  Key_TouchpadToggle = 16777488
     |  
     |  Key_Touroku = 16781611
     |  
     |  Key_Travel = 16777458
     |  
     |  Key_TrebleDown = 16777335
     |  
     |  Key_TrebleUp = 16777334
     |  
     |  Key_U = 85
     |  
     |  Key_UWB = 16777473
     |  
     |  Key_Uacute = 218
     |  
     |  Key_Ucircumflex = 219
     |  
     |  Key_Udiaeresis = 220
     |  
     |  Key_Ugrave = 217
     |  
     |  Key_Underscore = 95
     |  
     |  Key_Undo = 16777507
     |  
     |  Key_Up = 16777235
     |  
     |  Key_V = 86
     |  
     |  Key_Video = 16777459
     |  
     |  Key_View = 16777481
     |  
     |  Key_VoiceDial = 17825800
     |  
     |  Key_VolumeDown = 16777328
     |  
     |  Key_VolumeMute = 16777329
     |  
     |  Key_VolumeUp = 16777330
     |  
     |  Key_W = 87
     |  
     |  Key_WLAN = 16777472
     |  
     |  Key_WWW = 16777403
     |  
     |  Key_WakeUp = 16777400
     |  
     |  Key_WebCam = 16777466
     |  
     |  Key_Word = 16777460
     |  
     |  Key_X = 88
     |  
     |  Key_Xfer = 16777461
     |  
     |  Key_Y = 89
     |  
     |  Key_Yacute = 221
     |  
     |  Key_Yellow = 16777494
     |  
     |  Key_Yes = 16842753
     |  
     |  Key_Z = 90
     |  
     |  Key_Zenkaku = 16781608
     |  
     |  Key_Zenkaku_Hankaku = 16781610
     |  
     |  Key_Zoom = 16908294
     |  
     |  Key_ZoomIn = 16777462
     |  
     |  Key_ZoomOut = 16777463
     |  
     |  Key_acute = 180
     |  
     |  Key_brokenbar = 166
     |  
     |  Key_cedilla = 184
     |  
     |  Key_cent = 162
     |  
     |  Key_copyright = 169
     |  
     |  Key_currency = 164
     |  
     |  Key_degree = 176
     |  
     |  Key_diaeresis = 168
     |  
     |  Key_division = 247
     |  
     |  Key_exclamdown = 161
     |  
     |  Key_guillemotleft = 171
     |  
     |  Key_guillemotright = 187
     |  
     |  Key_hyphen = 173
     |  
     |  Key_iTouch = 16777432
     |  
     |  Key_macron = 175
     |  
     |  Key_masculine = 186
     |  
     |  Key_mu = 181
     |  
     |  Key_multiply = 215
     |  
     |  Key_nobreakspace = 160
     |  
     |  Key_notsign = 172
     |  
     |  Key_onehalf = 189
     |  
     |  Key_onequarter = 188
     |  
     |  Key_onesuperior = 185
     |  
     |  Key_ordfeminine = 170
     |  
     |  Key_paragraph = 182
     |  
     |  Key_periodcentered = 183
     |  
     |  Key_plusminus = 177
     |  
     |  Key_questiondown = 191
     |  
     |  Key_registered = 174
     |  
     |  Key_section = 167
     |  
     |  Key_ssharp = 223
     |  
     |  Key_sterling = 163
     |  
     |  Key_threequarters = 190
     |  
     |  Key_threesuperior = 179
     |  
     |  Key_twosuperior = 178
     |  
     |  Key_unknown = 33554431
     |  
     |  Key_ydiaeresis = 255
     |  
     |  Key_yen = 165
     |  
     |  KeyboardModifier = <class 'PyQt5.QtCore.Qt.KeyboardModifier'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  KeyboardModifierMask = -33554432
     |  
     |  KeyboardModifiers = <class 'PyQt5.QtCore.Qt.KeyboardModifiers'>
     |      Qt.KeyboardModifiers()
     |      Qt.KeyboardModifiers(Union[Qt.KeyboardModifiers, Qt.KeyboardModifier])
     |      Qt.KeyboardModifiers(Qt.KeyboardModifiers)
     |  
     |  KeypadModifier = 536870912
     |  
     |  LandscapeOrientation = 2
     |  
     |  LastCursor = 21
     |  
     |  LayoutDirection = <class 'PyQt5.QtCore.Qt.LayoutDirection'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  LayoutDirectionAuto = 2
     |  
     |  LeftArrow = 3
     |  
     |  LeftButton = 1
     |  
     |  LeftDockWidgetArea = 1
     |  
     |  LeftEdge = 2
     |  
     |  LeftSection = 1
     |  
     |  LeftToRight = 0
     |  
     |  LeftToolBarArea = 1
     |  
     |  LinearGradientPattern = 15
     |  
     |  LinkAction = 4
     |  
     |  LinksAccessibleByKeyboard = 8
     |  
     |  LinksAccessibleByMouse = 4
     |  
     |  LocalDate = 2
     |  
     |  LocalTime = 0
     |  
     |  LocaleDate = 3
     |  
     |  LogicalCoordinates = 1
     |  
     |  LogicalMoveStyle = 0
     |  
     |  LowEventPriority = -1
     |  
     |  META = 268435456
     |  
     |  MODIFIER_MASK = -33554432
     |  
     |  MPenCapStyle = 48
     |  
     |  MPenJoinStyle = 448
     |  
     |  MPenStyle = 15
     |  
     |  MSWindowsFixedSizeDialogHint = 256
     |  
     |  MSWindowsOwnDC = 512
     |  
     |  MacWindowToolBarButtonHint = 268435456
     |  
     |  MaskInColor = 0
     |  
     |  MaskMode = <class 'PyQt5.QtCore.Qt.MaskMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  MaskOutColor = 1
     |  
     |  MatchCaseSensitive = 16
     |  
     |  MatchContains = 1
     |  
     |  MatchEndsWith = 3
     |  
     |  MatchExactly = 0
     |  
     |  MatchFixedString = 8
     |  
     |  MatchFlag = <class 'PyQt5.QtCore.Qt.MatchFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  MatchFlags = <class 'PyQt5.QtCore.Qt.MatchFlags'>
     |      Qt.MatchFlags()
     |      Qt.MatchFlags(Union[Qt.MatchFlags, Qt.MatchFlag])
     |      Qt.MatchFlags(Qt.MatchFlags)
     |  
     |  MatchRecursive = 64
     |  
     |  MatchRegExp = 4
     |  
     |  MatchStartsWith = 2
     |  
     |  MatchWildcard = 5
     |  
     |  MatchWrap = 32
     |  
     |  MaximizeUsingFullscreenGeometryHint = 4194304
     |  
     |  MaximumSize = 2
     |  
     |  MenuBarFocusReason = 6
     |  
     |  MetaModifier = 268435456
     |  
     |  MidButton = 4
     |  
     |  MiddleButton = 4
     |  
     |  MinimumDescent = 3
     |  
     |  MinimumSize = 0
     |  
     |  MiterJoin = 0
     |  
     |  Modifier = <class 'PyQt5.QtCore.Qt.Modifier'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Monday = 1
     |  
     |  MonoOnly = 2
     |  
     |  MouseButton = <class 'PyQt5.QtCore.Qt.MouseButton'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  MouseButtons = <class 'PyQt5.QtCore.Qt.MouseButtons'>
     |      Qt.MouseButtons()
     |      Qt.MouseButtons(Union[Qt.MouseButtons, Qt.MouseButton])
     |      Qt.MouseButtons(Qt.MouseButtons)
     |  
     |  MouseEventCreatedDoubleClick = 1
     |  
     |  MouseEventFlag = <class 'PyQt5.QtCore.Qt.MouseEventFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  MouseEventFlags = <class 'PyQt5.QtCore.Qt.MouseEventFlags'>
     |      Qt.MouseEventFlags()
     |      Qt.MouseEventFlags(Union[Qt.MouseEventFlags, Qt.MouseEventFlag])
     |      Qt.MouseEventFlags(Qt.MouseEventFlags)
     |  
     |  MouseEventNotSynthesized = 0
     |  
     |  MouseEventSource = <class 'PyQt5.QtCore.Qt.MouseEventSource'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  MouseEventSynthesizedByApplication = 3
     |  
     |  MouseEventSynthesizedByQt = 2
     |  
     |  MouseEventSynthesizedBySystem = 1
     |  
     |  MouseFocusReason = 0
     |  
     |  MoveAction = 2
     |  
     |  NativeGestureType = <class 'PyQt5.QtCore.Qt.NativeGestureType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NavigationMode = <class 'PyQt5.QtCore.Qt.NavigationMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  NavigationModeCursorAuto = 3
     |  
     |  NavigationModeCursorForceVisible = 4
     |  
     |  NavigationModeKeypadDirectional = 2
     |  
     |  NavigationModeKeypadTabOrder = 1
     |  
     |  NavigationModeNone = 0
     |  
     |  NoArrow = 0
     |  
     |  NoBrush = 0
     |  
     |  NoButton = 0
     |  
     |  NoClip = 0
     |  
     |  NoContextMenu = 0
     |  
     |  NoDockWidgetArea = 0
     |  
     |  NoDropShadowWindowHint = 1073741824
     |  
     |  NoFocus = 0
     |  
     |  NoFocusReason = 8
     |  
     |  NoFormatConversion = 512
     |  
     |  NoItemFlags = 0
     |  
     |  NoModifier = 0
     |  
     |  NoOpaqueDetection = 256
     |  
     |  NoPen = 0
     |  
     |  NoScrollPhase = 0
     |  
     |  NoSection = 0
     |  
     |  NoTabFocus = 0
     |  
     |  NoTextInteraction = 0
     |  
     |  NoToolBarArea = 0
     |  
     |  NonModal = 0
     |  
     |  NormalEventPriority = 0
     |  
     |  OddEvenFill = 0
     |  
     |  OffsetFromUTC = 2
     |  
     |  OpaqueMode = 1
     |  
     |  OpenHandCursor = 17
     |  
     |  OrderedAlphaDither = 4
     |  
     |  OrderedDither = 16
     |  
     |  Orientation = <class 'PyQt5.QtCore.Qt.Orientation'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  Orientations = <class 'PyQt5.QtCore.Qt.Orientations'>
     |      Qt.Orientations()
     |      Qt.Orientations(Union[Qt.Orientations, Qt.Orientation])
     |      Qt.Orientations(Qt.Orientations)
     |  
     |  OtherFocusReason = 7
     |  
     |  PanGesture = 3
     |  
     |  PanNativeGesture = 2
     |  
     |  PartiallyChecked = 1
     |  
     |  PenCapStyle = <class 'PyQt5.QtCore.Qt.PenCapStyle'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  PenJoinStyle = <class 'PyQt5.QtCore.Qt.PenJoinStyle'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  PenStyle = <class 'PyQt5.QtCore.Qt.PenStyle'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  PinchGesture = 4
     |  
     |  PlainText = 0
     |  
     |  PointingHandCursor = 13
     |  
     |  Popup = 9
     |  
     |  PopupFocusReason = 4
     |  
     |  PortraitOrientation = 1
     |  
     |  PreciseTimer = 0
     |  
     |  PreferDither = 64
     |  
     |  PreferredSize = 1
     |  
     |  PreventContextMenu = 4
     |  
     |  PrimaryOrientation = 0
     |  
     |  QueuedConnection = 2
     |  
     |  RFC2822Date = 8
     |  
     |  RadialGradientPattern = 16
     |  
     |  ReceivePartialGestures = 2
     |  
     |  RelativeSize = 1
     |  
     |  RepeatTile = 1
     |  
     |  ReplaceClip = 1
     |  
     |  ReplaceSelection = 0
     |  
     |  RichText = 1
     |  
     |  RightArrow = 4
     |  
     |  RightButton = 2
     |  
     |  RightDockWidgetArea = 2
     |  
     |  RightEdge = 4
     |  
     |  RightSection = 5
     |  
     |  RightToLeft = 1
     |  
     |  RightToolBarArea = 2
     |  
     |  RotateNativeGesture = 5
     |  
     |  RoundCap = 32
     |  
     |  RoundJoin = 128
     |  
     |  RoundTile = 2
     |  
     |  SHIFT = 33554432
     |  
     |  Saturday = 6
     |  
     |  ScreenOrientation = <class 'PyQt5.QtCore.Qt.ScreenOrientation'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ScreenOrientations = <class 'PyQt5.QtCore.Qt.ScreenOrientations'>
     |      Qt.ScreenOrientations()
     |      Qt.ScreenOrientations(Union[Qt.ScreenOrientations, Qt.ScreenOrientation])
     |      Qt.ScreenOrientations(Qt.ScreenOrientations)
     |  
     |  ScrollBarAlwaysOff = 1
     |  
     |  ScrollBarAlwaysOn = 2
     |  
     |  ScrollBarAsNeeded = 0
     |  
     |  ScrollBarPolicy = <class 'PyQt5.QtCore.Qt.ScrollBarPolicy'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ScrollBegin = 1
     |  
     |  ScrollEnd = 3
     |  
     |  ScrollPhase = <class 'PyQt5.QtCore.Qt.ScrollPhase'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ScrollUpdate = 2
     |  
     |  Sheet = 5
     |  
     |  ShiftModifier = 33554432
     |  
     |  ShortcutContext = <class 'PyQt5.QtCore.Qt.ShortcutContext'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ShortcutFocusReason = 5
     |  
     |  SizeAllCursor = 9
     |  
     |  SizeBDiagCursor = 7
     |  
     |  SizeFDiagCursor = 8
     |  
     |  SizeHint = <class 'PyQt5.QtCore.Qt.SizeHint'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  SizeHintRole = 13
     |  
     |  SizeHorCursor = 6
     |  
     |  SizeMode = <class 'PyQt5.QtCore.Qt.SizeMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  SizeVerCursor = 5
     |  
     |  SmartZoomNativeGesture = 4
     |  
     |  SmoothTransformation = 1
     |  
     |  SolidLine = 1
     |  
     |  SolidPattern = 1
     |  
     |  SortOrder = <class 'PyQt5.QtCore.Qt.SortOrder'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  SplashScreen = 15
     |  
     |  SplitHCursor = 12
     |  
     |  SplitVCursor = 11
     |  
     |  SquareCap = 16
     |  
     |  StatusTipRole = 4
     |  
     |  StretchTile = 0
     |  
     |  StrongFocus = 11
     |  
     |  SubWindow = 18
     |  
     |  Sunday = 7
     |  
     |  SvgMiterJoin = 256
     |  
     |  SwipeGesture = 5
     |  
     |  SwipeNativeGesture = 6
     |  
     |  SystemLocaleDate = 2
     |  
     |  SystemLocaleLongDate = 5
     |  
     |  SystemLocaleShortDate = 4
     |  
     |  TabFocus = 1
     |  
     |  TabFocusAllControls = 255
     |  
     |  TabFocusBehavior = <class 'PyQt5.QtCore.Qt.TabFocusBehavior'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TabFocusListControls = 2
     |  
     |  TabFocusReason = 1
     |  
     |  TabFocusTextControls = 1
     |  
     |  TapAndHoldGesture = 2
     |  
     |  TapGesture = 1
     |  
     |  TargetMoveAction = 32770
     |  
     |  TaskButton = 32
     |  
     |  TextAlignmentRole = 7
     |  
     |  TextBrowserInteraction = 13
     |  
     |  TextColorRole = 9
     |  
     |  TextDate = 0
     |  
     |  TextDontClip = 512
     |  
     |  TextDontPrint = 16384
     |  
     |  TextEditable = 16
     |  
     |  TextEditorInteraction = 19
     |  
     |  TextElideMode = <class 'PyQt5.QtCore.Qt.TextElideMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TextExpandTabs = 1024
     |  
     |  TextFlag = <class 'PyQt5.QtCore.Qt.TextFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TextFormat = <class 'PyQt5.QtCore.Qt.TextFormat'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TextHideMnemonic = 32768
     |  
     |  TextIncludeTrailingSpaces = 134217728
     |  
     |  TextInteractionFlag = <class 'PyQt5.QtCore.Qt.TextInteractionFlag'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TextInteractionFlags = <class 'PyQt5.QtCore.Qt.TextInteractionFlags'>
     |      Qt.TextInteractionFlags()
     |      Qt.TextInteractionFlags(Union[Qt.TextInteractionFlags, Qt.TextInteractionFlag])
     |      Qt.TextInteractionFlags(Qt.TextInteractionFlags)
     |  
     |  TextJustificationForced = 65536
     |  
     |  TextSelectableByKeyboard = 2
     |  
     |  TextSelectableByMouse = 1
     |  
     |  TextShowMnemonic = 2048
     |  
     |  TextSingleLine = 256
     |  
     |  TextWordWrap = 4096
     |  
     |  TextWrapAnywhere = 8192
     |  
     |  TexturePattern = 24
     |  
     |  ThresholdAlphaDither = 0
     |  
     |  ThresholdDither = 32
     |  
     |  Thursday = 4
     |  
     |  TileRule = <class 'PyQt5.QtCore.Qt.TileRule'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TimeSpec = <class 'PyQt5.QtCore.Qt.TimeSpec'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TimeZone = 3
     |  
     |  TimerType = <class 'PyQt5.QtCore.Qt.TimerType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TitleBarArea = 9
     |  
     |  Tool = 11
     |  
     |  ToolBarArea = <class 'PyQt5.QtCore.Qt.ToolBarArea'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ToolBarArea_Mask = 15
     |  
     |  ToolBarAreas = <class 'PyQt5.QtCore.Qt.ToolBarAreas'>
     |      Qt.ToolBarAreas()
     |      Qt.ToolBarAreas(Union[Qt.ToolBarAreas, Qt.ToolBarArea])
     |      Qt.ToolBarAreas(Qt.ToolBarAreas)
     |  
     |  ToolButtonFollowStyle = 4
     |  
     |  ToolButtonIconOnly = 0
     |  
     |  ToolButtonStyle = <class 'PyQt5.QtCore.Qt.ToolButtonStyle'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  ToolButtonTextBesideIcon = 2
     |  
     |  ToolButtonTextOnly = 1
     |  
     |  ToolButtonTextUnderIcon = 3
     |  
     |  ToolTip = 13
     |  
     |  ToolTipRole = 3
     |  
     |  TopDockWidgetArea = 4
     |  
     |  TopEdge = 1
     |  
     |  TopLeftCorner = 0
     |  
     |  TopLeftSection = 2
     |  
     |  TopRightCorner = 1
     |  
     |  TopRightSection = 4
     |  
     |  TopSection = 3
     |  
     |  TopToolBarArea = 4
     |  
     |  TouchPointMoved = 2
     |  
     |  TouchPointPressed = 1
     |  
     |  TouchPointReleased = 8
     |  
     |  TouchPointState = <class 'PyQt5.QtCore.Qt.TouchPointState'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TouchPointStates = <class 'PyQt5.QtCore.Qt.TouchPointStates'>
     |      Qt.TouchPointStates()
     |      Qt.TouchPointStates(Union[Qt.TouchPointStates, Qt.TouchPointState])
     |      Qt.TouchPointStates(Qt.TouchPointStates)
     |  
     |  TouchPointStationary = 4
     |  
     |  TransformationMode = <class 'PyQt5.QtCore.Qt.TransformationMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  TransparentMode = 0
     |  
     |  Tuesday = 2
     |  
     |  UIEffect = <class 'PyQt5.QtCore.Qt.UIEffect'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  UI_AnimateCombo = 3
     |  
     |  UI_AnimateMenu = 1
     |  
     |  UI_AnimateToolBox = 6
     |  
     |  UI_AnimateTooltip = 4
     |  
     |  UI_FadeMenu = 2
     |  
     |  UI_FadeTooltip = 5
     |  
     |  UI_General = 0
     |  
     |  UNICODE_ACCEL = 0
     |  
     |  UTC = 1
     |  
     |  Unchecked = 0
     |  
     |  UniqueConnection = 128
     |  
     |  UpArrow = 1
     |  
     |  UpArrowCursor = 1
     |  
     |  UserRole = 256
     |  
     |  VerPattern = 10
     |  
     |  Vertical = 2
     |  
     |  VeryCoarseTimer = 2
     |  
     |  VisualMoveStyle = 1
     |  
     |  WA_AcceptDrops = 78
     |  
     |  WA_AcceptTouchEvents = 121
     |  
     |  WA_AlwaysShowToolTips = 84
     |  
     |  WA_AlwaysStackOnTop = 128
     |  
     |  WA_AttributeCount = 131
     |  
     |  WA_CustomWhatsThis = 47
     |  
     |  WA_DeleteOnClose = 55
     |  
     |  WA_Disabled = 0
     |  
     |  WA_DontCreateNativeAncestors = 101
     |  
     |  WA_DontShowOnScreen = 103
     |  
     |  WA_ForceDisabled = 32
     |  
     |  WA_ForceUpdatesDisabled = 59
     |  
     |  WA_GrabbedShortcut = 50
     |  
     |  WA_GroupLeader = 72
     |  
     |  WA_Hover = 74
     |  
     |  WA_InputMethodEnabled = 14
     |  
     |  WA_InputMethodTransparent = 75
     |  
     |  WA_InvalidSize = 45
     |  
     |  WA_KeyCompression = 33
     |  
     |  WA_KeyboardFocusChange = 77
     |  
     |  WA_LaidOut = 7
     |  
     |  WA_LayoutOnEntireRect = 48
     |  
     |  WA_LayoutUsesWidgetRect = 92
     |  
     |  WA_MSWindowsUseDirect3D = 94
     |  
     |  WA_MacAlwaysShowToolWindow = 96
     |  
     |  WA_MacBrushedMetal = 46
     |  
     |  WA_MacFrameworkScaled = 117
     |  
     |  WA_MacMetalStyle = 46
     |  
     |  WA_MacMiniSize = 91
     |  
     |  WA_MacNoClickThrough = 12
     |  
     |  WA_MacNoShadow = 127
     |  
     |  WA_MacNormalSize = 89
     |  
     |  WA_MacOpaqueSizeGrip = 85
     |  
     |  WA_MacShowFocusRect = 88
     |  
     |  WA_MacSmallSize = 90
     |  
     |  WA_MacVariableSize = 102
     |  
     |  WA_Mapped = 11
     |  
     |  WA_MouseNoMask = 71
     |  
     |  WA_MouseTracking = 2
     |  
     |  WA_Moved = 43
     |  
     |  WA_NativeWindow = 100
     |  
     |  WA_NoChildEventsForParent = 58
     |  
     |  WA_NoChildEventsFromChildren = 39
     |  
     |  WA_NoMousePropagation = 73
     |  
     |  WA_NoMouseReplay = 54
     |  
     |  WA_NoSystemBackground = 9
     |  
     |  WA_NoX11EventCompression = 81
     |  
     |  WA_OpaquePaintEvent = 4
     |  
     |  WA_OutsideWSRange = 49
     |  
     |  WA_PaintOnScreen = 8
     |  
     |  WA_PaintUnclipped = 52
     |  
     |  WA_PendingMoveEvent = 34
     |  
     |  WA_PendingResizeEvent = 35
     |  
     |  WA_PendingUpdate = 44
     |  
     |  WA_QuitOnClose = 76
     |  
     |  WA_Resized = 42
     |  
     |  WA_RightToLeft = 56
     |  
     |  WA_SetCursor = 38
     |  
     |  WA_SetFont = 37
     |  
     |  WA_SetLayoutDirection = 57
     |  
     |  WA_SetLocale = 87
     |  
     |  WA_SetPalette = 36
     |  
     |  WA_SetStyle = 86
     |  
     |  WA_SetWindowIcon = 53
     |  
     |  WA_ShowWithoutActivating = 98
     |  
     |  WA_StaticContents = 5
     |  
     |  WA_StyleSheet = 97
     |  
     |  WA_StyledBackground = 93
     |  
     |  WA_TabletTracking = 129
     |  
     |  WA_TintedBackground = 82
     |  
     |  WA_TouchPadAcceptSingleTouchEvents = 123
     |  
     |  WA_TranslucentBackground = 120
     |  
     |  WA_TransparentForMouseEvents = 51
     |  
     |  WA_UnderMouse = 1
     |  
     |  WA_UpdatesDisabled = 10
     |  
     |  WA_WState_CompressKeys = 61
     |  
     |  WA_WState_ConfigPending = 64
     |  
     |  WA_WState_Created = 60
     |  
     |  WA_WState_ExplicitShowHide = 69
     |  
     |  WA_WState_Hidden = 16
     |  
     |  WA_WState_InPaintEvent = 62
     |  
     |  WA_WState_OwnSizePolicy = 68
     |  
     |  WA_WState_Polished = 66
     |  
     |  WA_WState_Reparented = 63
     |  
     |  WA_WState_Visible = 15
     |  
     |  WA_WindowModified = 41
     |  
     |  WA_WindowPropagation = 80
     |  
     |  WA_X11DoNotAcceptFocus = 126
     |  
     |  WA_X11NetWmWindowTypeCombo = 115
     |  
     |  WA_X11NetWmWindowTypeDND = 116
     |  
     |  WA_X11NetWmWindowTypeDesktop = 104
     |  
     |  WA_X11NetWmWindowTypeDialog = 110
     |  
     |  WA_X11NetWmWindowTypeDock = 105
     |  
     |  WA_X11NetWmWindowTypeDropDownMenu = 111
     |  
     |  WA_X11NetWmWindowTypeMenu = 107
     |  
     |  WA_X11NetWmWindowTypeNotification = 114
     |  
     |  WA_X11NetWmWindowTypePopupMenu = 112
     |  
     |  WA_X11NetWmWindowTypeSplash = 109
     |  
     |  WA_X11NetWmWindowTypeToolBar = 106
     |  
     |  WA_X11NetWmWindowTypeToolTip = 113
     |  
     |  WA_X11NetWmWindowTypeUtility = 108
     |  
     |  WA_X11OpenGLOverlay = 83
     |  
     |  WaitCursor = 3
     |  
     |  Wednesday = 3
     |  
     |  WhatsThisCursor = 15
     |  
     |  WhatsThisRole = 5
     |  
     |  WheelFocus = 15
     |  
     |  WhiteSpaceMode = <class 'PyQt5.QtCore.Qt.WhiteSpaceMode'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  WhiteSpaceModeUndefined = -1
     |  
     |  WhiteSpaceNoWrap = 2
     |  
     |  WhiteSpaceNormal = 0
     |  
     |  WhiteSpacePre = 1
     |  
     |  Widget = 0
     |  
     |  WidgetAttribute = <class 'PyQt5.QtCore.Qt.WidgetAttribute'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  WidgetShortcut = 0
     |  
     |  WidgetWithChildrenShortcut = 3
     |  
     |  WindingFill = 1
     |  
     |  Window = 1
     |  
     |  WindowActive = 8
     |  
     |  WindowCloseButtonHint = 134217728
     |  
     |  WindowContextHelpButtonHint = 65536
     |  
     |  WindowDoesNotAcceptFocus = 2097152
     |  
     |  WindowFlags = <class 'PyQt5.QtCore.Qt.WindowFlags'>
     |      Qt.WindowFlags()
     |      Qt.WindowFlags(Union[Qt.WindowFlags, Qt.WindowType])
     |      Qt.WindowFlags(Qt.WindowFlags)
     |  
     |  WindowFrameSection = <class 'PyQt5.QtCore.Qt.WindowFrameSection'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  WindowFullScreen = 4
     |  
     |  WindowFullscreenButtonHint = -2147483648
     |  
     |  WindowMaximizeButtonHint = 32768
     |  
     |  WindowMaximized = 2
     |  
     |  WindowMinMaxButtonsHint = 49152
     |  
     |  WindowMinimizeButtonHint = 16384
     |  
     |  WindowMinimized = 1
     |  
     |  WindowModal = 1
     |  
     |  WindowModality = <class 'PyQt5.QtCore.Qt.WindowModality'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  WindowNoState = 0
     |  
     |  WindowOverridesSystemGestures = 1048576
     |  
     |  WindowShadeButtonHint = 131072
     |  
     |  WindowShortcut = 1
     |  
     |  WindowState = <class 'PyQt5.QtCore.Qt.WindowState'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  WindowStates = <class 'PyQt5.QtCore.Qt.WindowStates'>
     |      Qt.WindowStates()
     |      Qt.WindowStates(Union[Qt.WindowStates, Qt.WindowState])
     |      Qt.WindowStates(Qt.WindowStates)
     |  
     |  WindowStaysOnBottomHint = 67108864
     |  
     |  WindowStaysOnTopHint = 262144
     |  
     |  WindowSystemMenuHint = 8192
     |  
     |  WindowTitleHint = 4096
     |  
     |  WindowTransparentForInput = 524288
     |  
     |  WindowType = <class 'PyQt5.QtCore.Qt.WindowType'>
     |      int(x=0) -> integer
     |      int(x, base=10) -> integer
     |      
     |      Convert a number or string to an integer, or return 0 if no arguments
     |      are given.  If x is a number, return x.__int__().  For floating point
     |      numbers, this truncates towards zero.
     |      
     |      If x is not a number or if base is given, then x must be a string,
     |      bytes, or bytearray instance representing an integer literal in the
     |      given base.  The literal can be preceded by '+' or '-' and be surrounded
     |      by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |      Base 0 means to interpret the base from the string as an integer literal.
     |      >>> int('0b100', base=0)
     |      4
     |  
     |  WindowType_Mask = 255
     |  
     |  X11BypassWindowManagerHint = 1024
     |  
     |  XAxis = 0
     |  
     |  XButton1 = 8
     |  
     |  XButton2 = 16
     |  
     |  YAxis = 1
     |  
     |  ZAxis = 2
     |  
     |  ZoomNativeGesture = 3
     |  
     |  black = 2
     |  
     |  blue = 9
     |  
     |  color0 = 0
     |  
     |  color1 = 1
     |  
     |  cyan = 10
     |  
     |  darkBlue = 15
     |  
     |  darkCyan = 16
     |  
     |  darkGray = 4
     |  
     |  darkGreen = 14
     |  
     |  darkMagenta = 17
     |  
     |  darkRed = 13
     |  
     |  darkYellow = 18
     |  
     |  gray = 5
     |  
     |  green = 8
     |  
     |  lightGray = 6
     |  
     |  magenta = 11
     |  
     |  red = 7
     |  
     |  transparent = 19
     |  
     |  white = 3
     |  
     |  yellow = 12
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class QtMsgType(builtins.int)
     |  int(x=0) -> integer
     |  int(x, base=10) -> integer
     |  
     |  Convert a number or string to an integer, or return 0 if no arguments
     |  are given.  If x is a number, return x.__int__().  For floating point
     |  numbers, this truncates towards zero.
     |  
     |  If x is not a number or if base is given, then x must be a string,
     |  bytes, or bytearray instance representing an integer literal in the
     |  given base.  The literal can be preceded by '+' or '-' and be surrounded
     |  by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
     |  Base 0 means to interpret the base from the string as an integer literal.
     |  >>> int('0b100', base=0)
     |  4
     |  
     |  Method resolution order:
     |      QtMsgType
     |      builtins.int
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.int:
     |  
     |  __abs__
     |      abs(self)
     |  
     |  __add__
     |      Return self+value.
     |  
     |  __and__
     |      Return self&value.
     |  
     |  __bool__
     |      self != 0
     |  
     |  __ceil__
     |      Ceiling of an Integral returns itself.
     |  
     |  __divmod__
     |      Return divmod(self, value).
     |  
     |  __float__
     |      float(self)
     |  
     |  __floor__
     |      Flooring an Integral returns itself.
     |  
     |  __floordiv__
     |      Return self//value.
     |  
     |  __format__(...) from sip.enumtype
     |      default object formatter
     |  
     |  __getnewargs__
     |  
     |  __index__
     |      Return self converted to an integer, if self is suitable for use as an index into a list.
     |  
     |  __int__
     |      int(self)
     |  
     |  __invert__
     |      ~self
     |  
     |  __lshift__
     |      Return self<<value.
     |  
     |  __mod__
     |      Return self%value.
     |  
     |  __mul__
     |      Return self*value.
     |  
     |  __neg__
     |      -self
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  __or__
     |      Return self|value.
     |  
     |  __pos__
     |      +self
     |  
     |  __pow__
     |      Return pow(self, value, mod).
     |  
     |  __radd__
     |      Return value+self.
     |  
     |  __rand__
     |      Return value&self.
     |  
     |  __rdivmod__
     |      Return divmod(value, self).
     |  
     |  __rfloordiv__
     |      Return value//self.
     |  
     |  __rlshift__
     |      Return value<<self.
     |  
     |  __rmod__
     |      Return value%self.
     |  
     |  __rmul__
     |      Return value*self.
     |  
     |  __ror__
     |      Return value|self.
     |  
     |  __round__
     |      Rounding an Integral returns itself.
     |      Rounding with an ndigits argument also returns an integer.
     |  
     |  __rpow__
     |      Return pow(value, self, mod).
     |  
     |  __rrshift__
     |      Return value>>self.
     |  
     |  __rshift__
     |      Return self>>value.
     |  
     |  __rsub__
     |      Return value-self.
     |  
     |  __rtruediv__
     |      Return value/self.
     |  
     |  __rxor__
     |      Return value^self.
     |  
     |  __sizeof__(...) from sip.enumtype
     |      __sizeof__() -> int
     |      return memory consumption of the type object
     |  
     |  __sub__
     |      Return self-value.
     |  
     |  __truediv__
     |      Return self/value.
     |  
     |  __trunc__
     |      Truncating an Integral returns itself.
     |  
     |  __xor__
     |      Return self^value.
     |  
     |  bit_length
     |      int.bit_length() -> int
     |      
     |      Number of bits necessary to represent self in binary.
     |      >>> bin(37)
     |      '0b100101'
     |      >>> (37).bit_length()
     |      6
     |  
     |  conjugate
     |      Returns self, the complex conjugate of any int.
     |  
     |  from_bytes
     |      int.from_bytes(bytes, byteorder, *, signed=False) -> int
     |      
     |      Return the integer represented by the given array of bytes.
     |      
     |      The bytes argument must be a bytes-like object (e.g. bytes or bytearray).
     |      
     |      The byteorder argument determines the byte order used to represent the
     |      integer.  If byteorder is 'big', the most significant byte is at the
     |      beginning of the byte array.  If byteorder is 'little', the most
     |      significant byte is at the end of the byte array.  To request the native
     |      byte order of the host system, use `sys.byteorder' as the byte order value.
     |      
     |      The signed keyword-only argument indicates whether two's complement is
     |      used to represent the integer.
     |  
     |  to_bytes
     |      int.to_bytes(length, byteorder, *, signed=False) -> bytes
     |      
     |      Return an array of bytes representing an integer.
     |      
     |      The integer is represented using length bytes.  An OverflowError is
     |      raised if the integer is not representable with the given number of
     |      bytes.
     |      
     |      The byteorder argument determines the byte order used to represent the
     |      integer.  If byteorder is 'big', the most significant byte is at the
     |      beginning of the byte array.  If byteorder is 'little', the most
     |      significant byte is at the end of the byte array.  To request the native
     |      byte order of the host system, use `sys.byteorder' as the byte order value.
     |      
     |      The signed keyword-only argument determines whether two's complement is
     |      used to represent the integer.  If signed is False and a negative integer
     |      is given, an OverflowError is raised.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.int:
     |  
     |  denominator
     |      the denominator of a rational number in lowest terms
     |  
     |  imag
     |      the imaginary part of a complex number
     |  
     |  numerator
     |      the numerator of a rational number in lowest terms
     |  
     |  real
     |      the real part of a complex number
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from builtins.int:
     |  
     |  __eq__ = <method-wrapper '__eq__' of sip.enumtype object>
     |      Return self==value.
     |  
     |  __ge__ = <method-wrapper '__ge__' of sip.enumtype object>
     |      Return self>=value.
     |  
     |  __getattribute__ = <method-wrapper '__getattribute__' of sip.enumtype ...
     |      Return getattr(self, name).
     |  
     |  __gt__ = <method-wrapper '__gt__' of sip.enumtype object>
     |      Return self>value.
     |  
     |  __hash__ = <method-wrapper '__hash__' of sip.enumtype object>
     |      Return hash(self).
     |  
     |  __le__ = <method-wrapper '__le__' of sip.enumtype object>
     |      Return self<=value.
     |  
     |  __lt__ = <method-wrapper '__lt__' of sip.enumtype object>
     |      Return self<value.
     |  
     |  __ne__ = <method-wrapper '__ne__' of sip.enumtype object>
     |      Return self!=value.
     |  
     |  __repr__ = <method-wrapper '__repr__' of sip.enumtype object>
     |      Return repr(self).
     |  
     |  __str__ = <method-wrapper '__str__' of sip.enumtype object>
     |      Return str(self).
    
    class pyqtBoundSignal(builtins.object)
     |  Methods defined here:
     |  
     |  __call__(self, /, *args, **kwargs)
     |      Call self as a function.
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  connect(...)
     |      connect(slot, type=Qt.AutoConnection, no_receiver_check=False)
     |      
     |      slot is either a Python callable or another signal.
     |      type is a Qt.ConnectionType.
     |      no_receiver_check is True to disable the check that the receiver's C++
     |      instance still exists when the signal is emitted.
     |  
     |  disconnect(...)
     |      disconnect([slot])
     |      
     |      slot is an optional Python callable or another signal.  If it is omitted
     |      then the signal is disconnected from everything it is connected to.
     |  
     |  emit(...)
     |      emit(*args)
     |      
     |      *args are the values that will be passed as arguments to all connected
     |      slots.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  signal
     |      The signature of the signal that would be returned by SIGNAL()
    
    class pyqtProperty(builtins.object)
     |  Methods defined here:
     |  
     |  __call__(self, /, *args, **kwargs)
     |      Call self as a function.
     |  
     |  __delete__(self, instance, /)
     |      Delete an attribute of instance.
     |  
     |  __get__(self, instance, owner, /)
     |      Return an attribute of instance, which is of type owner.
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  __set__(self, instance, value, /)
     |      Set an attribute of instance to value.
     |  
     |  deleter(...)
     |      Descriptor to change the deleter on a property.
     |  
     |  getter(...)
     |      Descriptor to change the getter on a property.
     |  
     |  read(...)
     |      Descriptor to change the getter on a property.
     |  
     |  reset(...)
     |      Descriptor to change the reset on a property.
     |  
     |  setter(...)
     |      Descriptor to change the setter on a property.
     |  
     |  write(...)
     |      Descriptor to change the setter on a property.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  fdel
     |  
     |  fget
     |  
     |  freset
     |  
     |  fset
     |  
     |  type
    
    class pyqtSignal(builtins.object)
     |  Methods defined here:
     |  
     |  __call__(self, /, *args, **kwargs)
     |      Call self as a function.
     |  
     |  __get__(self, instance, owner, /)
     |      Return an attribute of instance, which is of type owner.
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  signatures
     |      The signatures of each of the overloaded signals

FUNCTIONS
    QT_TRANSLATE_NOOP(...)
        QT_TRANSLATE_NOOP(str, str) -> str
    
    QT_TR_NOOP(...)
        QT_TR_NOOP(str) -> str
    
    QT_TR_NOOP_UTF8(...)
        QT_TR_NOOP_UTF8(str) -> str
    
    Q_ARG(...)
        Q_ARG(object, object) -> QGenericArgument
    
    Q_CLASSINFO(...)
        Q_CLASSINFO(str, str)
    
    Q_ENUM(...)
        Q_ENUM(Union[type, enum.Enum])
    
    Q_ENUMS(...)
        Q_ENUMS(*)
    
    Q_FLAG(...)
        Q_FLAG(Union[type, enum.Enum])
    
    Q_FLAGS(...)
        Q_FLAGS(*)
    
    Q_RETURN_ARG(...)
        Q_RETURN_ARG(object) -> QGenericReturnArgument
    
    bin_(...)
        bin_(QTextStream) -> QTextStream
    
    bom(...)
        bom(QTextStream) -> QTextStream
    
    center(...)
        center(QTextStream) -> QTextStream
    
    dec(...)
        dec(QTextStream) -> QTextStream
    
    endl(...)
        endl(QTextStream) -> QTextStream
    
    fixed(...)
        fixed(QTextStream) -> QTextStream
    
    flush(...)
        flush(QTextStream) -> QTextStream
    
    forcepoint(...)
        forcepoint(QTextStream) -> QTextStream
    
    forcesign(...)
        forcesign(QTextStream) -> QTextStream
    
    hex_(...)
        hex_(QTextStream) -> QTextStream
    
    left(...)
        left(QTextStream) -> QTextStream
    
    lowercasebase(...)
        lowercasebase(QTextStream) -> QTextStream
    
    lowercasedigits(...)
        lowercasedigits(QTextStream) -> QTextStream
    
    noforcepoint(...)
        noforcepoint(QTextStream) -> QTextStream
    
    noforcesign(...)
        noforcesign(QTextStream) -> QTextStream
    
    noshowbase(...)
        noshowbase(QTextStream) -> QTextStream
    
    oct_(...)
        oct_(QTextStream) -> QTextStream
    
    pyqtPickleProtocol(...)
        pyqtPickleProtocol() -> Optional[int]
    
    pyqtRemoveInputHook(...)
        pyqtRemoveInputHook()
    
    pyqtRestoreInputHook(...)
        pyqtRestoreInputHook()
    
    pyqtSetPickleProtocol(...)
        pyqtSetPickleProtocol(Optional[int])
    
    pyqtSlot(...)
        @pyqtSlot(*types, name: Optional[str], result: Optional[str])
        
        This is a decorator applied to Python methods of a QObject that marks them
        as Qt slots.
        The non-keyword arguments are the types of the slot arguments and each may
        be a Python type object or a string specifying a C++ type.
        name is the name of the slot and defaults to the name of the method.
        result is type of the value returned by the slot.
    
    qAbs(...)
        qAbs(float) -> float
    
    qAddPostRoutine(...)
        qAddPostRoutine(Callable[..., None])
    
    qAddPreRoutine(...)
        qAddPreRoutine(Callable[[], None])
    
    qChecksum(...)
        qChecksum(bytes) -> int
        qChecksum(bytes, Qt.ChecksumType) -> int
    
    qCompress(...)
        qCompress(Union[QByteArray, bytes, bytearray], compressionLevel: int = -1) -> QByteArray
    
    qCritical(...)
        qCritical(str)
    
    qDebug(...)
        qDebug(str)
    
    qEnvironmentVariable(...)
        qEnvironmentVariable(str) -> str
        qEnvironmentVariable(str, str) -> str
    
    qErrnoWarning(...)
        qErrnoWarning(int, str)
        qErrnoWarning(str)
    
    qFatal(...)
        qFatal(str)
    
    qFloatDistance(...)
        qFloatDistance(float, float) -> int
    
    qFormatLogMessage(...)
        qFormatLogMessage(QtMsgType, QMessageLogContext, str) -> str
    
    qFuzzyCompare(...)
        qFuzzyCompare(float, float) -> bool
    
    qInf(...)
        qInf() -> float
    
    qInfo(...)
        qInfo(str)
    
    qInstallMessageHandler(...)
        qInstallMessageHandler(Optional[Callable[[], None]]) -> Optional[Callable[[], None]]
    
    qIsFinite(...)
        qIsFinite(float) -> bool
    
    qIsInf(...)
        qIsInf(float) -> bool
    
    qIsNaN(...)
        qIsNaN(float) -> bool
    
    qIsNull(...)
        qIsNull(float) -> bool
    
    qQNaN(...)
        qQNaN() -> float
    
    qRegisterResourceData(...)
        qRegisterResourceData(int, bytes, bytes, bytes) -> bool
    
    qRemovePostRoutine(...)
        qRemovePostRoutine(Callable[..., None])
    
    qRound(...)
        qRound(float) -> int
    
    qRound64(...)
        qRound64(float) -> int
    
    qSNaN(...)
        qSNaN() -> float
    
    qSetFieldWidth(...)
        qSetFieldWidth(int) -> QTextStreamManipulator
    
    qSetMessagePattern(...)
        qSetMessagePattern(str)
    
    qSetPadChar(...)
        qSetPadChar(str) -> QTextStreamManipulator
    
    qSetRealNumberPrecision(...)
        qSetRealNumberPrecision(int) -> QTextStreamManipulator
    
    qSharedBuild(...)
        qSharedBuild() -> bool
    
    qUncompress(...)
        qUncompress(Union[QByteArray, bytes, bytearray]) -> QByteArray
    
    qUnregisterResourceData(...)
        qUnregisterResourceData(int, bytes, bytes, bytes) -> bool
    
    qVersion(...)
        qVersion() -> str
    
    qWarning(...)
        qWarning(str)
    
    qrand(...)
        qrand() -> int
    
    qsrand(...)
        qsrand(int)
    
    reset(...)
        reset(QTextStream) -> QTextStream
    
    right(...)
        right(QTextStream) -> QTextStream
    
    scientific(...)
        scientific(QTextStream) -> QTextStream
    
    showbase(...)
        showbase(QTextStream) -> QTextStream
    
    uppercasebase(...)
        uppercasebase(QTextStream) -> QTextStream
    
    uppercasedigits(...)
        uppercasedigits(QTextStream) -> QTextStream
    
    ws(...)
        ws(QTextStream) -> QTextStream

DATA
    PYQT_CONFIGURATION = {'sip_flags': '-n PyQt5.sip -t WS_X11 -t Qt_5_11_...
    PYQT_VERSION = 330499
    PYQT_VERSION_STR = '5.11.3'
    QT_VERSION = 330498
    QT_VERSION_STR = '5.11.2'
    QtCriticalMsg = 2
    QtDebugMsg = 0
    QtFatalMsg = 3
    QtInfoMsg = 4
    QtSystemMsg = 2
    QtWarningMsg = 1
    __license__ = mappingproxy({'Type': 'gpl'})

FILE
    /usr/local/lib/python3.6/dist-packages/PyQt5/QtCore.so


>>> 
